<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WolfInv.com.BaseObjectsLib.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.WolfInvcomBaseObjectsLibDelegates">
            <summary>包含用于 WolfInv.com.BaseObjectsLib 的存根和填充码的自定义委托</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimAmoutSerials">
            <summary>WolfInv.com.BaseObjectsLib.AmoutSerials 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimAmoutSerials.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimAmoutSerials.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimAmoutSerials.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimAmoutSerials.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimAmoutSerials.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1">
            <summary>WolfInv.com.BaseObjectsLib.BaseChance`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.#ctor(WolfInv.com.BaseObjectsLib.BaseChance{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.BaseCostGet">
            <summary>设置 BaseChance`1.get_BaseCost() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.BaseCostSetInt64">
            <summary>设置 BaseChance`1.set_BaseCost(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.ChanceCodeGet">
            <summary>设置 BaseChance`1.get_ChanceCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.ChanceCodeSetString">
            <summary>设置 BaseChance`1.set_ChanceCode(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.ChanceTypeGet">
            <summary>设置 BaseChance`1.get_ChanceType() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.ChanceTypeSetInt32">
            <summary>设置 BaseChance`1.set_ChanceType(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.ChipCountGet">
            <summary>设置 BaseChance`1.get_ChipCount() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.ChipCountSetInt32">
            <summary>设置 BaseChance`1.set_ChipCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.CostGet">
            <summary>设置 BaseChance`1.get_Cost() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.CostSetInt64">
            <summary>设置 BaseChance`1.set_Cost(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.CreateTimeGet">
            <summary>设置 BaseChance`1.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.CreateTimeSetDateTime">
            <summary>设置 BaseChance`1.set_CreateTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.CurrTimesGet">
            <summary>设置 BaseChance`1.get_CurrTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.CurrTimesSetInt32">
            <summary>设置 BaseChance`1.set_CurrTimes(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.EndExpectNoGet">
            <summary>设置 BaseChance`1.get_EndExpectNo() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.EndExpectNoSetString">
            <summary>设置 BaseChance`1.set_EndExpectNo(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.ExecDateGet">
            <summary>设置 BaseChance`1.get_ExecDate() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.ExecDateSetDateTime">
            <summary>设置 BaseChance`1.set_ExecDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.ExpectCodeGet">
            <summary>设置 BaseChance`1.get_ExpectCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.ExpectCodeSetString">
            <summary>设置 BaseChance`1.set_ExpectCode(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.GainedGet">
            <summary>设置 BaseChance`1.get_Gained() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.GainedSetDouble">
            <summary>设置 BaseChance`1.set_Gained(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.HoldTimeCntGet">
            <summary>设置 BaseChance`1.get_HoldTimeCnt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.HoldTimeCntSetInt32">
            <summary>设置 BaseChance`1.set_HoldTimeCnt(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.InputTimesGet">
            <summary>设置 BaseChance`1.get_InputTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.InputTimesSetInt32">
            <summary>设置 BaseChance`1.set_InputTimes(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.IsEndGet">
            <summary>设置 BaseChance`1.get_IsEnd() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.IsEndSetInt32">
            <summary>设置 BaseChance`1.set_IsEnd(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.ProfitGet">
            <summary>设置 BaseChance`1.get_Profit() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.ProfitSetDouble">
            <summary>设置 BaseChance`1.set_Profit(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.SignExpectNoGet">
            <summary>设置 BaseChance`1.get_SignExpectNo() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.SignExpectNoSetString">
            <summary>设置 BaseChance`1.set_SignExpectNo(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.UnitCostGet">
            <summary>设置 BaseChance`1.get_UnitCost() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.UnitCostSetInt64">
            <summary>设置 BaseChance`1.set_UnitCost(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.UpdateTimeGet">
            <summary>设置 BaseChance`1.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.UpdateTimeSetDateTime">
            <summary>设置 BaseChance`1.set_UpdateTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.strInputTimesGet">
            <summary>设置 BaseChance`1.get_strInputTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.AllInstances.strInputTimesSetString">
            <summary>设置 BaseChance`1.set_strInputTimes(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.BaseCostGet">
            <summary>设置 BaseChance`1.get_BaseCost() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.BaseCostSetInt64">
            <summary>设置 BaseChance`1.set_BaseCost(Int64 value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.ChanceCodeGet">
            <summary>设置 BaseChance`1.get_ChanceCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.ChanceCodeSetString">
            <summary>设置 BaseChance`1.set_ChanceCode(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.ChanceTypeGet">
            <summary>设置 BaseChance`1.get_ChanceType() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.ChanceTypeSetInt32">
            <summary>设置 BaseChance`1.set_ChanceType(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.ChipCountGet">
            <summary>设置 BaseChance`1.get_ChipCount() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.ChipCountSetInt32">
            <summary>设置 BaseChance`1.set_ChipCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.Constructor">
            <summary>设置 BaseChance`1.BaseChance`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.CostGet">
            <summary>设置 BaseChance`1.get_Cost() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.CostSetInt64">
            <summary>设置 BaseChance`1.set_Cost(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.CreateTimeGet">
            <summary>设置 BaseChance`1.get_CreateTime() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.CreateTimeSetDateTime">
            <summary>设置 BaseChance`1.set_CreateTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.CurrTimesGet">
            <summary>设置 BaseChance`1.get_CurrTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.CurrTimesSetInt32">
            <summary>设置 BaseChance`1.set_CurrTimes(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.EndExpectNoGet">
            <summary>设置 BaseChance`1.get_EndExpectNo() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.EndExpectNoSetString">
            <summary>设置 BaseChance`1.set_EndExpectNo(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.ExecDateGet">
            <summary>设置 BaseChance`1.get_ExecDate() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.ExecDateSetDateTime">
            <summary>设置 BaseChance`1.set_ExecDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.ExpectCodeGet">
            <summary>设置 BaseChance`1.get_ExpectCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.ExpectCodeSetString">
            <summary>设置 BaseChance`1.set_ExpectCode(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.GainedGet">
            <summary>设置 BaseChance`1.get_Gained() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.GainedSetDouble">
            <summary>设置 BaseChance`1.set_Gained(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.HoldTimeCntGet">
            <summary>设置 BaseChance`1.get_HoldTimeCnt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.HoldTimeCntSetInt32">
            <summary>设置 BaseChance`1.set_HoldTimeCnt(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.InputTimesGet">
            <summary>设置 BaseChance`1.get_InputTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.InputTimesSetInt32">
            <summary>设置 BaseChance`1.set_InputTimes(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.IsEndGet">
            <summary>设置 BaseChance`1.get_IsEnd() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.IsEndSetInt32">
            <summary>设置 BaseChance`1.set_IsEnd(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.ProfitGet">
            <summary>设置 BaseChance`1.get_Profit() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.ProfitSetDouble">
            <summary>设置 BaseChance`1.set_Profit(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.SignExpectNoGet">
            <summary>设置 BaseChance`1.get_SignExpectNo() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.SignExpectNoSetString">
            <summary>设置 BaseChance`1.set_SignExpectNo(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.UnitCostGet">
            <summary>设置 BaseChance`1.get_UnitCost() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.UnitCostSetInt64">
            <summary>设置 BaseChance`1.set_UnitCost(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.UpdateTimeGet">
            <summary>设置 BaseChance`1.get_UpdateTime() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.UpdateTimeSetDateTime">
            <summary>设置 BaseChance`1.set_UpdateTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.strInputTimesGet">
            <summary>设置 BaseChance`1.get_strInputTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseChance`1.strInputTimesSetString">
            <summary>设置 BaseChance`1.set_strInputTimes(String value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseCollection`1">
            <summary>WolfInv.com.BaseObjectsLib.BaseCollection`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseCollection`1.#ctor(WolfInv.com.BaseObjectsLib.BaseCollection{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseCollection`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseCollection`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseCollection`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseCollection`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseCollection`1.Bind(WolfInv.com.BaseObjectsLib.IBaseCollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseCollection`1.Constructor">
            <summary>设置 BaseCollection`1.BaseCollection`1() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData">
            <summary>WolfInv.com.BaseObjectsLib.BaseData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.#ctor(WolfInv.com.BaseObjectsLib.BaseData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.AllInstances.CurrCycleGet">
            <summary>设置 BaseData.get_CurrCycle() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.AllInstances.CurrCycleSetCycle">
            <summary>设置 BaseData.set_CurrCycle(Cycle value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.AllInstances.CurrDateGet">
            <summary>设置 BaseData.get_CurrDate() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.AllInstances.CurrDateSetDateTime">
            <summary>设置 BaseData.set_CurrDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.AllInstances.CurrRateGet">
            <summary>设置 BaseData.get_CurrRate() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.AllInstances.CurrRateSetPriceAdj">
            <summary>设置 BaseData.set_CurrRate(PriceAdj value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.Constructor">
            <summary>设置 BaseData.BaseData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.CurrCycleGet">
            <summary>设置 BaseData.get_CurrCycle() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.CurrCycleSetCycle">
            <summary>设置 BaseData.set_CurrCycle(Cycle value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.CurrDateGet">
            <summary>设置 BaseData.get_CurrDate() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.CurrDateSetDateTime">
            <summary>设置 BaseData.set_CurrDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.CurrRateGet">
            <summary>设置 BaseData.get_CurrRate() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.CurrRateSetPriceAdj">
            <summary>设置 BaseData.set_CurrRate(PriceAdj value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.InitData">
            <summary>设置 BaseData.InitData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseData.StaticConstructor">
            <summary>设置 BaseData.BaseData() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass">
            <summary>WolfInv.com.BaseObjectsLib.BaseDataItemClass 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.#ctor(WolfInv.com.BaseObjectsLib.BaseDataItemClass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.AllInstances.ExchangeNormalGet">
            <summary>设置 BaseDataItemClass.get_ExchangeNormal() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.AllInstances.FillByDataRowDataRow">
            <summary>设置 BaseDataItemClass.FillByDataRow(DataRow dr) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.AllInstances.FillRowDataRow">
            <summary>设置 BaseDataItemClass.FillRow(DataRow dr) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.AllInstances.IsSTGet">
            <summary>设置 BaseDataItemClass.get_IsST() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.AllInstances.IsSTInDayDateTime">
            <summary>设置 BaseDataItemClass.IsSTInDay(DateTime endt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.AllInstances.OnMarketDayCountGet">
            <summary>设置 BaseDataItemClass.get_OnMarketDayCount() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.AllInstances.SecTypeGet">
            <summary>设置 BaseDataItemClass.get_SecType() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.AllInstances.str2DateString">
            <summary>设置 BaseDataItemClass.str2Date(String str) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.Bind(WolfInv.com.BaseObjectsLib.iFillable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.Constructor">
            <summary>设置 BaseDataItemClass.BaseDataItemClass() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.ConstructorDataRow">
            <summary>设置 BaseDataItemClass.BaseDataItemClass(DataRow dr) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.ExchangeNormalGet">
            <summary>设置 BaseDataItemClass.get_ExchangeNormal() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.FillByDataRowDataRow">
            <summary>设置 BaseDataItemClass.FillByDataRow(DataRow dr) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.FillRowDataRow">
            <summary>设置 BaseDataItemClass.FillRow(DataRow dr) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.IsSTGet">
            <summary>设置 BaseDataItemClass.get_IsST() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.IsSTInDayDateTime">
            <summary>设置 BaseDataItemClass.IsSTInDay(DateTime endt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.OnMarketDayCountGet">
            <summary>设置 BaseDataItemClass.get_OnMarketDayCount() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.SecTypeGet">
            <summary>设置 BaseDataItemClass.get_SecType() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataItemClass.str2DateString">
            <summary>设置 BaseDataItemClass.str2Date(String str) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable">
            <summary>WolfInv.com.BaseObjectsLib.BaseDataTable 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.#ctor(WolfInv.com.BaseObjectsLib.BaseDataTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.AllInstances.AvaliableDataGet">
            <summary>设置 BaseDataTable.get_AvaliableData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.AllInstances.ItemGetInt32">
            <summary>设置 BaseDataTable.get_Item(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.AvaliableDataGet">
            <summary>设置 BaseDataTable.get_AvaliableData() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.Bind(System.Linq.IQueryable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.Bind(WolfInv.com.BaseObjectsLib.iListFillable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.Bind(System.Collections.Generic.IEnumerable{WolfInv.com.BaseObjectsLib.iFillable})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.Constructor">
            <summary>设置 BaseDataTable.BaseDataTable() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.ConstructorDataTable">
            <summary>设置 BaseDataTable.BaseDataTable(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.ConstructorMTable">
            <summary>设置 BaseDataTable.BaseDataTable(MTable tb) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimBaseDataTable.ItemGetInt32">
            <summary>设置 BaseDataTable.get_Item(Int32 id) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1">
            <summary>WolfInv.com.BaseObjectsLib.ChanceClass`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.#ctor(WolfInv.com.BaseObjectsLib.ChanceClass{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.GUIDGet">
            <summary>设置 ChanceClass`1.get_GUID() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.GUIDSetString">
            <summary>设置 ChanceClass`1.set_GUID(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.GetCodeKeyBoolean">
            <summary>设置 ChanceClass`1.GetCodeKey(Boolean bySer) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.GetTypeCode">
            <summary>设置 ChanceClass`1.GetTypeCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.IncrementTypeGet">
            <summary>设置 ChanceClass`1.get_IncrementType() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.IncrementTypeSetInterestType">
            <summary>设置 ChanceClass`1.set_IncrementType(InterestType value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.MatchedExpectDataOfT0">
            <summary>设置 ChanceClass`1.Matched(ExpectData`1&lt;!0&gt; data) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.MatchedExpectDataOfT0Int32Out">
            <summary>设置 ChanceClass`1.Matched(ExpectData`1&lt;!0&gt; data, Int32&amp; MatchCnt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.MatchedExpectDataOfT0Int32OutBoolean">
            <summary>设置 ChanceClass`1.Matched(ExpectData`1&lt;!0&gt; data, Int32&amp; MatchCnt, Boolean getRev) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.MatchedExpectListOfT0Int32Out">
            <summary>设置 ChanceClass`1.Matched(ExpectList`1&lt;!0&gt; data, Int32&amp; MatchCnt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.MatchedExpectListOfT0Int32OutBoolean">
            <summary>设置 ChanceClass`1.Matched(ExpectList`1&lt;!0&gt; el, Int32&amp; MatchCnt, Boolean getRev) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToBooleanIFormatProvider">
            <summary>设置 ChanceClass`1.ToBoolean(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToByteIFormatProvider">
            <summary>设置 ChanceClass`1.ToByte(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToCharIFormatProvider">
            <summary>设置 ChanceClass`1.ToChar(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToDateTimeIFormatProvider">
            <summary>设置 ChanceClass`1.ToDateTime(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToDecimalIFormatProvider">
            <summary>设置 ChanceClass`1.ToDecimal(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToDoubleIFormatProvider">
            <summary>设置 ChanceClass`1.ToDouble(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToInt16IFormatProvider">
            <summary>设置 ChanceClass`1.ToInt16(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToInt32IFormatProvider">
            <summary>设置 ChanceClass`1.ToInt32(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToInt64IFormatProvider">
            <summary>设置 ChanceClass`1.ToInt64(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToSByteIFormatProvider">
            <summary>设置 ChanceClass`1.ToSByte(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToSingleIFormatProvider">
            <summary>设置 ChanceClass`1.ToSingle(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToStringIFormatProvider">
            <summary>设置 ChanceClass`1.ToString(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToTypeTypeIFormatProvider">
            <summary>设置 ChanceClass`1.ToType(Type conversionType, IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToUInt16IFormatProvider">
            <summary>设置 ChanceClass`1.ToUInt16(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToUInt32IFormatProvider">
            <summary>设置 ChanceClass`1.ToUInt32(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.ToUInt64IFormatProvider">
            <summary>设置 ChanceClass`1.ToUInt64(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.TracerableGet">
            <summary>设置 ChanceClass`1.get_Tracerable() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.AllInstances.isPureGet">
            <summary>设置 ChanceClass`1.get_isPure() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.Constructor">
            <summary>设置 ChanceClass`1.ChanceClass`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.FillNListOfStringListOfStringStringInt32Int32">
            <summary>设置 ChanceClass`1.FillN(List`1&lt;String&gt; list, List`1&lt;String&gt; subCode, String code, Int32 start, Int32 n) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.GUIDGet">
            <summary>设置 ChanceClass`1.get_GUID() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.GUIDSetString">
            <summary>设置 ChanceClass`1.set_GUID(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.GetCodeKeyBoolean">
            <summary>设置 ChanceClass`1.GetCodeKey(Boolean bySer) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.GetTypeCode">
            <summary>设置 ChanceClass`1.GetTypeCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.IncrementTypeGet">
            <summary>设置 ChanceClass`1.get_IncrementType() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.IncrementTypeSetInterestType">
            <summary>设置 ChanceClass`1.set_IncrementType(InterestType value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.IsBigOrSmallString">
            <summary>设置 ChanceClass`1.IsBigOrSmall(String code) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.IsPureCodeString">
            <summary>设置 ChanceClass`1.IsPureCode(String code) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.IsSingleOrDoubleChanceString">
            <summary>设置 ChanceClass`1.IsSingleOrDoubleChance(String code) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.MatchedExpectDataOfT0">
            <summary>设置 ChanceClass`1.Matched(ExpectData`1&lt;!0&gt; data) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.MatchedExpectDataOfT0Int32Out">
            <summary>设置 ChanceClass`1.Matched(ExpectData`1&lt;!0&gt; data, Int32&amp; MatchCnt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.MatchedExpectListOfT0Int32Out">
            <summary>设置 ChanceClass`1.Matched(ExpectList`1&lt;!0&gt; data, Int32&amp; MatchCnt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToBooleanIFormatProvider">
            <summary>设置 ChanceClass`1.ToBoolean(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToByteIFormatProvider">
            <summary>设置 ChanceClass`1.ToByte(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToCharIFormatProvider">
            <summary>设置 ChanceClass`1.ToChar(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToDateTimeIFormatProvider">
            <summary>设置 ChanceClass`1.ToDateTime(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToDecimalIFormatProvider">
            <summary>设置 ChanceClass`1.ToDecimal(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToDoubleIFormatProvider">
            <summary>设置 ChanceClass`1.ToDouble(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToInt16IFormatProvider">
            <summary>设置 ChanceClass`1.ToInt16(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToInt32IFormatProvider">
            <summary>设置 ChanceClass`1.ToInt32(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToInt64IFormatProvider">
            <summary>设置 ChanceClass`1.ToInt64(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToSByteIFormatProvider">
            <summary>设置 ChanceClass`1.ToSByte(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToSingleIFormatProvider">
            <summary>设置 ChanceClass`1.ToSingle(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToStringIFormatProvider">
            <summary>设置 ChanceClass`1.ToString(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToTypeTypeIFormatProvider">
            <summary>设置 ChanceClass`1.ToType(Type conversionType, IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToUInt16IFormatProvider">
            <summary>设置 ChanceClass`1.ToUInt16(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToUInt32IFormatProvider">
            <summary>设置 ChanceClass`1.ToUInt32(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.ToUInt64IFormatProvider">
            <summary>设置 ChanceClass`1.ToUInt64(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.TracerableGet">
            <summary>设置 ChanceClass`1.get_Tracerable() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.getAllSubCodeStringInt32">
            <summary>设置 ChanceClass`1.getAllSubCode(String OrgCode, Int32 subCodeLng) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.getChipsByCodeString">
            <summary>设置 ChanceClass`1.getChipsByCode(String strcode) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.getRevChanceString">
            <summary>设置 ChanceClass`1.getRevChance(String code) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.getSameNoCntStringString">
            <summary>设置 ChanceClass`1.getSameNoCnt(String code1, String code2) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.isBSString">
            <summary>设置 ChanceClass`1.isBS(String PureCode) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.isPureGet">
            <summary>设置 ChanceClass`1.get_isPure() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimChanceClass`1.isSDString">
            <summary>设置 ChanceClass`1.isSD(String PureCode) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimClassOperateTool">
            <summary>WolfInv.com.BaseObjectsLib.ClassOperateTool 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimClassOperateTool.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimClassOperateTool.#ctor(WolfInv.com.BaseObjectsLib.ClassOperateTool)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimClassOperateTool.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimClassOperateTool.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimClassOperateTool.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimClassOperateTool.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimClassOperateTool.Constructor">
            <summary>设置 ClassOperateTool.ClassOperateTool() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimClassOperateTool.getAllSubClassType">
            <summary>设置 ClassOperateTool.getAllSubClass(Type ParentClass) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimClassOperateTool.getAllSubClassTypeStringString">
            <summary>设置 ClassOperateTool.getAllSubClass(Type ParentClass, String TextName, String ValueName) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimClassOperateTool.getInstanceByTypeType">
            <summary>设置 ClassOperateTool.getInstanceByType(Type className) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimCommExpectListProcess`1">
            <summary>WolfInv.com.BaseObjectsLib.CommExpectListProcess`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimCommExpectListProcess`1.#ctor(WolfInv.com.BaseObjectsLib.CommExpectListProcess{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimCommExpectListProcess`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimCommExpectListProcess`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimCommExpectListProcess`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimCommExpectListProcess`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimCommExpectListProcess`1.Bind(WolfInv.com.BaseObjectsLib.ICommExpectListProcess{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimCommExpectListProcess`1.ConstructorExpectListOfT0">
            <summary>设置 CommExpectListProcess`1.CommExpectListProcess`1(ExpectList`1&lt;!0&gt; _data) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult">
            <summary>WolfInv.com.BaseObjectsLib.CommResult 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult.#ctor(WolfInv.com.BaseObjectsLib.CommResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult.Constructor">
            <summary>设置 CommResult.CommResult() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult`1">
            <summary>WolfInv.com.BaseObjectsLib.CommResult`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult`1.#ctor(WolfInv.com.BaseObjectsLib.CommResult{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimCommResult`1.Constructor">
            <summary>设置 CommResult`1.CommResult`1() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions">
            <summary>WolfInv.com.BaseObjectsLib.ConvertionExtensions 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.CloneObject">
            <summary>设置 ConvertionExtensions.Clone(Object obj) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.CloneOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>设置 ConvertionExtensions.Clone(!!0 obj) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.ConvertToIConvertibleType">
            <summary>设置 ConvertionExtensions.ConvertTo(IConvertible convertibleValue, Type T) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.ConvertToOf1IConvertible``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IConvertible,``0})">
            <summary>设置 ConvertionExtensions.ConvertTo(IConvertible convertibleValue) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.CopyToOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 ConvertionExtensions.CopyTo(Object obj) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.CreateInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 ConvertionExtensions.CreateInstance() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.CreateInstanceType">
            <summary>设置 ConvertionExtensions.CreateInstance(Type t) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.EqualObjectStringFuncOfObjectObjectObject">
            <summary>设置 ConvertionExtensions.Equal(Object tdoc, String keyname, Func`2&lt;Object,Object&gt; act, Object val) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.EqualObjectStringObject">
            <summary>设置 ConvertionExtensions.Equal(Object tdoc, String keyname, Object val) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.GetAllPropertiesOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.Dictionary{System.String,System.Type}})">
            <summary>设置 ConvertionExtensions.GetAllProperties() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.GetAllPropertiesType">
            <summary>设置 ConvertionExtensions.GetAllProperties(Type T) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.GetValueObjectString">
            <summary>设置 ConvertionExtensions.GetValue(Object tdoc, String keyname) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.GetValueOf1ObjectString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.String,``0})">
            <summary>设置 ConvertionExtensions.GetValue(Object tdoc, String keyname) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.GetValueOf2FuncOfM0String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},System.String,``1})">
            <summary>设置 ConvertionExtensions.GetValue(Func`1&lt;!!0&gt; keynameFunc, String keyname) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.GetValueOf2M0String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,``1})">
            <summary>设置 ConvertionExtensions.GetValue(!!0 tdoc, String keyname) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.GetValueOf3M0FuncOfM0M1String``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Func{``0,``1},System.String,``2})">
            <summary>设置 ConvertionExtensions.GetValue(!!0 Ptdoc, Func`2&lt;!!0,!!1&gt; keynameFunc, String keyname) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.SetValueOf2M0StringM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,``1,System.Boolean})">
            <summary>设置 ConvertionExtensions.SetValue(!!0 tdoc, String keyname, !!1 Newval) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimConvertionExtensions.SetValueOf3M0FuncOfM0M1StringM2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Func{``0,``1},System.String,``2,System.Boolean})">
            <summary>设置 ConvertionExtensions.SetValue(!!0 Ptdoc, Func`2&lt;!!0,!!1&gt; func, String keyname, !!2 Newval) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1">
            <summary>WolfInv.com.BaseObjectsLib.DataFrame`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.#ctor(WolfInv.com.BaseObjectsLib.DataFrame{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.AllInstances.GetDataDataTable">
            <summary>设置 DataFrame`1.GetData(DataTable dt) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.Constructor">
            <summary>设置 DataFrame`1.DataFrame`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.CreatorStringDataTable">
            <summary>设置 DataFrame`1.Creator(String strClassName, DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.CreatorStringIDictionaryOfStringType">
            <summary>设置 DataFrame`1.Creator(String ClassName, IDictionary`2&lt;String,Type&gt; Properties) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.CreatorStringInt32">
            <summary>设置 DataFrame`1.Creator(String ClassName, Int32 PropertiesCount) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataFrame`1.GetDataDataTable">
            <summary>设置 DataFrame`1.GetData(DataTable dt) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDataListConverter`1">
            <summary>WolfInv.com.BaseObjectsLib.DataListConverter`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataListConverter`1.#ctor(WolfInv.com.BaseObjectsLib.DataListConverter{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDataListConverter`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataListConverter`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataListConverter`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataListConverter`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataListConverter`1.Constructor">
            <summary>设置 DataListConverter`1.DataListConverter`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataListConverter`1.ToDataSetListOfT0String">
            <summary>设置 DataListConverter`1.ToDataSet(List`1&lt;!0&gt; list, String keyName) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataListConverter`1.ToDirectionaryMongoReturnDataListOfT0String">
            <summary>设置 DataListConverter`1.ToDirectionary(MongoReturnDataList`1&lt;!0&gt; list, String keyName) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff">
            <summary>WolfInv.com.BaseObjectsLib.DataPointBuff 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.#ctor(WolfInv.com.BaseObjectsLib.DataPointBuff)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.AllInstances.HistoryDateListGet">
            <summary>设置 DataPointBuff.get_HistoryDateList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.AllInstances.HistoryDateListSetListOfString">
            <summary>设置 DataPointBuff.set_HistoryDateList(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.AllInstances.SecurityCodesGet">
            <summary>设置 DataPointBuff.get_SecurityCodes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.AllInstances.SecurityCodesSetStringArray">
            <summary>设置 DataPointBuff.set_SecurityCodes(String[] value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.AllInstances.SecurityInfoListGet">
            <summary>设置 DataPointBuff.get_SecurityInfoList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.AllInstances.SecurityInfoListSetDictionaryOfStringStockInfoMongoData">
            <summary>设置 DataPointBuff.set_SecurityInfoList(Dictionary`2&lt;String,StockInfoMongoData&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.AllInstances.XDXRListGet">
            <summary>设置 DataPointBuff.get_XDXRList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.AllInstances.XDXRListSetMongoDataDictionaryOfXDXRData">
            <summary>设置 DataPointBuff.set_XDXRList(MongoDataDictionary`1&lt;XDXRData&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.AllInstances.getGrpCodesGet">
            <summary>设置 DataPointBuff.get_getGrpCodes() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.Constructor">
            <summary>设置 DataPointBuff.DataPointBuff() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.ConstructorDataTypePoint">
            <summary>设置 DataPointBuff.DataPointBuff(DataTypePoint obj) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.HistoryDateListGet">
            <summary>设置 DataPointBuff.get_HistoryDateList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.HistoryDateListSetListOfString">
            <summary>设置 DataPointBuff.set_HistoryDateList(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.SecurityCodesGet">
            <summary>设置 DataPointBuff.get_SecurityCodes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.SecurityCodesSetStringArray">
            <summary>设置 DataPointBuff.set_SecurityCodes(String[] value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.SecurityInfoListGet">
            <summary>设置 DataPointBuff.get_SecurityInfoList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.SecurityInfoListSetDictionaryOfStringStockInfoMongoData">
            <summary>设置 DataPointBuff.set_SecurityInfoList(Dictionary`2&lt;String,StockInfoMongoData&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.XDXRListGet">
            <summary>设置 DataPointBuff.get_XDXRList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.XDXRListSetMongoDataDictionaryOfXDXRData">
            <summary>设置 DataPointBuff.set_XDXRList(MongoDataDictionary`1&lt;XDXRData&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataPointBuff.getGrpCodesGet">
            <summary>设置 DataPointBuff.get_getGrpCodes() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx">
            <summary>WolfInv.com.BaseObjectsLib.DataTableEx 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.#ctor(WolfInv.com.BaseObjectsLib.DataTableEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.AllInstances.Copy">
            <summary>设置 DataTableEx.Copy() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.AllInstances.getColumnDataInt32ListOfDoubleRef">
            <summary>设置 DataTableEx.getColumnData(Int32 colindex, List`1&lt;Double&gt;&amp; retList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.AllInstances.getColumnDataInt32ListOfInt32Ref">
            <summary>设置 DataTableEx.getColumnData(Int32 colindex, List`1&lt;Int32&gt;&amp; retList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.AllInstances.getColumnDataInt32ListOfStringRef">
            <summary>设置 DataTableEx.getColumnData(Int32 colindex, List`1&lt;String&gt;&amp; retList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.AllInstances.getColumnDataStringListOfDoubleRef">
            <summary>设置 DataTableEx.getColumnData(String colname, List`1&lt;Double&gt;&amp; retList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.AllInstances.getColumnDataStringListOfInt32Ref">
            <summary>设置 DataTableEx.getColumnData(String colname, List`1&lt;Int32&gt;&amp; retList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.AllInstances.getColumnDataStringListOfStringRef">
            <summary>设置 DataTableEx.getColumnData(String colname, List`1&lt;String&gt;&amp; retList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.AllInstances.getRowByKeyAndValStringObject">
            <summary>设置 DataTableEx.getRowByKeyAndVal(String key, Object val) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.AllInstances.setRowByKeyAndValDataRowStringString">
            <summary>设置 DataTableEx.setRowByKeyAndVal(DataRow dr, String key, String val) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.Bind(System.ComponentModel.IListSource)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.Bind(System.ComponentModel.ISupportInitialize)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.Bind(System.ComponentModel.ISupportInitializeNotification)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.Bind(System.Xml.Serialization.IXmlSerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.Bind(System.IServiceProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.Constructor">
            <summary>设置 DataTableEx.DataTableEx() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.Copy">
            <summary>设置 DataTableEx.Copy() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.getColumnDataInt32ListOfDoubleRef">
            <summary>设置 DataTableEx.getColumnData(Int32 colindex, List`1&lt;Double&gt;&amp; retList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.getColumnDataInt32ListOfInt32Ref">
            <summary>设置 DataTableEx.getColumnData(Int32 colindex, List`1&lt;Int32&gt;&amp; retList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.getColumnDataInt32ListOfStringRef">
            <summary>设置 DataTableEx.getColumnData(Int32 colindex, List`1&lt;String&gt;&amp; retList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.getColumnDataStringListOfDoubleRef">
            <summary>设置 DataTableEx.getColumnData(String colname, List`1&lt;Double&gt;&amp; retList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.getColumnDataStringListOfInt32Ref">
            <summary>设置 DataTableEx.getColumnData(String colname, List`1&lt;Int32&gt;&amp; retList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.getColumnDataStringListOfStringRef">
            <summary>设置 DataTableEx.getColumnData(String colname, List`1&lt;String&gt;&amp; retList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.getRowByKeyAndValStringObject">
            <summary>设置 DataTableEx.getRowByKeyAndVal(String key, Object val) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTableEx.setRowByKeyAndValDataRowStringString">
            <summary>设置 DataTableEx.setRowByKeyAndVal(DataRow dr, String key, String val) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTypePoint">
            <summary>WolfInv.com.BaseObjectsLib.DataTypePoint 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTypePoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTypePoint.#ctor(WolfInv.com.BaseObjectsLib.DataTypePoint)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTypePoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTypePoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTypePoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTypePoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTypePoint.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTypePoint.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDataTypePoint.ConstructorStringDictionaryOfStringString">
            <summary>设置 DataTypePoint.DataTypePoint(String name, Dictionary`2&lt;String,String&gt; list) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1">
            <summary>WolfInv.com.BaseObjectsLib.DbChanceList`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.#ctor(WolfInv.com.BaseObjectsLib.DbChanceList{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AddKeyValuePairOfNullableOfInt64ChanceClassOfT0">
            <summary>设置 DbChanceList`1.Add(KeyValuePair`2&lt;Nullable`1&lt;Int64&gt;,ChanceClass`1&lt;!0&gt;&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AddNullableOfInt64ChanceClassOfT0">
            <summary>设置 DbChanceList`1.Add(Nullable`1&lt;Int64&gt; key, ChanceClass`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.AddKeyValuePairOfNullableOfInt64ChanceClassOfT0">
            <summary>设置 DbChanceList`1.Add(KeyValuePair`2&lt;Nullable`1&lt;Int64&gt;,ChanceClass`1&lt;!0&gt;&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.AddNullableOfInt64ChanceClassOfT0">
            <summary>设置 DbChanceList`1.Add(Nullable`1&lt;Int64&gt; key, ChanceClass`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.Clear">
            <summary>设置 DbChanceList`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.ContainsKeyNullableOfInt64">
            <summary>设置 DbChanceList`1.ContainsKey(Nullable`1&lt;Int64&gt; key) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.ContainsKeyValuePairOfNullableOfInt64ChanceClassOfT0">
            <summary>设置 DbChanceList`1.Contains(KeyValuePair`2&lt;Nullable`1&lt;Int64&gt;,ChanceClass`1&lt;!0&gt;&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.CopyToKeyValuePairOfNullableOfInt64ChanceClassOfT0ArrayInt32">
            <summary>设置 DbChanceList`1.CopyTo(KeyValuePair`2&lt;Nullable`1&lt;Int64&gt;,ChanceClass`1&lt;!0&gt;&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.CountGet">
            <summary>设置 DbChanceList`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.FillByTableDataTable">
            <summary>设置 DbChanceList`1.FillByTable(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.GetEnumerator">
            <summary>设置 DbChanceList`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.IsReadOnlyGet">
            <summary>设置 DbChanceList`1.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.ItemGetNullableOfInt64">
            <summary>设置 DbChanceList`1.get_Item(Nullable`1&lt;Int64&gt; key) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.ItemSetNullableOfInt64ChanceClassOfT0">
            <summary>设置 DbChanceList`1.set_Item(Nullable`1&lt;Int64&gt; key, ChanceClass`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.KeysGet">
            <summary>设置 DbChanceList`1.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.RemoveKeyValuePairOfNullableOfInt64ChanceClassOfT0">
            <summary>设置 DbChanceList`1.Remove(KeyValuePair`2&lt;Nullable`1&lt;Int64&gt;,ChanceClass`1&lt;!0&gt;&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.RemoveNullableOfInt64">
            <summary>设置 DbChanceList`1.Remove(Nullable`1&lt;Int64&gt; key) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 DbChanceList`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.TableGet">
            <summary>设置 DbChanceList`1.get_Table() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.TryGetValueNullableOfInt64ChanceClassOfT0Out">
            <summary>设置 DbChanceList`1.TryGetValue(Nullable`1&lt;Int64&gt; key, ChanceClass`1&lt;!0&gt;&amp; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.AllInstances.ValuesGet">
            <summary>设置 DbChanceList`1.get_Values() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Nullable{System.Int64},WolfInv.com.BaseObjectsLib.ChanceClass{`0}}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Nullable{System.Int64},WolfInv.com.BaseObjectsLib.ChanceClass{`0}}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.Bind(System.Collections.Generic.IDictionary{System.Nullable{System.Int64},WolfInv.com.BaseObjectsLib.ChanceClass{`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.Clear">
            <summary>设置 DbChanceList`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.Constructor">
            <summary>设置 DbChanceList`1.DbChanceList`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.ConstructorDataTable">
            <summary>设置 DbChanceList`1.DbChanceList`1(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.ContainsKeyNullableOfInt64">
            <summary>设置 DbChanceList`1.ContainsKey(Nullable`1&lt;Int64&gt; key) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.ContainsKeyValuePairOfNullableOfInt64ChanceClassOfT0">
            <summary>设置 DbChanceList`1.Contains(KeyValuePair`2&lt;Nullable`1&lt;Int64&gt;,ChanceClass`1&lt;!0&gt;&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.CopyToKeyValuePairOfNullableOfInt64ChanceClassOfT0ArrayInt32">
            <summary>设置 DbChanceList`1.CopyTo(KeyValuePair`2&lt;Nullable`1&lt;Int64&gt;,ChanceClass`1&lt;!0&gt;&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.CountGet">
            <summary>设置 DbChanceList`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.FillByTableDataTable">
            <summary>设置 DbChanceList`1.FillByTable(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.GetEnumerator">
            <summary>设置 DbChanceList`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.IsReadOnlyGet">
            <summary>设置 DbChanceList`1.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.ItemGetNullableOfInt64">
            <summary>设置 DbChanceList`1.get_Item(Nullable`1&lt;Int64&gt; key) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.ItemSetNullableOfInt64ChanceClassOfT0">
            <summary>设置 DbChanceList`1.set_Item(Nullable`1&lt;Int64&gt; key, ChanceClass`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.KeysGet">
            <summary>设置 DbChanceList`1.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.RemoveKeyValuePairOfNullableOfInt64ChanceClassOfT0">
            <summary>设置 DbChanceList`1.Remove(KeyValuePair`2&lt;Nullable`1&lt;Int64&gt;,ChanceClass`1&lt;!0&gt;&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.RemoveNullableOfInt64">
            <summary>设置 DbChanceList`1.Remove(Nullable`1&lt;Int64&gt; key) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 DbChanceList`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.TableGet">
            <summary>设置 DbChanceList`1.get_Table() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.TryGetValueNullableOfInt64ChanceClassOfT0Out">
            <summary>设置 DbChanceList`1.TryGetValue(Nullable`1&lt;Int64&gt; key, ChanceClass`1&lt;!0&gt;&amp; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDbChanceList`1.ValuesGet">
            <summary>设置 DbChanceList`1.get_Values() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass">
            <summary>WolfInv.com.BaseObjectsLib.DetailStringClass 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.#ctor(WolfInv.com.BaseObjectsLib.DetailStringClass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.AllInstances.CopyToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.DetailStringClass,``0})">
            <summary>设置 DetailStringClass.CopyTo() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.AllInstances.SetDefaultValueAttribute">
            <summary>设置 DetailStringClass.SetDefaultValueAttribute() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.AllInstances.ToDetailString">
            <summary>设置 DetailStringClass.ToDetailString() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.AllInstances.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.AllInstances.ToXml">
            <summary>设置 DetailStringClass.ToXml() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.AllInstances.getValueString">
            <summary>设置 DetailStringClass.getValue(String strFieldName) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.Constructor">
            <summary>设置 DetailStringClass.DetailStringClass() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.CopyToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 DetailStringClass.CopyTo() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.GetObjectByXmlOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 DetailStringClass.GetObjectByXml(String str) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.GetObjectByXmlStringType">
            <summary>设置 DetailStringClass.GetObjectByXml(String str, Type objtpye) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.SetDefaultValueAttribute">
            <summary>设置 DetailStringClass.SetDefaultValueAttribute() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.ToDetailString">
            <summary>设置 DetailStringClass.ToDetailString() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.ToString">
            <summary>设置 DetailStringClass.ToString() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.ToXml">
            <summary>设置 DetailStringClass.ToXml() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.getObjectListByXmlOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 DetailStringClass.getObjectListByXml(String strXml) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.getValueString">
            <summary>设置 DetailStringClass.getValue(String strFieldName) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDetailStringClass.getXmlByObjectListOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.String})">
            <summary>设置 DetailStringClass.getXmlByObjectList(List`1&lt;!!0&gt; list) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass">
            <summary>WolfInv.com.BaseObjectsLib.DisplayAsTableClass 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.#ctor(WolfInv.com.BaseObjectsLib.DisplayAsTableClass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.AllInstances.FillByTableOf1DataTable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.DisplayAsTableClass,System.Data.DataTable,System.Collections.Generic.List{``0}})">
            <summary>设置 DisplayAsTableClass.FillByTable(DataTable dt) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.AllInstances.FillByTableOf1DataTableListOfMemberInfoRef``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{WolfInv.com.BaseObjectsLib.DisplayAsTableClass,System.Data.DataTable,System.Collections.Generic.List{System.Reflection.MemberInfo},System.Collections.Generic.List{``0}})">
            <summary>设置 DisplayAsTableClass.FillByTable(DataTable dt, List`1&lt;MemberInfo&gt;&amp; TableBuffs) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.Constructor">
            <summary>设置 DisplayAsTableClass.DisplayAsTableClass() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.FillByTableOf1DataTable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable,System.Collections.Generic.List{``0}})">
            <summary>设置 DisplayAsTableClass.FillByTable(DataTable dt) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.FillByTableOf1DataTableListOfMemberInfoRef``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{System.Data.DataTable,System.Collections.Generic.List{System.Reflection.MemberInfo},System.Collections.Generic.List{``0}})">
            <summary>设置 DisplayAsTableClass.FillByTable(DataTable dt, List`1&lt;MemberInfo&gt;&amp; TableBuffs) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.ToTableOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Data.DataTable})">
            <summary>设置 DisplayAsTableClass.ToTable(List`1&lt;!!0&gt; list) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.ToTableOf1ListOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Boolean,System.Data.DataTable})">
            <summary>设置 DisplayAsTableClass.ToTable(List`1&lt;!!0&gt; list, Boolean OnlyDisplayDefName) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.ToTableOf1ListOfM0BooleanBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Boolean,System.Boolean,System.Data.DataTable})">
            <summary>设置 DisplayAsTableClass.ToTable(List`1&lt;!!0&gt; list, Boolean UseDisplayNameAsColumnName, Boolean OnlyDisplayDefName) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimDisplayAsTableClass.ToTableOf1ListOfM0BooleanBooleanDictionaryOfStringMemberInfoRef``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{System.Collections.Generic.List{``0},System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Reflection.MemberInfo},System.Data.DataTable})">
            <summary>设置 DisplayAsTableClass.ToTable(List`1&lt;!!0&gt; list, Boolean UseDisplayNameAsColumnName, Boolean OnlyDisplayDefName, Dictionary`2&lt;String,MemberInfo&gt;&amp; DisIs) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper">
            <summary>WolfInv.com.BaseObjectsLib.EnumHelper 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.GetDescriptionAndValueType">
            <summary>设置 EnumHelper.GetDescriptionAndValue(Type enumType) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.GetDescriptionObject">
            <summary>设置 EnumHelper.GetDescription(Object o) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.GetEnumDictionaryItemsType">
            <summary>设置 EnumHelper.GetEnumDictionaryItems(Type enumType) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.GetEnumDictionaryType">
            <summary>设置 EnumHelper.GetEnumDictionary(Type enumType) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.GetEnumStringFromEnumValueType">
            <summary>设置 EnumHelper.GetEnumStringFromEnumValue(Type enumType) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.GetEnumValueNameItemsType">
            <summary>设置 EnumHelper.GetEnumValueNameItems(Type enumType) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.GetNVCFromEnumValueType">
            <summary>设置 EnumHelper.GetNVCFromEnumValue(Type enumType) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.LoadEnumTypeDictAssembly">
            <summary>设置 EnumHelper.LoadEnumTypeDict(Assembly assembly) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumDisplayNameAttribute">
            <summary>WolfInv.com.BaseObjectsLib.EnumHelper+EnumDisplayNameAttribute 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumDisplayNameAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumDisplayNameAttribute.#ctor(WolfInv.com.BaseObjectsLib.EnumHelper.EnumDisplayNameAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumDisplayNameAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumDisplayNameAttribute.AllInstances.DisplayNameGet">
            <summary>设置 EnumDisplayNameAttribute.get_DisplayName() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumDisplayNameAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumDisplayNameAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumDisplayNameAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumDisplayNameAttribute.ConstructorString">
            <summary>设置 EnumDisplayNameAttribute.EnumDisplayNameAttribute(String displayName) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumDisplayNameAttribute.DisplayNameGet">
            <summary>设置 EnumDisplayNameAttribute.get_DisplayName() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumExt">
            <summary>WolfInv.com.BaseObjectsLib.EnumHelper+EnumExt 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumExt.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumExt.#ctor(WolfInv.com.BaseObjectsLib.EnumHelper.EnumExt)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumExt.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumExt.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumExt.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumExt.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumExt.Constructor">
            <summary>设置 EnumExt.EnumExt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ShimEnumExt.GetEnumDisplayNameObject">
            <summary>设置 EnumExt.GetEnumDisplayName(Object o) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.StaticConstructor">
            <summary>设置 EnumHelper.EnumHelper() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ToEnumDescriptionStringInt32Type">
            <summary>设置 EnumHelper.ToEnumDescriptionString(Int32 value, Type enumType) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.ToEnumStringInt32Type">
            <summary>设置 EnumHelper.ToEnumString(Int32 value, Type enumType) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.TryToGetEnumValueByNameTypeString">
            <summary>设置 EnumHelper.TryToGetEnumValueByName(Type enumType, String name) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.TryToGetEnumValueNameItemsType">
            <summary>设置 EnumHelper.TryToGetEnumValueNameItems(Type enumType) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimEnumHelper.TrytoGetEnumTypeAssemblyString">
            <summary>设置 EnumHelper.TrytoGetEnumType(Assembly assembly, String typeName) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData">
            <summary>WolfInv.com.BaseObjectsLib.ExchangeMongoData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.#ctor(WolfInv.com.BaseObjectsLib.ExchangeMongoData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.ChgRateGet">
            <summary>设置 ExchangeMongoData.get_ChgRate() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.ToDataSetOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.ExchangeMongoData,System.Collections.Generic.List{``0},System.Data.DataSet})">
            <summary>设置 ExchangeMongoData.ToDataSet(List`1&lt;!!0&gt; list) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.amountGet">
            <summary>设置 ExchangeMongoData.get_amount() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.amountSetDouble">
            <summary>设置 ExchangeMongoData.set_amount(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.closeGet">
            <summary>设置 ExchangeMongoData.get_close() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.closeSetDouble">
            <summary>设置 ExchangeMongoData.set_close(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.codeGet">
            <summary>设置 ExchangeMongoData.get_code() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.codeSetString">
            <summary>设置 ExchangeMongoData.set_code(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.dateGet">
            <summary>设置 ExchangeMongoData.get_date() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.dateSetString">
            <summary>设置 ExchangeMongoData.set_date(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.date_stampGet">
            <summary>设置 ExchangeMongoData.get_date_stamp() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.date_stampSetDouble">
            <summary>设置 ExchangeMongoData.set_date_stamp(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.highGet">
            <summary>设置 ExchangeMongoData.get_high() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.highSetDouble">
            <summary>设置 ExchangeMongoData.set_high(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.lowGet">
            <summary>设置 ExchangeMongoData.get_low() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.lowSetDouble">
            <summary>设置 ExchangeMongoData.set_low(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.openGet">
            <summary>设置 ExchangeMongoData.get_open() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.openSetDouble">
            <summary>设置 ExchangeMongoData.set_open(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.volGet">
            <summary>设置 ExchangeMongoData.get_vol() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.AllInstances.volSetDouble">
            <summary>设置 ExchangeMongoData.set_vol(Double value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Bind(WolfInv.com.BaseObjectsLib.ICodeData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Bind(WolfInv.com.BaseObjectsLib.IDateData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Bind(WolfInv.com.BaseObjectsLib.IExchangeData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Bind(WolfInv.com.BaseObjectsLib.IMatchFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Bind(WolfInv.com.BaseObjectsLib.IOHLCData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Bind(WolfInv.com.BaseObjectsLib.IObjectId)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Bind(WolfInv.com.BaseObjectsLib.iVolAmount)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Bind(System.IFormatProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.ChgRateGet">
            <summary>设置 ExchangeMongoData.get_ChgRate() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.Constructor">
            <summary>设置 ExchangeMongoData.ExchangeMongoData() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.ToDataSetOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Data.DataSet})">
            <summary>设置 ExchangeMongoData.ToDataSet(List`1&lt;!!0&gt; list) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.amountGet">
            <summary>设置 ExchangeMongoData.get_amount() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.amountSetDouble">
            <summary>设置 ExchangeMongoData.set_amount(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.closeGet">
            <summary>设置 ExchangeMongoData.get_close() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.closeSetDouble">
            <summary>设置 ExchangeMongoData.set_close(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.codeGet">
            <summary>设置 ExchangeMongoData.get_code() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.codeSetString">
            <summary>设置 ExchangeMongoData.set_code(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.dateGet">
            <summary>设置 ExchangeMongoData.get_date() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.dateSetString">
            <summary>设置 ExchangeMongoData.set_date(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.date_stampGet">
            <summary>设置 ExchangeMongoData.get_date_stamp() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.date_stampSetDouble">
            <summary>设置 ExchangeMongoData.set_date_stamp(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.highGet">
            <summary>设置 ExchangeMongoData.get_high() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.highSetDouble">
            <summary>设置 ExchangeMongoData.set_high(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.lowGet">
            <summary>设置 ExchangeMongoData.get_low() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.lowSetDouble">
            <summary>设置 ExchangeMongoData.set_low(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.openGet">
            <summary>设置 ExchangeMongoData.get_open() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.openSetDouble">
            <summary>设置 ExchangeMongoData.set_open(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.volGet">
            <summary>设置 ExchangeMongoData.get_vol() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExchangeMongoData.volSetDouble">
            <summary>设置 ExchangeMongoData.set_vol(Double value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1">
            <summary>WolfInv.com.BaseObjectsLib.ExpectData`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.#ctor(WolfInv.com.BaseObjectsLib.ExpectData{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AddKeyValuePairOfStringT0">
            <summary>设置 ExpectData`1.Add(KeyValuePair`2&lt;String,!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AddStringT0">
            <summary>设置 ExpectData`1.Add(String key, !0 value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.AddKeyValuePairOfStringT0">
            <summary>设置 ExpectData`1.Add(KeyValuePair`2&lt;String,!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.AddStringT0">
            <summary>设置 ExpectData`1.Add(String key, !0 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.Clear">
            <summary>设置 ExpectData`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.ContainsKeyString">
            <summary>设置 ExpectData`1.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.ContainsKeyValuePairOfStringT0">
            <summary>设置 ExpectData`1.Contains(KeyValuePair`2&lt;String,!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.CopyToKeyValuePairOfStringT0ArrayInt32">
            <summary>设置 ExpectData`1.CopyTo(KeyValuePair`2&lt;String,!0&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.CountGet">
            <summary>设置 ExpectData`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.ExpectIndexGet">
            <summary>设置 ExpectData`1.get_ExpectIndex() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.GetEnumerator">
            <summary>设置 ExpectData`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.IsReadOnlyGet">
            <summary>设置 ExpectData`1.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.ItemGetString">
            <summary>设置 ExpectData`1.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.ItemSetStringT0">
            <summary>设置 ExpectData`1.set_Item(String key, !0 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.KeysGet">
            <summary>设置 ExpectData`1.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.LExpectNoGet">
            <summary>设置 ExpectData`1.get_LExpectNo() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.RemoveKeyValuePairOfStringT0">
            <summary>设置 ExpectData`1.Remove(KeyValuePair`2&lt;String,!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.RemoveString">
            <summary>设置 ExpectData`1.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExpectData`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.TryGetValueStringT0Out">
            <summary>设置 ExpectData`1.TryGetValue(String key, !0&amp; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.ValueListGet">
            <summary>设置 ExpectData`1.get_ValueList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.AllInstances.ValuesGet">
            <summary>设置 ExpectData`1.get_Values() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Bind(WolfInv.com.BaseObjectsLib.IMatchFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Bind(WolfInv.com.BaseObjectsLib.IObjectId)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Bind(System.IFormatProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Bind(System.Collections.Generic.IDictionary{System.String,`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Clear">
            <summary>设置 ExpectData`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.Constructor">
            <summary>设置 ExpectData`1.ExpectData`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.ConstructorT0">
            <summary>设置 ExpectData`1.ExpectData`1(!0 a) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.ContainsKeyString">
            <summary>设置 ExpectData`1.ContainsKey(String key) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.ContainsKeyValuePairOfStringT0">
            <summary>设置 ExpectData`1.Contains(KeyValuePair`2&lt;String,!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.CopyToKeyValuePairOfStringT0ArrayInt32">
            <summary>设置 ExpectData`1.CopyTo(KeyValuePair`2&lt;String,!0&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.CountGet">
            <summary>设置 ExpectData`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.ExpectIndexGet">
            <summary>设置 ExpectData`1.get_ExpectIndex() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.GetEnumerator">
            <summary>设置 ExpectData`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.IsReadOnlyGet">
            <summary>设置 ExpectData`1.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.ItemGetString">
            <summary>设置 ExpectData`1.get_Item(String key) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.ItemSetStringT0">
            <summary>设置 ExpectData`1.set_Item(String key, !0 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.KeysGet">
            <summary>设置 ExpectData`1.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.LExpectNoGet">
            <summary>设置 ExpectData`1.get_LExpectNo() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.RemoveKeyValuePairOfStringT0">
            <summary>设置 ExpectData`1.Remove(KeyValuePair`2&lt;String,!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.RemoveString">
            <summary>设置 ExpectData`1.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ExpectData`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.TryGetValueStringT0Out">
            <summary>设置 ExpectData`1.TryGetValue(String key, !0&amp; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.ValueListGet">
            <summary>设置 ExpectData`1.get_ValueList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectData`1.ValuesGet">
            <summary>设置 ExpectData`1.get_Values() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE">
            <summary>WolfInv.com.BaseObjectsLib.ExpectDataEEE 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.#ctor(WolfInv.com.BaseObjectsLib.ExpectDataEEE)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.AllInstances.ExpectIndexGet">
            <summary>设置 ExpectDataEEE.get_ExpectIndex() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.AllInstances.LExpectNoGet">
            <summary>设置 ExpectDataEEE.get_LExpectNo() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.AllInstances.PreExpectGet">
            <summary>设置 ExpectDataEEE.get_PreExpect() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.AllInstances.ValueListGet">
            <summary>设置 ExpectDataEEE.get_ValueList() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Bind(WolfInv.com.BaseObjectsLib.IMatchFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Bind(WolfInv.com.BaseObjectsLib.IObjectId)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Bind(System.IFormatProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,WolfInv.com.BaseObjectsLib.TimeSerialData}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,WolfInv.com.BaseObjectsLib.TimeSerialData}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Bind(System.Collections.Generic.IDictionary{System.String,WolfInv.com.BaseObjectsLib.TimeSerialData})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.Constructor">
            <summary>设置 ExpectDataEEE.ExpectDataEEE() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.ExpectIndexGet">
            <summary>设置 ExpectDataEEE.get_ExpectIndex() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.LExpectNoGet">
            <summary>设置 ExpectDataEEE.get_LExpectNo() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.PreExpectGet">
            <summary>设置 ExpectDataEEE.get_PreExpect() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectDataEEE.ValueListGet">
            <summary>设置 ExpectDataEEE.get_ValueList() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1">
            <summary>WolfInv.com.BaseObjectsLib.ExpectList`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.#ctor(WolfInv.com.BaseObjectsLib.ExpectList{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AddExpectDataOfT0">
            <summary>设置 ExpectList`1.Add(ExpectData`1&lt;!0&gt; item) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.AddExpectDataOfT0">
            <summary>设置 ExpectList`1.Add(ExpectData`1&lt;!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.Clear">
            <summary>设置 ExpectList`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.ContainsExpectDataOfT0">
            <summary>设置 ExpectList`1.Contains(ExpectData`1&lt;!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.CopyToExpectDataOfT0ArrayInt32">
            <summary>设置 ExpectList`1.CopyTo(ExpectData`1&lt;!0&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.CountGet">
            <summary>设置 ExpectList`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.DataGet">
            <summary>设置 ExpectList`1.get_Data() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.DataSetDictionaryOfStringMongoReturnDataListOfT0">
            <summary>设置 ExpectList`1.set_Data(Dictionary`2&lt;String,MongoReturnDataList`1&lt;!0&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.FirstDataGet">
            <summary>设置 ExpectList`1.get_FirstData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.FirstDatasInt32">
            <summary>设置 ExpectList`1.FirstDatas(Int32 RecLng) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.GetEnumerator">
            <summary>设置 ExpectList`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.IndexOfExpectDataOfT0">
            <summary>设置 ExpectList`1.IndexOf(ExpectData`1&lt;!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.IndexOfString">
            <summary>设置 ExpectList`1.IndexOf(String ExpectNo) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.InsertInt32ExpectDataOfT0">
            <summary>设置 ExpectList`1.Insert(Int32 index, ExpectData`1&lt;!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.IsReadOnlyGet">
            <summary>设置 ExpectList`1.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.ItemGetInt32">
            <summary>设置 ExpectList`1.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.ItemSetInt32ExpectDataOfT0">
            <summary>设置 ExpectList`1.set_Item(Int32 index, ExpectData`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.LastDataGet">
            <summary>设置 ExpectList`1.get_LastData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.LastDatasInt32Boolean">
            <summary>设置 ExpectList`1.LastDatas(Int32 RecLng, Boolean ResortTime) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.MyDataGet">
            <summary>设置 ExpectList`1.get_MyData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.RemoveAtInt32">
            <summary>设置 ExpectList`1.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.RemoveExpectDataOfT0">
            <summary>设置 ExpectList`1.Remove(ExpectData`1&lt;!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.TableGet">
            <summary>设置 ExpectList`1.get_Table() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances._ctorb__14_0T0">
            <summary>设置 ExpectList`1.&lt;.ctor&gt;b__14_0(!0 a) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.AllInstances.getSubArrayInt32Int32">
            <summary>设置 ExpectList`1.getSubArray(Int32 FromIndex, Int32 len) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.Bind(System.Collections.Generic.ICollection{WolfInv.com.BaseObjectsLib.ExpectData{`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.Bind(System.Collections.Generic.IEnumerable{WolfInv.com.BaseObjectsLib.ExpectData{`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.Bind(System.Collections.Generic.IList{WolfInv.com.BaseObjectsLib.ExpectData{`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.Bind(System.Collections.Generic.IReadOnlyCollection{WolfInv.com.BaseObjectsLib.ExpectData{`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.Bind(System.Collections.Generic.IReadOnlyList{WolfInv.com.BaseObjectsLib.ExpectData{`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.Clear">
            <summary>设置 ExpectList`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.ConcatExpectListOfT0ExpectListOfT0Array">
            <summary>设置 ExpectList`1.Concat(ExpectList`1&lt;!0&gt; descList, ExpectList`1&lt;!0&gt;[] addList) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.Constructor">
            <summary>设置 ExpectList`1.ExpectList`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.ConstructorDataTable">
            <summary>设置 ExpectList`1.ExpectList`1(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.ConstructorDictionaryOfStringMongoReturnDataListOfT0Boolean">
            <summary>设置 ExpectList`1.ExpectList`1(Dictionary`2&lt;String,MongoReturnDataList`1&lt;!0&gt;&gt; _data, Boolean NeedReTime) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.ConstructorStringCycleDataSet">
            <summary>设置 ExpectList`1.ExpectList`1(String DataType, Cycle cyc, DataSet ds) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.ContainsExpectDataOfT0">
            <summary>设置 ExpectList`1.Contains(ExpectData`1&lt;!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.CopyToExpectDataOfT0ArrayInt32">
            <summary>设置 ExpectList`1.CopyTo(ExpectData`1&lt;!0&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.CountGet">
            <summary>设置 ExpectList`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.DataGet">
            <summary>设置 ExpectList`1.get_Data() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.DataSetDictionaryOfStringMongoReturnDataListOfT0">
            <summary>设置 ExpectList`1.set_Data(Dictionary`2&lt;String,MongoReturnDataList`1&lt;!0&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.FirstDataGet">
            <summary>设置 ExpectList`1.get_FirstData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.FirstDatasInt32">
            <summary>设置 ExpectList`1.FirstDatas(Int32 RecLng) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.GetEnumerator">
            <summary>设置 ExpectList`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.IndexOfExpectDataOfT0">
            <summary>设置 ExpectList`1.IndexOf(ExpectData`1&lt;!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.IndexOfString">
            <summary>设置 ExpectList`1.IndexOf(String ExpectNo) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.InsertInt32ExpectDataOfT0">
            <summary>设置 ExpectList`1.Insert(Int32 index, ExpectData`1&lt;!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.IsReadOnlyGet">
            <summary>设置 ExpectList`1.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.ItemGetInt32">
            <summary>设置 ExpectList`1.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.ItemSetInt32ExpectDataOfT0">
            <summary>设置 ExpectList`1.set_Item(Int32 index, ExpectData`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.LastDataGet">
            <summary>设置 ExpectList`1.get_LastData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.LastDatasInt32Boolean">
            <summary>设置 ExpectList`1.LastDatas(Int32 RecLng, Boolean ResortTime) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.MyDataGet">
            <summary>设置 ExpectList`1.get_MyData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.RemoveAtInt32">
            <summary>设置 ExpectList`1.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.RemoveExpectDataOfT0">
            <summary>设置 ExpectList`1.Remove(ExpectData`1&lt;!0&gt; item) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.TableGet">
            <summary>设置 ExpectList`1.get_Table() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1._ctorb__14_0T0">
            <summary>设置 ExpectList`1.&lt;.ctor&gt;b__14_0(!0 a) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimExpectList`1.getSubArrayInt32Int32">
            <summary>设置 ExpectList`1.getSubArray(Int32 FromIndex, Int32 len) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass">
            <summary>WolfInv.com.BaseObjectsLib.GlobalClass 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.#ctor(WolfInv.com.BaseObjectsLib.GlobalClass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AllowExchangeGet">
            <summary>设置 GlobalClass.get_AllowExchange() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AllowExchangeSetBoolean">
            <summary>设置 GlobalClass.set_AllowExchange(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AllowHedgeGet">
            <summary>设置 GlobalClass.get_AllowHedge() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AssetAChanceMaxRateGet">
            <summary>设置 GlobalClass.get_AssetAChanceMaxRate() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AssetCostedGet">
            <summary>设置 GlobalClass.get_AssetCosted() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AssetCostedSetInt32">
            <summary>设置 GlobalClass.set_AssetCosted(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AssetGainedGet">
            <summary>设置 GlobalClass.get_AssetGained() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AssetGainedSetSingle">
            <summary>设置 GlobalClass.set_AssetGained(Single value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AssetInitCashGet">
            <summary>设置 GlobalClass.get_AssetInitCash() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AssetTotalGet">
            <summary>设置 GlobalClass.get_AssetTotal() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AssetTotalMaxRateGet">
            <summary>设置 GlobalClass.get_AssetTotalMaxRate() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AssetTotalSetSingle">
            <summary>设置 GlobalClass.set_AssetTotal(Single value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AssetUnitsGet">
            <summary>设置 GlobalClass.get_AssetUnits() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.AssetUnitsSetDictionaryOfStringInt32">
            <summary>设置 GlobalClass.set_AssetUnits(Dictionary`2&lt;String,Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.CheckNewestDataDaysGet">
            <summary>设置 GlobalClass.get_CheckNewestDataDays() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.ChipUnitGet">
            <summary>设置 GlobalClass.get_ChipUnit() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.ClientPasswordGet">
            <summary>设置 GlobalClass.get_ClientPassword() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.ClientPasswordSetString">
            <summary>设置 GlobalClass.set_ClientPassword(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.ClientUserNameGet">
            <summary>设置 GlobalClass.get_ClientUserName() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.ClientUserNameSetString">
            <summary>设置 GlobalClass.set_ClientUserName(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.DefFirstAmtGet">
            <summary>设置 GlobalClass.get_DefFirstAmt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.DefMaxLostGet">
            <summary>设置 GlobalClass.get_DefMaxLost() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.DefaultHoldAmtSerialsGet">
            <summary>设置 GlobalClass.get_DefaultHoldAmtSerials() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.ForWebGet">
            <summary>设置 GlobalClass.get_ForWeb() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.HedgeTimesGet">
            <summary>设置 GlobalClass.get_HedgeTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.HistoryFromPageGet">
            <summary>设置 GlobalClass.get_HistoryFromPage() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.InstHostGet">
            <summary>设置 GlobalClass.get_InstHost() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.InterValGet">
            <summary>设置 GlobalClass.get_InterVal() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.IsClientGet">
            <summary>设置 GlobalClass.get_IsClient() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.JoinHedgeGet">
            <summary>设置 GlobalClass.get_JoinHedge() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.LoginDefaultHostGet">
            <summary>设置 GlobalClass.get_LoginDefaultHost() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.LoginHostListGet">
            <summary>设置 GlobalClass.get_LoginHostList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.LoginInFrameGet">
            <summary>设置 GlobalClass.get_LoginInFrame() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.LoginInstFillOrEnCodeGet">
            <summary>设置 GlobalClass.get_LoginInstFillOrEnCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.LoginUrlModelGet">
            <summary>设置 GlobalClass.get_LoginUrlModel() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.MinChipsGet">
            <summary>设置 GlobalClass.get_MinChips() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.MinTimeForChanceInt32">
            <summary>设置 GlobalClass.MinTimeForChance(Int32 Times) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.MutliColMinTimesGet">
            <summary>设置 GlobalClass.get_MutliColMinTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.NewestHistoryExpectGet">
            <summary>设置 GlobalClass.get_NewestHistoryExpect() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.OddsGet">
            <summary>设置 GlobalClass.get_Odds() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.OddsSetDouble">
            <summary>设置 GlobalClass.set_Odds(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.RepeatCheckCntGet">
            <summary>设置 GlobalClass.get_RepeatCheckCnt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.ResearchStartColGet">
            <summary>设置 GlobalClass.get_ResearchStartCol() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.SerTotalInt32">
            <summary>设置 GlobalClass.SerTotal(Int32 Cols) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.SingleCarRepeatCntGet">
            <summary>设置 GlobalClass.get_SingleCarRepeatCnt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.SingleColMinTimesGet">
            <summary>设置 GlobalClass.get_SingleColMinTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.StartColsGet">
            <summary>设置 GlobalClass.get_StartCols() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.SysParamsGet">
            <summary>设置 GlobalClass.get_SysParams() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.SysUserGet">
            <summary>设置 GlobalClass.get_SysUser() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.TotalCntGet">
            <summary>设置 GlobalClass.get_TotalCnt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.UnitChipArrayInt32">
            <summary>设置 GlobalClass.UnitChipArray(Int32 Cols) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.ValidOldestHistoryExpectGet">
            <summary>设置 GlobalClass.get_ValidOldestHistoryExpect() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.getStragXml">
            <summary>设置 GlobalClass.getStragXml() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllInstances.setStragXmlString">
            <summary>设置 GlobalClass.setStragXml(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllowExchangeGet">
            <summary>设置 GlobalClass.get_AllowExchange() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllowExchangeSetBoolean">
            <summary>设置 GlobalClass.set_AllowExchange(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AllowHedgeGet">
            <summary>设置 GlobalClass.get_AllowHedge() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AssetAChanceMaxRateGet">
            <summary>设置 GlobalClass.get_AssetAChanceMaxRate() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AssetCostedGet">
            <summary>设置 GlobalClass.get_AssetCosted() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AssetCostedSetInt32">
            <summary>设置 GlobalClass.set_AssetCosted(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AssetGainedGet">
            <summary>设置 GlobalClass.get_AssetGained() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AssetGainedSetSingle">
            <summary>设置 GlobalClass.set_AssetGained(Single value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AssetInitCashGet">
            <summary>设置 GlobalClass.get_AssetInitCash() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AssetTotalGet">
            <summary>设置 GlobalClass.get_AssetTotal() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AssetTotalMaxRateGet">
            <summary>设置 GlobalClass.get_AssetTotalMaxRate() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AssetTotalSetSingle">
            <summary>设置 GlobalClass.set_AssetTotal(Single value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AssetUnitsGet">
            <summary>设置 GlobalClass.get_AssetUnits() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.AssetUnitsSetDictionaryOfStringInt32">
            <summary>设置 GlobalClass.set_AssetUnits(Dictionary`2&lt;String,Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.CheckNewestDataDaysGet">
            <summary>设置 GlobalClass.get_CheckNewestDataDays() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.ChipUnitGet">
            <summary>设置 GlobalClass.get_ChipUnit() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.ClientPasswordGet">
            <summary>设置 GlobalClass.get_ClientPassword() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.ClientPasswordSetString">
            <summary>设置 GlobalClass.set_ClientPassword(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.ClientUserNameGet">
            <summary>设置 GlobalClass.get_ClientUserName() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.ClientUserNameSetString">
            <summary>设置 GlobalClass.set_ClientUserName(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.Constructor">
            <summary>设置 GlobalClass.GlobalClass() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.DataTypesGet">
            <summary>设置 GlobalClass.get_DataTypes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.DefFirstAmtGet">
            <summary>设置 GlobalClass.get_DefFirstAmt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.DefMaxLostGet">
            <summary>设置 GlobalClass.get_DefMaxLost() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.DefaultHoldAmtSerialsGet">
            <summary>设置 GlobalClass.get_DefaultHoldAmtSerials() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.ForWebGet">
            <summary>设置 GlobalClass.get_ForWeb() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.HedgeTimesGet">
            <summary>设置 GlobalClass.get_HedgeTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.HistoryFromPageGet">
            <summary>设置 GlobalClass.get_HistoryFromPage() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.InstHostGet">
            <summary>设置 GlobalClass.get_InstHost() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.InterValGet">
            <summary>设置 GlobalClass.get_InterVal() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.IsClientGet">
            <summary>设置 GlobalClass.get_IsClient() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.JoinHedgeGet">
            <summary>设置 GlobalClass.get_JoinHedge() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.LoginDefaultHostGet">
            <summary>设置 GlobalClass.get_LoginDefaultHost() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.LoginHostListGet">
            <summary>设置 GlobalClass.get_LoginHostList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.LoginInFrameGet">
            <summary>设置 GlobalClass.get_LoginInFrame() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.LoginInstFillOrEnCodeGet">
            <summary>设置 GlobalClass.get_LoginInstFillOrEnCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.LoginUrlModelGet">
            <summary>设置 GlobalClass.get_LoginUrlModel() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.MinChipsGet">
            <summary>设置 GlobalClass.get_MinChips() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.MinTimeForChanceInt32">
            <summary>设置 GlobalClass.MinTimeForChance(Int32 Times) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.MutliColMinTimesGet">
            <summary>设置 GlobalClass.get_MutliColMinTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.NewestHistoryExpectGet">
            <summary>设置 GlobalClass.get_NewestHistoryExpect() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.OddsGet">
            <summary>设置 GlobalClass.get_Odds() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.OddsSetDouble">
            <summary>设置 GlobalClass.set_Odds(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.ReReadAssetUnitList">
            <summary>设置 GlobalClass.ReReadAssetUnitList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.ReReadStragList">
            <summary>设置 GlobalClass.ReReadStragList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.ReadConfig">
            <summary>设置 GlobalClass.ReadConfig() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.ReadFileString">
            <summary>设置 GlobalClass.ReadFile(String filename) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.RepeatCheckCntGet">
            <summary>设置 GlobalClass.get_RepeatCheckCnt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.ResearchStartColGet">
            <summary>设置 GlobalClass.get_ResearchStartCol() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.SaveAssetUnitsString">
            <summary>设置 GlobalClass.SaveAssetUnits(String str) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.SaveFileStringString">
            <summary>设置 GlobalClass.SaveFile(String filename, String strContent) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.SaveStragListString">
            <summary>设置 GlobalClass.SaveStragList(String str) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.SerTotalInt32">
            <summary>设置 GlobalClass.SerTotal(Int32 Cols) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.SetConfig">
            <summary>设置 GlobalClass.SetConfig() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.SingleCarRepeatCntGet">
            <summary>设置 GlobalClass.get_SingleCarRepeatCnt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.SingleColMinTimesGet">
            <summary>设置 GlobalClass.get_SingleColMinTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.StartColsGet">
            <summary>设置 GlobalClass.get_StartCols() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.StaticConstructor">
            <summary>设置 GlobalClass.GlobalClass() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.SysParamsGet">
            <summary>设置 GlobalClass.get_SysParams() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.SysUserGet">
            <summary>设置 GlobalClass.get_SysUser() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.SystemDbTablesGet">
            <summary>设置 GlobalClass.get_SystemDbTables() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.TotalCntGet">
            <summary>设置 GlobalClass.get_TotalCnt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.TypeDataPointsGet">
            <summary>设置 GlobalClass.get_TypeDataPoints() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.TypeDataPointsSetDictionaryOfStringDataTypePoint">
            <summary>设置 GlobalClass.set_TypeDataPoints(Dictionary`2&lt;String,DataTypePoint&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.UnitChipArrayInt32">
            <summary>设置 GlobalClass.UnitChipArray(Int32 Cols) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.ValidOldestHistoryExpectGet">
            <summary>设置 GlobalClass.get_ValidOldestHistoryExpect() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.getCurrDb">
            <summary>设置 GlobalClass.getCurrDb() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.getCurrNoSQLDbString">
            <summary>设置 GlobalClass.getCurrNoSQLDb(String typename) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.getOptSerialsDoubleInt64Int32">
            <summary>设置 GlobalClass.getOptSerials(Double odds, Int64 MaxValue, Int32 FirstAmt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.getOptSerialsDoubleInt64Int32Boolean">
            <summary>设置 GlobalClass.getOptSerials(Double odds, Int64 MaxValue, Int32 FirstAmt, Boolean NeedAddFirst) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.getStragRunningPlanBoolean">
            <summary>设置 GlobalClass.getStragRunningPlan(Boolean UseNewestData) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.getStragXml">
            <summary>设置 GlobalClass.getStragXml() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.getSumInt32Int32Int32DoubleDoubleInt64ArrayOut">
            <summary>设置 GlobalClass.getSum(Int32 chips, Int32 holdcnt, Int32 firstAmt, Double odd, Double MinWRate, Int64[]&amp; serial) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.setStragRunningPlanString">
            <summary>设置 GlobalClass.setStragRunningPlan(String strXml) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGlobalClass.setStragXmlString">
            <summary>设置 GlobalClass.setStragXml(String value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimGroupBuilder">
            <summary>WolfInv.com.BaseObjectsLib.GroupBuilder 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimGroupBuilder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimGroupBuilder.#ctor(WolfInv.com.BaseObjectsLib.GroupBuilder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimGroupBuilder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimGroupBuilder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimGroupBuilder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGroupBuilder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimGroupBuilder.Constructor">
            <summary>设置 GroupBuilder.GroupBuilder() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimGroupBuilder.ToGroupOf1M0ArrayInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32,System.Collections.Generic.List{``0[]}})">
            <summary>设置 GroupBuilder.ToGroup(!!0[] orgArr, Int32 grpCnt) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimHistoryData">
            <summary>WolfInv.com.BaseObjectsLib.HistoryData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimHistoryData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimHistoryData.#ctor(WolfInv.com.BaseObjectsLib.HistoryData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimHistoryData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimHistoryData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimHistoryData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimHistoryData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimHistoryData.Constructor">
            <summary>设置 HistoryData.HistoryData() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimInitData">
            <summary>WolfInv.com.BaseObjectsLib.InitData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimInitData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimInitData.#ctor(WolfInv.com.BaseObjectsLib.InitData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimInitData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimInitData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimInitData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimInitData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimInitData.Constructor">
            <summary>设置 InitData.InitData() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimInnerClass`1">
            <summary>WolfInv.com.BaseObjectsLib.InnerClass`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimInnerClass`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimInnerClass`1.#ctor(WolfInv.com.BaseObjectsLib.InnerClass{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimInnerClass`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimInnerClass`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimInnerClass`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimInnerClass`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimInnerClass`1.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimInnerClass`1.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimInnerClass`1.Constructor">
            <summary>设置 InnerClass`1.InnerClass`1() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData">
            <summary>WolfInv.com.BaseObjectsLib.LottyData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.#ctor(WolfInv.com.BaseObjectsLib.LottyData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.Bind(WolfInv.com.BaseObjectsLib.IMatchFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.Bind(WolfInv.com.BaseObjectsLib.IObjectId)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.Bind(System.IFormatProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimLottyData.Constructor">
            <summary>设置 LottyData.LottyData() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable">
            <summary>WolfInv.com.BaseObjectsLib.MTable 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.#ctor(WolfInv.com.BaseObjectsLib.MTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AddColumnByArrayOf1StringIEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,System.Collections.Generic.IEnumerable{``0}})">
            <summary>设置 MTable.AddColumnByArray(String ColumnName, IEnumerable`1&lt;!!0&gt; vals) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AddColumnByArrayOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>设置 MTable.AddColumnByArray(String ColumnName, !!0 val) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AddColumnByArrayStringMTableString">
            <summary>设置 MTable.AddColumnByArray(String ColumnName, MTable tb, String col) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AddNewColumnStringArray">
            <summary>设置 MTable.AddNewColumn(String[] columns) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.AddColumnByArrayOf1StringIEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WolfInv.com.BaseObjectsLib.MTable,System.String,System.Collections.Generic.IEnumerable{``0}})">
            <summary>设置 MTable.AddColumnByArray(String ColumnName, IEnumerable`1&lt;!!0&gt; vals) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.AddColumnByArrayOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WolfInv.com.BaseObjectsLib.MTable,System.String,``0})">
            <summary>设置 MTable.AddColumnByArray(String ColumnName, !!0 val) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.AddColumnByArrayStringMTableString">
            <summary>设置 MTable.AddColumnByArray(String ColumnName, MTable tb, String col) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.AddNewColumnStringArray">
            <summary>设置 MTable.AddNewColumn(String[] columns) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ContactMTable">
            <summary>设置 MTable.Contact(MTable tb) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.CountGet">
            <summary>设置 MTable.get_Count() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ElementTypeGet">
            <summary>设置 MTable.get_ElementType() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ExpressionGet">
            <summary>设置 MTable.get_Expression() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.FillByItemsOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{WolfInv.com.BaseObjectsLib.MTable,``0[]})">
            <summary>设置 MTable.FillByItems(!!0[] items) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.FillListDataRowArray">
            <summary>设置 MTable.FillList(DataRow[] Drs) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.FillListDataTable">
            <summary>设置 MTable.FillList(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.FillTableDataTable">
            <summary>设置 MTable.FillTable(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.GetEnumerator">
            <summary>设置 MTable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.GetTable">
            <summary>设置 MTable.GetTable() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.IEnumerators">
            <summary>设置 MTable.IEnumerators() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.InitTableStructureObjectArray">
            <summary>设置 MTable.InitTableStructure(Object[] colsinfo) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ItemGetInt32">
            <summary>设置 MTable.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ItemGetInt32String">
            <summary>设置 MTable.get_Item(Int32 index, String colname) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ItemGetString">
            <summary>设置 MTable.get_Item(String colnames) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ItemGetStringArray">
            <summary>设置 MTable.get_Item(String[] colnames) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ItemGetStringString">
            <summary>设置 MTable.get_Item(String indexRange, String colnames) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ItemSetInt32StringObject">
            <summary>设置 MTable.set_Item(Int32 index, String colname, Object value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ItemSetStringArrayMTable">
            <summary>设置 MTable.set_Item(String[] colnames, MTable value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ItemSetStringMTable">
            <summary>设置 MTable.set_Item(String colnames, MTable value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ProviderGet">
            <summary>设置 MTable.get_Provider() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.SelectString">
            <summary>设置 MTable.Select(String sql) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.SystemCollectionsGenericIEnumerableWolfInvcomBaseObjectsLibiFillableGetEnumerator">
            <summary>设置 MTable.System.Collections.Generic.IEnumerable&lt;WolfInv.com.BaseObjectsLib.iFillable&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MTable.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.TColumnsGet">
            <summary>设置 MTable.get_TColumns() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.TableGet">
            <summary>设置 MTable.get_Table() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.TableSetDataTable">
            <summary>设置 MTable.set_Table(DataTable value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ToFillableListOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.MTable,System.Collections.Generic.List{``0}})">
            <summary>设置 MTable.ToFillableList() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ToListOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.MTable,System.Collections.Generic.List{``0}})">
            <summary>设置 MTable.ToList() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ToListOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.MTable,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 MTable.ToList(String colname) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ToListOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.MTable,System.String,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 MTable.ToList(String rows, String colname) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.ToRowDataInt32">
            <summary>设置 MTable.ToRowData(Int32 rowid) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.UnionMTable">
            <summary>设置 MTable.Union(MTable tb) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.UpdateColumnTypeStringType">
            <summary>设置 MTable.UpdateColumnType(String strcol, Type type) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.getColumnsByStrString">
            <summary>设置 MTable.getColumnsByStr(String indexRange) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.getCrossTableListOfInt32String">
            <summary>设置 MTable.getCrossTable(List`1&lt;Int32&gt; SelectRows, String SelectCols) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.getObjectByIdOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.MTable,System.Int32,``0})">
            <summary>设置 MTable.getObjectById(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.getRowsByStrString">
            <summary>设置 MTable.getRowsByStr(String indexRange) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.getSerListInt32Int32">
            <summary>设置 MTable.getSerList(Int32 From, Int32 To) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.AllInstances.getTableByRCInt32ArrayStringArray">
            <summary>设置 MTable.getTableByRC(Int32[] rows, String[] selectCols) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.Bind(System.Linq.IQueryable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.Bind(WolfInv.com.BaseObjectsLib.iListFillable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.Bind(System.Collections.Generic.IEnumerable{WolfInv.com.BaseObjectsLib.iFillable})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.Constructor">
            <summary>设置 MTable.MTable() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ConstructorDataTable">
            <summary>设置 MTable.MTable(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ContactMTable">
            <summary>设置 MTable.Contact(MTable tb) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.CountGet">
            <summary>设置 MTable.get_Count() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ElementTypeGet">
            <summary>设置 MTable.get_ElementType() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ExpressionGet">
            <summary>设置 MTable.get_Expression() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.FillByItemsOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[]})">
            <summary>设置 MTable.FillByItems(!!0[] items) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.FillListDataRowArray">
            <summary>设置 MTable.FillList(DataRow[] Drs) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.FillListDataTable">
            <summary>设置 MTable.FillList(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.FillTableDataTable">
            <summary>设置 MTable.FillTable(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.GetEnumerator">
            <summary>设置 MTable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.GetTable">
            <summary>设置 MTable.GetTable() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.IEnumerators">
            <summary>设置 MTable.IEnumerators() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.InitTableStructureObjectArray">
            <summary>设置 MTable.InitTableStructure(Object[] colsinfo) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ItemGetInt32">
            <summary>设置 MTable.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ItemGetInt32String">
            <summary>设置 MTable.get_Item(Int32 index, String colname) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ItemGetString">
            <summary>设置 MTable.get_Item(String colnames) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ItemGetStringArray">
            <summary>设置 MTable.get_Item(String[] colnames) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ItemGetStringString">
            <summary>设置 MTable.get_Item(String indexRange, String colnames) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ItemSetInt32StringObject">
            <summary>设置 MTable.set_Item(Int32 index, String colname, Object value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ItemSetStringArrayMTable">
            <summary>设置 MTable.set_Item(String[] colnames, MTable value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ItemSetStringMTable">
            <summary>设置 MTable.set_Item(String colnames, MTable value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ProviderGet">
            <summary>设置 MTable.get_Provider() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.SelectString">
            <summary>设置 MTable.Select(String sql) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.SystemCollectionsGenericIEnumerableWolfInvcomBaseObjectsLibiFillableGetEnumerator">
            <summary>设置 MTable.System.Collections.Generic.IEnumerable&lt;WolfInv.com.BaseObjectsLib.iFillable&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MTable.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.TColumnsGet">
            <summary>设置 MTable.get_TColumns() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.TableGet">
            <summary>设置 MTable.get_Table() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.TableSetDataTable">
            <summary>设置 MTable.set_Table(DataTable value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ToFillableListOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>设置 MTable.ToFillableList() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ToListOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>设置 MTable.ToList() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ToListOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 MTable.ToList(String colname) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ToListOf1StringString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 MTable.ToList(String rows, String colname) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.ToRowDataInt32">
            <summary>设置 MTable.ToRowData(Int32 rowid) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.UnionMTable">
            <summary>设置 MTable.Union(MTable tb) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.UpdateColumnTypeStringType">
            <summary>设置 MTable.UpdateColumnType(String strcol, Type type) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.getColumnsByStrString">
            <summary>设置 MTable.getColumnsByStr(String indexRange) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.getCrossTableListOfInt32String">
            <summary>设置 MTable.getCrossTable(List`1&lt;Int32&gt; SelectRows, String SelectCols) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.getObjectByIdOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0})">
            <summary>设置 MTable.getObjectById(Int32 id) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.getRowsByStrString">
            <summary>设置 MTable.getRowsByStr(String indexRange) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.getSerListInt32Int32">
            <summary>设置 MTable.getSerList(Int32 From, Int32 To) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMTable.getTableByRCInt32ArrayStringArray">
            <summary>设置 MTable.getTableByRC(Int32[] rows, String[] selectCols) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix">
            <summary>WolfInv.com.BaseObjectsLib.Matrix 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.#ctor(WolfInv.com.BaseObjectsLib.Matrix)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AddRowDoubleArray">
            <summary>设置 Matrix.AddRow(Double[] row) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AdditionOpMatrixMatrix">
            <summary>设置 Matrix.op_Addition(Matrix a, Matrix b) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.AddRowDoubleArray">
            <summary>设置 Matrix.AddRow(Double[] row) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.CopyDoubleArrayArrayDoubleMdArray2OutInt32Int32">
            <summary>设置 Matrix.Copy(Double[][] inData, Double[,]&amp; outData, Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.DetailGet">
            <summary>设置 Matrix.get_Detail() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.DetailSetDoubleMdArray2">
            <summary>设置 Matrix.set_Detail(Double[,] value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.EqualsMatrixInt32">
            <summary>设置 Matrix.Equals(Matrix matrix, Int32 precision) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.EqualsObject">
            <summary>设置 Matrix.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.InitListListOfDoubleArray">
            <summary>设置 Matrix.InitList(List`1&lt;Double[]&gt; list) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.ItemGetInt32Int32">
            <summary>设置 Matrix.get_Item(Int32 r, Int32 c) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.ItemSetInt32Int32Double">
            <summary>设置 Matrix.set_Item(Int32 r, Int32 c, Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.RemoveAtInt32">
            <summary>设置 Matrix.RemoveAt(Int32 Row) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.ToList">
            <summary>设置 Matrix.ToList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.columnNumGet">
            <summary>设置 Matrix.get_columnNum() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.getColumnInt32">
            <summary>设置 Matrix.getColumn(Int32 c) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.getMatrixByRowInt32">
            <summary>设置 Matrix.getMatrixByRow(Int32 From) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.getMatrixByRowInt32Int32">
            <summary>设置 Matrix.getMatrixByRow(Int32 From, Int32 To) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.getRowInt32">
            <summary>设置 Matrix.getRow(Int32 r) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.AllInstances.rowNumGet">
            <summary>设置 Matrix.get_rowNum() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.ConstructorDoubleArray">
            <summary>设置 Matrix.Matrix(Double[] vector) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.ConstructorDoubleMdArray2">
            <summary>设置 Matrix.Matrix(Double[,] members) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.ConstructorInt32Int32">
            <summary>设置 Matrix.Matrix(Int32 rowNum, Int32 columnNum) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.ConstructorListOfDoubleArray">
            <summary>设置 Matrix.Matrix(List`1&lt;Double[]&gt; list) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.DetailGet">
            <summary>设置 Matrix.get_Detail() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.DetailSetDoubleMdArray2">
            <summary>设置 Matrix.set_Detail(Double[,] value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.EqualityOpMatrixMatrix">
            <summary>设置 Matrix.op_Equality(Matrix a, Matrix b) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.EqualsMatrixInt32">
            <summary>设置 Matrix.Equals(Matrix matrix, Int32 precision) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.EqualsObject">
            <summary>设置 Matrix.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.InequalityOpMatrixMatrix">
            <summary>设置 Matrix.op_Inequality(Matrix a, Matrix b) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.InitListListOfDoubleArray">
            <summary>设置 Matrix.InitList(List`1&lt;Double[]&gt; list) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.ItemGetInt32Int32">
            <summary>设置 Matrix.get_Item(Int32 r, Int32 c) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.ItemSetInt32Int32Double">
            <summary>设置 Matrix.set_Item(Int32 r, Int32 c, Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.LogicalNotOpMatrix">
            <summary>设置 Matrix.op_LogicalNot(Matrix a) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.MultiplyOpDoubleMatrix">
            <summary>设置 Matrix.op_Multiply(Double factor, Matrix matrix) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.MultiplyOpMatrixDouble">
            <summary>设置 Matrix.op_Multiply(Matrix matrix, Double factor) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.MultiplyOpMatrixMatrix">
            <summary>设置 Matrix.op_Multiply(Matrix a, Matrix b) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.RemoveAtInt32">
            <summary>设置 Matrix.RemoveAt(Int32 Row) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.SubtractionOpMatrixMatrix">
            <summary>设置 Matrix.op_Subtraction(Matrix a, Matrix b) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.ToList">
            <summary>设置 Matrix.ToList() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.columnNumGet">
            <summary>设置 Matrix.get_columnNum() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.getColumnInt32">
            <summary>设置 Matrix.getColumn(Int32 c) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.getMatrixByRowInt32">
            <summary>设置 Matrix.getMatrixByRow(Int32 From) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.getMatrixByRowInt32Int32">
            <summary>设置 Matrix.getMatrixByRow(Int32 From, Int32 To) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.getRowInt32">
            <summary>设置 Matrix.getRow(Int32 r) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.rowNumGet">
            <summary>设置 Matrix.get_rowNum() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrix.transposeMatrix">
            <summary>设置 Matrix.transpose(Matrix input) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixException">
            <summary>WolfInv.com.BaseObjectsLib.MatrixException 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixException.#ctor(WolfInv.com.BaseObjectsLib.MatrixException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixException.ConstructorString">
            <summary>设置 MatrixException.MatrixException(String msg) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1">
            <summary>WolfInv.com.BaseObjectsLib.MatrixTableCell`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.#ctor(WolfInv.com.BaseObjectsLib.MatrixTableCell{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.AllInstances.ColumnNameGet">
            <summary>设置 MatrixTableCell`1.get_ColumnName() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.AllInstances.ColumnNameSetString">
            <summary>设置 MatrixTableCell`1.set_ColumnName(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.AllInstances.ElementTypeGet">
            <summary>设置 MatrixTableCell`1.get_ElementType() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.AllInstances.ExpressionGet">
            <summary>设置 MatrixTableCell`1.get_Expression() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.AllInstances.GetEnumerator">
            <summary>设置 MatrixTableCell`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.AllInstances.ProviderGet">
            <summary>设置 MatrixTableCell`1.get_Provider() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.AllInstances.RowIdGet">
            <summary>设置 MatrixTableCell`1.get_RowId() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.AllInstances.RowIdSetInt32">
            <summary>设置 MatrixTableCell`1.set_RowId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MatrixTableCell`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.AllInstances.ValueGet">
            <summary>设置 MatrixTableCell`1.get_Value() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.AllInstances.ValueSetT0">
            <summary>设置 MatrixTableCell`1.set_Value(!0 value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.Bind(System.Linq.IQueryable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.Bind(System.Linq.IQueryable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.ColumnNameGet">
            <summary>设置 MatrixTableCell`1.get_ColumnName() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.ColumnNameSetString">
            <summary>设置 MatrixTableCell`1.set_ColumnName(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.Constructor">
            <summary>设置 MatrixTableCell`1.MatrixTableCell`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.ElementTypeGet">
            <summary>设置 MatrixTableCell`1.get_ElementType() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.ExpressionGet">
            <summary>设置 MatrixTableCell`1.get_Expression() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.GetEnumerator">
            <summary>设置 MatrixTableCell`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.ProviderGet">
            <summary>设置 MatrixTableCell`1.get_Provider() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.RowIdGet">
            <summary>设置 MatrixTableCell`1.get_RowId() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.RowIdSetInt32">
            <summary>设置 MatrixTableCell`1.set_RowId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 MatrixTableCell`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.ValueGet">
            <summary>设置 MatrixTableCell`1.get_Value() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableCell`1.ValueSetT0">
            <summary>设置 MatrixTableCell`1.set_Value(!0 value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableRows`1">
            <summary>WolfInv.com.BaseObjectsLib.MatrixTableRows`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableRows`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableRows`1.#ctor(WolfInv.com.BaseObjectsLib.MatrixTableRows{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableRows`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableRows`1.AllInstances.ItemGetString">
            <summary>设置 MatrixTableRows`1.get_Item(String colname) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableRows`1.AllInstances.ItemSetStringMatrixTableCellOfT0">
            <summary>设置 MatrixTableRows`1.set_Item(String colname, MatrixTableCell`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableRows`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableRows`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableRows`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableRows`1.Constructor">
            <summary>设置 MatrixTableRows`1.MatrixTableRows`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableRows`1.ItemGetString">
            <summary>设置 MatrixTableRows`1.get_Item(String colname) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMatrixTableRows`1.ItemSetStringMatrixTableCellOfT0">
            <summary>设置 MatrixTableRows`1.set_Item(String colname, MatrixTableCell`1&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData">
            <summary>WolfInv.com.BaseObjectsLib.MongoData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.#ctor(WolfInv.com.BaseObjectsLib.MongoData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AddExtentDataMongoData">
            <summary>设置 MongoData.AddExtentData(MongoData ExData) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.AddExtentDataMongoData">
            <summary>设置 MongoData.AddExtentData(MongoData ExData) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.Clone">
            <summary>设置 MongoData.Clone() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.CloneOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.MongoData,``0})">
            <summary>设置 MongoData.Clone() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.GetFormatType">
            <summary>设置 MongoData.GetFormat(Type formatType) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.GetTypeCode">
            <summary>设置 MongoData.GetTypeCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.MatchBsonDocument">
            <summary>设置 MongoData.Match(BsonDocument bs) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.MatchBsonElement">
            <summary>设置 MongoData.Match(BsonElement bs) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleGetTypeCode">
            <summary>设置 MongoData.System.IConvertible.GetTypeCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToBooleanIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToBoolean(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToByteIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToByte(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToCharIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToChar(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToDateTimeIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToDateTime(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToDecimalIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToDecimal(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToDoubleIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToDouble(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToInt16IFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToInt16(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToInt32IFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToInt32(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToInt64IFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToInt64(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToSByteIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToSByte(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToSingleIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToSingle(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToStringIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToString(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToTypeTypeIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToType(Type conversionType, IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToUInt16IFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToUInt16(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToUInt32IFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToUInt32(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.SystemIConvertibleToUInt64IFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToUInt64(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToBooleanIFormatProvider">
            <summary>设置 MongoData.ToBoolean(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToByteIFormatProvider">
            <summary>设置 MongoData.ToByte(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToCharIFormatProvider">
            <summary>设置 MongoData.ToChar(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToDateTimeIFormatProvider">
            <summary>设置 MongoData.ToDateTime(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToDecimalIFormatProvider">
            <summary>设置 MongoData.ToDecimal(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToDoubleIFormatProvider">
            <summary>设置 MongoData.ToDouble(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToInt16IFormatProvider">
            <summary>设置 MongoData.ToInt16(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToInt32IFormatProvider">
            <summary>设置 MongoData.ToInt32(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToInt64IFormatProvider">
            <summary>设置 MongoData.ToInt64(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToSByteIFormatProvider">
            <summary>设置 MongoData.ToSByte(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToSingleIFormatProvider">
            <summary>设置 MongoData.ToSingle(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToTypeTypeIFormatProvider">
            <summary>设置 MongoData.ToType(Type conversionType, IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToUInt16IFormatProvider">
            <summary>设置 MongoData.ToUInt16(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToUInt32IFormatProvider">
            <summary>设置 MongoData.ToUInt32(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances.ToUInt64IFormatProvider">
            <summary>设置 MongoData.ToUInt64(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances._idGet">
            <summary>设置 MongoData.get__id() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.AllInstances._idSetBsonObjectId">
            <summary>设置 MongoData.set__id(BsonObjectId value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.Bind(WolfInv.com.BaseObjectsLib.IMatchFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.Bind(WolfInv.com.BaseObjectsLib.IObjectId)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.Bind(System.IFormatProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.Clone">
            <summary>设置 MongoData.Clone() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.CloneOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 MongoData.Clone() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.Constructor">
            <summary>设置 MongoData.MongoData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.GetFormatType">
            <summary>设置 MongoData.GetFormat(Type formatType) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.GetTypeCode">
            <summary>设置 MongoData.GetTypeCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.MatchBsonDocument">
            <summary>设置 MongoData.Match(BsonDocument bs) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.MatchBsonElement">
            <summary>设置 MongoData.Match(BsonElement bs) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleGetTypeCode">
            <summary>设置 MongoData.System.IConvertible.GetTypeCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToBooleanIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToBoolean(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToByteIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToByte(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToCharIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToChar(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToDateTimeIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToDateTime(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToDecimalIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToDecimal(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToDoubleIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToDouble(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToInt16IFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToInt16(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToInt32IFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToInt32(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToInt64IFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToInt64(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToSByteIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToSByte(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToSingleIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToSingle(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToStringIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToString(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToTypeTypeIFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToType(Type conversionType, IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToUInt16IFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToUInt16(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToUInt32IFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToUInt32(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.SystemIConvertibleToUInt64IFormatProvider">
            <summary>设置 MongoData.System.IConvertible.ToUInt64(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToBooleanIFormatProvider">
            <summary>设置 MongoData.ToBoolean(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToByteIFormatProvider">
            <summary>设置 MongoData.ToByte(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToCharIFormatProvider">
            <summary>设置 MongoData.ToChar(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToDateTimeIFormatProvider">
            <summary>设置 MongoData.ToDateTime(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToDecimalIFormatProvider">
            <summary>设置 MongoData.ToDecimal(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToDoubleIFormatProvider">
            <summary>设置 MongoData.ToDouble(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToInt16IFormatProvider">
            <summary>设置 MongoData.ToInt16(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToInt32IFormatProvider">
            <summary>设置 MongoData.ToInt32(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToInt64IFormatProvider">
            <summary>设置 MongoData.ToInt64(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToSByteIFormatProvider">
            <summary>设置 MongoData.ToSByte(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToSingleIFormatProvider">
            <summary>设置 MongoData.ToSingle(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToTypeTypeIFormatProvider">
            <summary>设置 MongoData.ToType(Type conversionType, IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToUInt16IFormatProvider">
            <summary>设置 MongoData.ToUInt16(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToUInt32IFormatProvider">
            <summary>设置 MongoData.ToUInt32(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData.ToUInt64IFormatProvider">
            <summary>设置 MongoData.ToUInt64(IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData._idGet">
            <summary>设置 MongoData.get__id() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoData._idSetBsonObjectId">
            <summary>设置 MongoData.set__id(BsonObjectId value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1">
            <summary>WolfInv.com.BaseObjectsLib.MongoDataDictionary`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.#ctor(WolfInv.com.BaseObjectsLib.MongoDataDictionary{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.Bind(System.Collections.IDictionary)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0}}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0}}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0}}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.Bind(System.Collections.Generic.IDictionary{System.String,WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.Bind(System.Collections.Generic.IReadOnlyDictionary{System.String,WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataDictionary`1.Constructor">
            <summary>设置 MongoDataDictionary`1.MongoDataDictionary`1() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList">
            <summary>WolfInv.com.BaseObjectsLib.MongoDataList 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.#ctor(WolfInv.com.BaseObjectsLib.MongoDataList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.Bind(System.Collections.Generic.ICollection{WolfInv.com.BaseObjectsLib.IObjectId})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.Bind(System.Collections.Generic.IEnumerable{WolfInv.com.BaseObjectsLib.IObjectId})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.Bind(System.Collections.Generic.IList{WolfInv.com.BaseObjectsLib.IObjectId})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.Bind(System.Collections.Generic.IReadOnlyCollection{WolfInv.com.BaseObjectsLib.IObjectId})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.Bind(System.Collections.Generic.IReadOnlyList{WolfInv.com.BaseObjectsLib.IObjectId})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoDataList.Constructor">
            <summary>设置 MongoDataList.MongoDataList() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1">
            <summary>WolfInv.com.BaseObjectsLib.MongoReturnDataList`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.#ctor(WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.Clone">
            <summary>设置 MongoReturnDataList`1.Clone() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.CopyBoolean">
            <summary>设置 MongoReturnDataList`1.Copy(Boolean Deeply) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.GetDataByIndiesInt32Array">
            <summary>设置 MongoReturnDataList`1.GetDataByIndies(Int32[] indies) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.GetExtendDataTableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0},System.Data.DataTable})">
            <summary>设置 MongoReturnDataList`1.GetExtendDataTable() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.GetFirstDataInt32">
            <summary>设置 MongoReturnDataList`1.GetFirstData(Int32 len) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.GetLastDataInt32">
            <summary>设置 MongoReturnDataList`1.GetLastData(Int32 len) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.GetMainDataTable">
            <summary>设置 MongoReturnDataList`1.GetMainDataTable() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.LocOf1Int32ArrayString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0},System.Int32[],System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 MongoReturnDataList`1.Loc(Int32[] indies, String FieldName) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.LocOf1Int32String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0},System.Int32,System.String,``0})">
            <summary>设置 MongoReturnDataList`1.Loc(Int32 index, String fieldname) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.LocOf2Int32ArrayFuncOfT0M0String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0},System.Int32[],System.Func{`0,``0},System.String,System.Collections.Generic.List{``1}})">
            <summary>设置 MongoReturnDataList`1.Loc(Int32[] indies, Func`2&lt;!0,!!0&gt; func, String FieldName) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.QueryBsonDocument">
            <summary>设置 MongoReturnDataList`1.Query(BsonDocument func) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.QueryOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0},System.String,``0,WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0}})">
            <summary>设置 MongoReturnDataList`1.Query(String col, !!0 val) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances.ToListOf1FuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0},System.Func{`0,``0},System.Collections.Generic.List{``0}})">
            <summary>设置 MongoReturnDataList`1.ToList(Func`2&lt;!0,!!0&gt; func) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.AllInstances._ctorb__0_0T0">
            <summary>设置 MongoReturnDataList`1.&lt;.ctor&gt;b__0_0(!0 p) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.Bind(System.Collections.Generic.IReadOnlyCollection{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.Bind(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.Clone">
            <summary>设置 MongoReturnDataList`1.Clone() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.Constructor">
            <summary>设置 MongoReturnDataList`1.MongoReturnDataList`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.ConstructorListOfT0">
            <summary>设置 MongoReturnDataList`1.MongoReturnDataList`1(List`1&lt;!0&gt; list) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.CopyBoolean">
            <summary>设置 MongoReturnDataList`1.Copy(Boolean Deeply) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.GetDataByIndiesInt32Array">
            <summary>设置 MongoReturnDataList`1.GetDataByIndies(Int32[] indies) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.GetExtendDataTableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable})">
            <summary>设置 MongoReturnDataList`1.GetExtendDataTable() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.GetFirstDataInt32">
            <summary>设置 MongoReturnDataList`1.GetFirstData(Int32 len) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.GetLastDataInt32">
            <summary>设置 MongoReturnDataList`1.GetLastData(Int32 len) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.GetMainDataTable">
            <summary>设置 MongoReturnDataList`1.GetMainDataTable() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.LocOf1Int32ArrayString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32[],System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 MongoReturnDataList`1.Loc(Int32[] indies, String FieldName) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.LocOf1Int32String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.String,``0})">
            <summary>设置 MongoReturnDataList`1.Loc(Int32 index, String fieldname) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.LocOf2Int32ArrayFuncOfT0M0String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32[],System.Func{`0,``0},System.String,System.Collections.Generic.List{``1}})">
            <summary>设置 MongoReturnDataList`1.Loc(Int32[] indies, Func`2&lt;!0,!!0&gt; func, String FieldName) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.QueryBsonDocument">
            <summary>设置 MongoReturnDataList`1.Query(BsonDocument func) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.QueryOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0}})">
            <summary>设置 MongoReturnDataList`1.Query(String col, !!0 val) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1.ToListOf1FuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{`0,``0},System.Collections.Generic.List{``0}})">
            <summary>设置 MongoReturnDataList`1.ToList(Func`2&lt;!0,!!0&gt; func) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimMongoReturnDataList`1._ctorb__0_0T0">
            <summary>设置 MongoReturnDataList`1.&lt;.ctor&gt;b__0_0(!0 p) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1">
            <summary>WolfInv.com.BaseObjectsLib.NolimitTraceChance`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.#ctor(WolfInv.com.BaseObjectsLib.NolimitTraceChance{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.AllInstances.CheckNeedEndTheChanceOf1ChanceClassOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.NolimitTraceChance{`0},WolfInv.com.BaseObjectsLib.ChanceClass{``0},System.Boolean,System.Boolean})">
            <summary>设置 NolimitTraceChance`1.CheckNeedEndTheChance(ChanceClass`1&lt;!!0&gt; cc, Boolean LastExpectMatched) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.AllInstances.getChipAmountOf1DoubleChanceClassOfM0AmoutSerials``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.NolimitTraceChance{`0},System.Double,WolfInv.com.BaseObjectsLib.ChanceClass{``0},WolfInv.com.BaseObjectsLib.AmoutSerials,System.Int64})">
            <summary>设置 NolimitTraceChance`1.getChipAmount(Double RestCash, ChanceClass`1&lt;!!0&gt; cc, AmoutSerials amts) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.Bind(WolfInv.com.BaseObjectsLib.ISpecAmount)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.Bind(WolfInv.com.BaseObjectsLib.ITraceChance)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.CheckNeedEndTheChanceOf1ChanceClassOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.ChanceClass{``0},System.Boolean,System.Boolean})">
            <summary>设置 NolimitTraceChance`1.CheckNeedEndTheChance(ChanceClass`1&lt;!!0&gt; cc, Boolean LastExpectMatched) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.Constructor">
            <summary>设置 NolimitTraceChance`1.NolimitTraceChance`1() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimNolimitTraceChance`1.getChipAmountOf1DoubleChanceClassOfM0AmoutSerials``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Double,WolfInv.com.BaseObjectsLib.ChanceClass{``0},WolfInv.com.BaseObjectsLib.AmoutSerials,System.Int64})">
            <summary>设置 NolimitTraceChance`1.getChipAmount(Double RestCash, ChanceClass`1&lt;!!0&gt; cc, AmoutSerials amts) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimOnceChance`1">
            <summary>WolfInv.com.BaseObjectsLib.OnceChance`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOnceChance`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOnceChance`1.#ctor(WolfInv.com.BaseObjectsLib.OnceChance{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimOnceChance`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOnceChance`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOnceChance`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOnceChance`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOnceChance`1.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOnceChance`1.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOnceChance`1.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOnceChance`1.Constructor">
            <summary>设置 OnceChance`1.OnceChance`1() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData">
            <summary>WolfInv.com.BaseObjectsLib.OneCycleData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.#ctor(WolfInv.com.BaseObjectsLib.OneCycleData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.ToDataSetOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.OneCycleData,System.Collections.Generic.List{``0},System.Data.DataSet})">
            <summary>设置 OneCycleData.ToDataSet(List`1&lt;!!0&gt; list) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.amountGet">
            <summary>设置 OneCycleData.get_amount() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.amountSetDouble">
            <summary>设置 OneCycleData.set_amount(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.closeGet">
            <summary>设置 OneCycleData.get_close() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.closeSetDouble">
            <summary>设置 OneCycleData.set_close(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.codeGet">
            <summary>设置 OneCycleData.get_code() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.codeSetString">
            <summary>设置 OneCycleData.set_code(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.dateGet">
            <summary>设置 OneCycleData.get_date() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.dateSetString">
            <summary>设置 OneCycleData.set_date(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.date_stampGet">
            <summary>设置 OneCycleData.get_date_stamp() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.date_stampSetDouble">
            <summary>设置 OneCycleData.set_date_stamp(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.highGet">
            <summary>设置 OneCycleData.get_high() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.highSetDouble">
            <summary>设置 OneCycleData.set_high(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.lowGet">
            <summary>设置 OneCycleData.get_low() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.lowSetDouble">
            <summary>设置 OneCycleData.set_low(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.openGet">
            <summary>设置 OneCycleData.get_open() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.openSetDouble">
            <summary>设置 OneCycleData.set_open(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.volGet">
            <summary>设置 OneCycleData.get_vol() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.AllInstances.volSetDouble">
            <summary>设置 OneCycleData.set_vol(Double value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Bind(WolfInv.com.BaseObjectsLib.ICodeData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Bind(WolfInv.com.BaseObjectsLib.IDateData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Bind(WolfInv.com.BaseObjectsLib.IExchangeData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Bind(WolfInv.com.BaseObjectsLib.IMatchFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Bind(WolfInv.com.BaseObjectsLib.IOHLCData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Bind(WolfInv.com.BaseObjectsLib.IObjectId)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Bind(WolfInv.com.BaseObjectsLib.iVolAmount)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Bind(System.IFormatProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.Constructor">
            <summary>设置 OneCycleData.OneCycleData() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.ToDataSetOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Data.DataSet})">
            <summary>设置 OneCycleData.ToDataSet(List`1&lt;!!0&gt; list) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.amountGet">
            <summary>设置 OneCycleData.get_amount() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.amountSetDouble">
            <summary>设置 OneCycleData.set_amount(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.closeGet">
            <summary>设置 OneCycleData.get_close() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.closeSetDouble">
            <summary>设置 OneCycleData.set_close(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.codeGet">
            <summary>设置 OneCycleData.get_code() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.codeSetString">
            <summary>设置 OneCycleData.set_code(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.dateGet">
            <summary>设置 OneCycleData.get_date() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.dateSetString">
            <summary>设置 OneCycleData.set_date(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.date_stampGet">
            <summary>设置 OneCycleData.get_date_stamp() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.date_stampSetDouble">
            <summary>设置 OneCycleData.set_date_stamp(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.highGet">
            <summary>设置 OneCycleData.get_high() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.highSetDouble">
            <summary>设置 OneCycleData.set_high(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.lowGet">
            <summary>设置 OneCycleData.get_low() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.lowSetDouble">
            <summary>设置 OneCycleData.set_low(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.openGet">
            <summary>设置 OneCycleData.get_open() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.openSetDouble">
            <summary>设置 OneCycleData.set_open(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.volGet">
            <summary>设置 OneCycleData.get_vol() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimOneCycleData.volSetDouble">
            <summary>设置 OneCycleData.set_vol(Double value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimPrintClass">
            <summary>WolfInv.com.BaseObjectsLib.PrintClass 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimPrintClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimPrintClass.#ctor(WolfInv.com.BaseObjectsLib.PrintClass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimPrintClass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimPrintClass.AllInstances.ToClassInfo">
            <summary>设置 PrintClass.ToClassInfo() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimPrintClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimPrintClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimPrintClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimPrintClass.Constructor">
            <summary>设置 PrintClass.PrintClass() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimPrintClass.ToClassInfo">
            <summary>设置 PrintClass.ToClassInfo() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimRecordObject">
            <summary>WolfInv.com.BaseObjectsLib.RecordObject 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimRecordObject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimRecordObject.#ctor(WolfInv.com.BaseObjectsLib.RecordObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimRecordObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimRecordObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimRecordObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimRecordObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimRecordObject.Constructor">
            <summary>设置 RecordObject.RecordObject() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimSecBuffData">
            <summary>WolfInv.com.BaseObjectsLib.SecBuffData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSecBuffData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSecBuffData.#ctor(WolfInv.com.BaseObjectsLib.SecBuffData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimSecBuffData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSecBuffData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSecBuffData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecBuffData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecBuffData.Constructor">
            <summary>设置 SecBuffData.SecBuffData() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass">
            <summary>WolfInv.com.BaseObjectsLib.SecurityInfoClass 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.#ctor(WolfInv.com.BaseObjectsLib.SecurityInfoClass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.FirstDayGet">
            <summary>设置 SecurityInfoClass.get_FirstDay() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.FirstDaySetDateTime">
            <summary>设置 SecurityInfoClass.set_FirstDay(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.IsIndexGet">
            <summary>设置 SecurityInfoClass.get_IsIndex() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.IsIndexSetBoolean">
            <summary>设置 SecurityInfoClass.set_IsIndex(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.IsSTGet">
            <summary>设置 SecurityInfoClass.get_IsST() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.IsSTSetString">
            <summary>设置 SecurityInfoClass.set_IsST(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.IsTradeDayGet">
            <summary>设置 SecurityInfoClass.get_IsTradeDay() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.IsTradeDaySetBoolean">
            <summary>设置 SecurityInfoClass.set_IsTradeDay(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.OnMarketDays">
            <summary>设置 SecurityInfoClass.OnMarketDays() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.StockIDGet">
            <summary>设置 SecurityInfoClass.get_StockID() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.StockIDSetString">
            <summary>设置 SecurityInfoClass.set_StockID(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.StockNameGet">
            <summary>设置 SecurityInfoClass.get_StockName() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.StockNameSetString">
            <summary>设置 SecurityInfoClass.set_StockName(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.AllInstances.historyDataGet">
            <summary>设置 SecurityInfoClass.get_historyData() 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.Constructor">
            <summary>设置 SecurityInfoClass.SecurityInfoClass() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.FirstDayGet">
            <summary>设置 SecurityInfoClass.get_FirstDay() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.FirstDaySetDateTime">
            <summary>设置 SecurityInfoClass.set_FirstDay(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.IsIndexGet">
            <summary>设置 SecurityInfoClass.get_IsIndex() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.IsIndexSetBoolean">
            <summary>设置 SecurityInfoClass.set_IsIndex(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.IsSTGet">
            <summary>设置 SecurityInfoClass.get_IsST() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.IsSTSetString">
            <summary>设置 SecurityInfoClass.set_IsST(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.IsTradeDayGet">
            <summary>设置 SecurityInfoClass.get_IsTradeDay() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.IsTradeDaySetBoolean">
            <summary>设置 SecurityInfoClass.set_IsTradeDay(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.OnMarketDays">
            <summary>设置 SecurityInfoClass.OnMarketDays() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.StockIDGet">
            <summary>设置 SecurityInfoClass.get_StockID() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.StockIDSetString">
            <summary>设置 SecurityInfoClass.set_StockID(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.StockNameGet">
            <summary>设置 SecurityInfoClass.get_StockName() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.StockNameSetString">
            <summary>设置 SecurityInfoClass.set_StockName(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSecurityInfoClass.historyDataGet">
            <summary>设置 SecurityInfoClass.get_historyData() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1">
            <summary>WolfInv.com.BaseObjectsLib.SerialObjectEdit`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.#ctor(WolfInv.com.BaseObjectsLib.SerialObjectEdit{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.AllInstances.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>设置 SerialObjectEdit`1.EditValue(ITypeDescriptorContext context, IServiceProvider provider, Object value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.AllInstances.GetEditStyleITypeDescriptorContext">
            <summary>设置 SerialObjectEdit`1.GetEditStyle(ITypeDescriptorContext context) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.AllInstances.GetPaintValueSupportedITypeDescriptorContext">
            <summary>设置 SerialObjectEdit`1.GetPaintValueSupported(ITypeDescriptorContext context) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.Constructor">
            <summary>设置 SerialObjectEdit`1.SerialObjectEdit`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>设置 SerialObjectEdit`1.EditValue(ITypeDescriptorContext context, IServiceProvider provider, Object value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.GetEditStyleITypeDescriptorContext">
            <summary>设置 SerialObjectEdit`1.GetEditStyle(ITypeDescriptorContext context) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialObjectEdit`1.GetPaintValueSupportedITypeDescriptorContext">
            <summary>设置 SerialObjectEdit`1.GetPaintValueSupported(ITypeDescriptorContext context) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1">
            <summary>WolfInv.com.BaseObjectsLib.SerialableObjectEditor`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.#ctor(WolfInv.com.BaseObjectsLib.SerialableObjectEditor{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.AllInstances.DisposeBoolean">
            <summary>设置 SerialableObjectEditor`1.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.AllInstances.FillObjectT0">
            <summary>设置 SerialableObjectEditor`1.FillObject(!0 o) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.AllInstances.InitializeComponent">
            <summary>设置 SerialableObjectEditor`1.InitializeComponent() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.AllInstances.SelectedObjectGet">
            <summary>设置 SerialableObjectEditor`1.get_SelectedObject() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.AllInstances.btn_Close_ClickObjectEventArgs">
            <summary>设置 SerialableObjectEditor`1.btn_Close_Click(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.AllInstances.btn_ok_ClickObjectEventArgs">
            <summary>设置 SerialableObjectEditor`1.btn_ok_Click(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.Bind(System.ComponentModel.ISynchronizeInvoke)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.Bind(System.Windows.Forms.IBindableComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.Bind(System.Windows.Forms.IContainerControl)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.Bind(System.Windows.Forms.IDropTarget)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.Bind(System.Windows.Forms.IWin32Window)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.Constructor">
            <summary>设置 SerialableObjectEditor`1.SerialableObjectEditor`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.DisposeBoolean">
            <summary>设置 SerialableObjectEditor`1.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.FillObjectT0">
            <summary>设置 SerialableObjectEditor`1.FillObject(!0 o) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.InitializeComponent">
            <summary>设置 SerialableObjectEditor`1.InitializeComponent() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.SelectedObjectGet">
            <summary>设置 SerialableObjectEditor`1.get_SelectedObject() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.btn_Close_ClickObjectEventArgs">
            <summary>设置 SerialableObjectEditor`1.btn_Close_Click(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSerialableObjectEditor`1.btn_ok_ClickObjectEventArgs">
            <summary>设置 SerialableObjectEditor`1.btn_ok_Click(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass">
            <summary>WolfInv.com.BaseObjectsLib.SettingClass 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.#ctor(WolfInv.com.BaseObjectsLib.SettingClass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.DispRowsGet">
            <summary>设置 SettingClass.get_DispRows() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.DispRowsSetInt32">
            <summary>设置 SettingClass.set_DispRows(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.GetGlobalSetting">
            <summary>设置 SettingClass.GetGlobalSetting() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.GrownMaxValGet">
            <summary>设置 SettingClass.get_GrownMaxVal() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.GrownMaxValSetInt32">
            <summary>设置 SettingClass.set_GrownMaxVal(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.GrownMinValGet">
            <summary>设置 SettingClass.get_GrownMinVal() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.GrownMinValSetInt32">
            <summary>设置 SettingClass.set_GrownMinVal(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.InitCashGet">
            <summary>设置 SettingClass.get_InitCash() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.InitCashSetInt64">
            <summary>设置 SettingClass.set_InitCash(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.MaxHoldingCntGet">
            <summary>设置 SettingClass.get_MaxHoldingCnt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.MaxHoldingCntSetInt32">
            <summary>设置 SettingClass.set_MaxHoldingCnt(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.OddsGet">
            <summary>设置 SettingClass.get_Odds() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.OddsSetDouble">
            <summary>设置 SettingClass.set_Odds(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.SetGlobalSettingGlobalClass">
            <summary>设置 SettingClass.SetGlobalSetting(GlobalClass value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.UseLocalWaveDataGet">
            <summary>设置 SettingClass.get_UseLocalWaveData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.UseLocalWaveDataSetBoolean">
            <summary>设置 SettingClass.set_UseLocalWaveData(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.minColTimesGet">
            <summary>设置 SettingClass.get_minColTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.AllInstances.minColTimesSetInt32Array">
            <summary>设置 SettingClass.set_minColTimes(Int32[] value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.Constructor">
            <summary>设置 SettingClass.SettingClass() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.DispRowsGet">
            <summary>设置 SettingClass.get_DispRows() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.DispRowsSetInt32">
            <summary>设置 SettingClass.set_DispRows(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.GetGlobalSetting">
            <summary>设置 SettingClass.GetGlobalSetting() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.GrownMaxValGet">
            <summary>设置 SettingClass.get_GrownMaxVal() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.GrownMaxValSetInt32">
            <summary>设置 SettingClass.set_GrownMaxVal(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.GrownMinValGet">
            <summary>设置 SettingClass.get_GrownMinVal() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.GrownMinValSetInt32">
            <summary>设置 SettingClass.set_GrownMinVal(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.InitCashGet">
            <summary>设置 SettingClass.get_InitCash() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.InitCashSetInt64">
            <summary>设置 SettingClass.set_InitCash(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.MaxHoldingCntGet">
            <summary>设置 SettingClass.get_MaxHoldingCnt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.MaxHoldingCntSetInt32">
            <summary>设置 SettingClass.set_MaxHoldingCnt(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.OddsGet">
            <summary>设置 SettingClass.get_Odds() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.OddsSetDouble">
            <summary>设置 SettingClass.set_Odds(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.SetGlobalSettingGlobalClass">
            <summary>设置 SettingClass.SetGlobalSetting(GlobalClass value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.UseLocalWaveDataGet">
            <summary>设置 SettingClass.get_UseLocalWaveData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.UseLocalWaveDataSetBoolean">
            <summary>设置 SettingClass.set_UseLocalWaveData(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.minColTimesGet">
            <summary>设置 SettingClass.get_minColTimes() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSettingClass.minColTimesSetInt32Array">
            <summary>设置 SettingClass.set_minColTimes(Int32[] value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData">
            <summary>WolfInv.com.BaseObjectsLib.StockIndexMongoData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.#ctor(WolfInv.com.BaseObjectsLib.StockIndexMongoData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.AllInstances.down_countGet">
            <summary>设置 StockIndexMongoData.get_down_count() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.AllInstances.down_countSetInt32">
            <summary>设置 StockIndexMongoData.set_down_count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.AllInstances.up_countGet">
            <summary>设置 StockIndexMongoData.get_up_count() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.AllInstances.up_countSetInt32">
            <summary>设置 StockIndexMongoData.set_up_count(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Bind(WolfInv.com.BaseObjectsLib.ICodeData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Bind(WolfInv.com.BaseObjectsLib.IDateData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Bind(WolfInv.com.BaseObjectsLib.IExchangeData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Bind(WolfInv.com.BaseObjectsLib.IMatchFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Bind(WolfInv.com.BaseObjectsLib.IOHLCData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Bind(WolfInv.com.BaseObjectsLib.IObjectId)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Bind(WolfInv.com.BaseObjectsLib.iVolAmount)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Bind(System.IFormatProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.Constructor">
            <summary>设置 StockIndexMongoData.StockIndexMongoData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.down_countGet">
            <summary>设置 StockIndexMongoData.get_down_count() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.down_countSetInt32">
            <summary>设置 StockIndexMongoData.set_down_count(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.up_countGet">
            <summary>设置 StockIndexMongoData.get_up_count() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockIndexMongoData.up_countSetInt32">
            <summary>设置 StockIndexMongoData.set_up_count(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData">
            <summary>WolfInv.com.BaseObjectsLib.StockInfoMongoData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.#ctor(WolfInv.com.BaseObjectsLib.StockInfoMongoData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.FullCodeGet">
            <summary>设置 StockInfoMongoData.get_FullCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.codeGet">
            <summary>设置 StockInfoMongoData.get_code() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.codeSetString">
            <summary>设置 StockInfoMongoData.set_code(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.decimal_pointGet">
            <summary>设置 StockInfoMongoData.get_decimal_point() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.decimal_pointSetInt32">
            <summary>设置 StockInfoMongoData.set_decimal_point(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.nameGet">
            <summary>设置 StockInfoMongoData.get_name() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.nameSetString">
            <summary>设置 StockInfoMongoData.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.pre_closeGet">
            <summary>设置 StockInfoMongoData.get_pre_close() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.pre_closeSetDouble">
            <summary>设置 StockInfoMongoData.set_pre_close(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.secGet">
            <summary>设置 StockInfoMongoData.get_sec() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.secSetString">
            <summary>设置 StockInfoMongoData.set_sec(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.sseGet">
            <summary>设置 StockInfoMongoData.get_sse() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.sseSetString">
            <summary>设置 StockInfoMongoData.set_sse(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.volunitGet">
            <summary>设置 StockInfoMongoData.get_volunit() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.AllInstances.volunitSetInt32">
            <summary>设置 StockInfoMongoData.set_volunit(Int32 value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.Bind(WolfInv.com.BaseObjectsLib.ICodeData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.Bind(WolfInv.com.BaseObjectsLib.IMatchFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.Bind(WolfInv.com.BaseObjectsLib.IObjectId)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.Bind(System.IFormatProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.Constructor">
            <summary>设置 StockInfoMongoData.StockInfoMongoData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.FullCodeGet">
            <summary>设置 StockInfoMongoData.get_FullCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.codeGet">
            <summary>设置 StockInfoMongoData.get_code() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.codeSetString">
            <summary>设置 StockInfoMongoData.set_code(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.decimal_pointGet">
            <summary>设置 StockInfoMongoData.get_decimal_point() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.decimal_pointSetInt32">
            <summary>设置 StockInfoMongoData.set_decimal_point(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.nameGet">
            <summary>设置 StockInfoMongoData.get_name() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.nameSetString">
            <summary>设置 StockInfoMongoData.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.pre_closeGet">
            <summary>设置 StockInfoMongoData.get_pre_close() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.pre_closeSetDouble">
            <summary>设置 StockInfoMongoData.set_pre_close(Double value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.secGet">
            <summary>设置 StockInfoMongoData.get_sec() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.secSetString">
            <summary>设置 StockInfoMongoData.set_sec(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.sseGet">
            <summary>设置 StockInfoMongoData.get_sse() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.sseSetString">
            <summary>设置 StockInfoMongoData.set_sse(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.volunitGet">
            <summary>设置 StockInfoMongoData.get_volunit() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockInfoMongoData.volunitSetInt32">
            <summary>设置 StockInfoMongoData.set_volunit(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData">
            <summary>WolfInv.com.BaseObjectsLib.StockMongoData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.#ctor(WolfInv.com.BaseObjectsLib.StockMongoData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Bind(WolfInv.com.BaseObjectsLib.ICodeData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Bind(WolfInv.com.BaseObjectsLib.IDateData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Bind(WolfInv.com.BaseObjectsLib.IExchangeData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Bind(WolfInv.com.BaseObjectsLib.IMatchFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Bind(WolfInv.com.BaseObjectsLib.IOHLCData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Bind(WolfInv.com.BaseObjectsLib.IObjectId)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Bind(WolfInv.com.BaseObjectsLib.iVolAmount)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Bind(System.IFormatProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimStockMongoData.Constructor">
            <summary>设置 StockMongoData.StockMongoData() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2">
            <summary>WolfInv.com.BaseObjectsLib.SystemParams`2 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.#ctor(WolfInv.com.BaseObjectsLib.SystemParams{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.Bind(System.Collections.IDictionary)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.Bind(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.Bind(System.Collections.Generic.IReadOnlyDictionary{`0,`1})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimSystemParams`2.Constructor">
            <summary>设置 SystemParams`2.SystemParams`2() 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData">
            <summary>WolfInv.com.BaseObjectsLib.TimeSerialData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.#ctor(WolfInv.com.BaseObjectsLib.TimeSerialData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.CurrTimeGet">
            <summary>设置 TimeSerialData.get_CurrTime() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.EIdGet">
            <summary>设置 TimeSerialData.get_EId() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.EIdSetInt64">
            <summary>设置 TimeSerialData.set_EId(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.ExpectGet">
            <summary>设置 TimeSerialData.get_Expect() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.ExpectSetString">
            <summary>设置 TimeSerialData.set_Expect(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.IsSecurityGet">
            <summary>设置 TimeSerialData.get_IsSecurity() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.IsSecuritySetBoolean">
            <summary>设置 TimeSerialData.set_IsSecurity(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.KeyGet">
            <summary>设置 TimeSerialData.get_Key() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.LastExpectGet">
            <summary>设置 TimeSerialData.get_LastExpect() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.LastExpectSetString">
            <summary>设置 TimeSerialData.set_LastExpect(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.MissedCntGet">
            <summary>设置 TimeSerialData.get_MissedCnt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.MissedCntSetInt32">
            <summary>设置 TimeSerialData.set_MissedCnt(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.OpenCodeGet">
            <summary>设置 TimeSerialData.get_OpenCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.OpenCodeSetString">
            <summary>设置 TimeSerialData.set_OpenCode(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.OpenTimeGet">
            <summary>设置 TimeSerialData.get_OpenTime() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.AllInstances.OpenTimeSetDateTime">
            <summary>设置 TimeSerialData.set_OpenTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.Bind(WolfInv.com.BaseObjectsLib.IMatchFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.Bind(WolfInv.com.BaseObjectsLib.IObjectId)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.Bind(System.IFormatProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.Constructor">
            <summary>设置 TimeSerialData.TimeSerialData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.CurrTimeGet">
            <summary>设置 TimeSerialData.get_CurrTime() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.EIdGet">
            <summary>设置 TimeSerialData.get_EId() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.EIdSetInt64">
            <summary>设置 TimeSerialData.set_EId(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.ExpectGet">
            <summary>设置 TimeSerialData.get_Expect() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.ExpectSetString">
            <summary>设置 TimeSerialData.set_Expect(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.IsSecurityGet">
            <summary>设置 TimeSerialData.get_IsSecurity() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.IsSecuritySetBoolean">
            <summary>设置 TimeSerialData.set_IsSecurity(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.KeyGet">
            <summary>设置 TimeSerialData.get_Key() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.LastExpectGet">
            <summary>设置 TimeSerialData.get_LastExpect() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.LastExpectSetString">
            <summary>设置 TimeSerialData.set_LastExpect(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.MissedCntGet">
            <summary>设置 TimeSerialData.get_MissedCnt() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.MissedCntSetInt32">
            <summary>设置 TimeSerialData.set_MissedCnt(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.OpenCodeGet">
            <summary>设置 TimeSerialData.get_OpenCode() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.OpenCodeSetString">
            <summary>设置 TimeSerialData.set_OpenCode(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.OpenTimeGet">
            <summary>设置 TimeSerialData.get_OpenTime() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTimeSerialData.OpenTimeSetDateTime">
            <summary>设置 TimeSerialData.set_OpenTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1">
            <summary>WolfInv.com.BaseObjectsLib.TraceChance`1 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.#ctor(WolfInv.com.BaseObjectsLib.TraceChance{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.AllInstances.CheckNeedEndTheChanceChanceClassOfT0Boolean">
            <summary>设置 TraceChance`1.CheckNeedEndTheChance(ChanceClass`1&lt;!0&gt; cc, Boolean LastExpectMatched) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.AllInstances.IsTracingGet">
            <summary>设置 TraceChance`1.get_IsTracing() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.AllInstances.IsTracingSetBoolean">
            <summary>设置 TraceChance`1.set_IsTracing(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.Bind(WolfInv.com.BaseObjectsLib.ISpecAmount)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.Bind(WolfInv.com.BaseObjectsLib.ITraceChance)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.CheckNeedEndTheChanceChanceClassOfT0Boolean">
            <summary>设置 TraceChance`1.CheckNeedEndTheChance(ChanceClass`1&lt;!0&gt; cc, Boolean LastExpectMatched) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.Constructor">
            <summary>设置 TraceChance`1.TraceChance`1() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.IsTracingGet">
            <summary>设置 TraceChance`1.get_IsTracing() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimTraceChance`1.IsTracingSetBoolean">
            <summary>设置 TraceChance`1.set_IsTracing(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData">
            <summary>WolfInv.com.BaseObjectsLib.XDXRData 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.#ctor(WolfInv.com.BaseObjectsLib.XDXRData)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.categoryGet">
            <summary>设置 XDXRData.get_category() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.categorySetNullableOfInt32">
            <summary>设置 XDXRData.set_category(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.category_meaningGet">
            <summary>设置 XDXRData.get_category_meaning() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.category_meaningSetString">
            <summary>设置 XDXRData.set_category_meaning(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.codeGet">
            <summary>设置 XDXRData.get_code() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.codeSetString">
            <summary>设置 XDXRData.set_code(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.dateGet">
            <summary>设置 XDXRData.get_date() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.dateSetString">
            <summary>设置 XDXRData.set_date(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.fenhongGet">
            <summary>设置 XDXRData.get_fenhong() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.fenhongSetNullableOfDouble">
            <summary>设置 XDXRData.set_fenhong(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.fenshuGet">
            <summary>设置 XDXRData.get_fenshu() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.fenshuSetNullableOfDouble">
            <summary>设置 XDXRData.set_fenshu(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.liquidity_afterGet">
            <summary>设置 XDXRData.get_liquidity_after() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.liquidity_afterSetNullableOfDouble">
            <summary>设置 XDXRData.set_liquidity_after(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.liquidity_beforeGet">
            <summary>设置 XDXRData.get_liquidity_before() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.liquidity_beforeSetNullableOfDouble">
            <summary>设置 XDXRData.set_liquidity_before(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.nameGet">
            <summary>设置 XDXRData.get_name() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.nameSetString">
            <summary>设置 XDXRData.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.peiguGet">
            <summary>设置 XDXRData.get_peigu() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.peiguSetNullableOfDouble">
            <summary>设置 XDXRData.set_peigu(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.peigujiaGet">
            <summary>设置 XDXRData.get_peigujia() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.peigujiaSetNullableOfDouble">
            <summary>设置 XDXRData.set_peigujia(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.shares_afterGet">
            <summary>设置 XDXRData.get_shares_after() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.shares_afterSetNullableOfDouble">
            <summary>设置 XDXRData.set_shares_after(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.shares_beforeGet">
            <summary>设置 XDXRData.get_shares_before() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.shares_beforeSetNullableOfDouble">
            <summary>设置 XDXRData.set_shares_before(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.songzhuanguGet">
            <summary>设置 XDXRData.get_songzhuangu() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.songzhuanguSetNullableOfDouble">
            <summary>设置 XDXRData.set_songzhuangu(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.suoguGet">
            <summary>设置 XDXRData.get_suogu() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.suoguSetNullableOfDouble">
            <summary>设置 XDXRData.set_suogu(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.xingquanjiaGet">
            <summary>设置 XDXRData.get_xingquanjia() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.AllInstances.xingquanjiaSetNullableOfDouble">
            <summary>设置 XDXRData.set_xingquanjia(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.Bind(WolfInv.com.BaseObjectsLib.ICodeData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.Bind(WolfInv.com.BaseObjectsLib.IDateData)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.Bind(WolfInv.com.BaseObjectsLib.IMatchFilter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.Bind(WolfInv.com.BaseObjectsLib.IObjectId)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.Bind(WolfInv.com.BaseObjectsLib.iDetailListParamsable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.Bind(WolfInv.com.LogLib.iLog)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.Bind(System.IConvertible)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.Bind(System.IFormatProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.Constructor">
            <summary>设置 XDXRData.XDXRData() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.categoryGet">
            <summary>设置 XDXRData.get_category() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.categorySetNullableOfInt32">
            <summary>设置 XDXRData.set_category(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.category_meaningGet">
            <summary>设置 XDXRData.get_category_meaning() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.category_meaningSetString">
            <summary>设置 XDXRData.set_category_meaning(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.codeGet">
            <summary>设置 XDXRData.get_code() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.codeSetString">
            <summary>设置 XDXRData.set_code(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.dateGet">
            <summary>设置 XDXRData.get_date() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.dateSetString">
            <summary>设置 XDXRData.set_date(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.fenhongGet">
            <summary>设置 XDXRData.get_fenhong() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.fenhongSetNullableOfDouble">
            <summary>设置 XDXRData.set_fenhong(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.fenshuGet">
            <summary>设置 XDXRData.get_fenshu() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.fenshuSetNullableOfDouble">
            <summary>设置 XDXRData.set_fenshu(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.liquidity_afterGet">
            <summary>设置 XDXRData.get_liquidity_after() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.liquidity_afterSetNullableOfDouble">
            <summary>设置 XDXRData.set_liquidity_after(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.liquidity_beforeGet">
            <summary>设置 XDXRData.get_liquidity_before() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.liquidity_beforeSetNullableOfDouble">
            <summary>设置 XDXRData.set_liquidity_before(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.nameGet">
            <summary>设置 XDXRData.get_name() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.nameSetString">
            <summary>设置 XDXRData.set_name(String value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.peiguGet">
            <summary>设置 XDXRData.get_peigu() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.peiguSetNullableOfDouble">
            <summary>设置 XDXRData.set_peigu(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.peigujiaGet">
            <summary>设置 XDXRData.get_peigujia() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.peigujiaSetNullableOfDouble">
            <summary>设置 XDXRData.set_peigujia(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.shares_afterGet">
            <summary>设置 XDXRData.get_shares_after() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.shares_afterSetNullableOfDouble">
            <summary>设置 XDXRData.set_shares_after(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.shares_beforeGet">
            <summary>设置 XDXRData.get_shares_before() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.shares_beforeSetNullableOfDouble">
            <summary>设置 XDXRData.set_shares_before(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.songzhuanguGet">
            <summary>设置 XDXRData.get_songzhuangu() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.songzhuanguSetNullableOfDouble">
            <summary>设置 XDXRData.set_songzhuangu(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.suoguGet">
            <summary>设置 XDXRData.get_suogu() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.suoguSetNullableOfDouble">
            <summary>设置 XDXRData.set_suogu(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.xingquanjiaGet">
            <summary>设置 XDXRData.get_xingquanjia() 的 填充码</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXDXRData.xingquanjiaSetNullableOfDouble">
            <summary>设置 XDXRData.set_xingquanjia(Nullable`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.ShimXmlHelper">
            <summary>WolfInv.com.BaseObjectsLib.XmlHelper 的填充码类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXmlHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXmlHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.ShimXmlHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.ShimXmlHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubBaseChance`1">
            <summary>WolfInv.com.BaseObjectsLib.BaseChance`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseChance`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseChance`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseChance`1.InitializeStub">
            <summary>初始化 type StubBaseChance 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseChance`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseChance`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseChance`1.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseChance`1.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1">
            <summary>WolfInv.com.BaseObjectsLib.BaseCollection`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.AttachBackingFieldToisByNo">
            <summary>附加委托以将 StubBaseCollection.isByNo 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.CarDistributionTable">
            <summary>设置 BaseCollection`1.get_CarDistributionTable() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.CarDistributionTableGet">
            <summary>设置 BaseCollection`1.get_CarDistributionTable() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.CarTable">
            <summary>设置 BaseCollection`1.get_CarTable() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.CarTableGet">
            <summary>设置 BaseCollection`1.get_CarTable() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.FindLastDataExistCount(System.Int32,System.String,System.String)">
            <summary>设置 BaseCollection`1.FindLastDataExistCount(Int32 lng, String StrPos, String key) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.FindLastDataExistCount(System.Int32,System.Int32,System.String,System.String)">
            <summary>设置 BaseCollection`1.FindLastDataExistCount(Int32 StartPos, Int32 lng, String StrKey, String val) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.FindLastDataExistCountInt32Int32StringString">
            <summary>设置 BaseCollection`1.FindLastDataExistCount(Int32 StartPos, Int32 lng, String StrKey, String val) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.FindLastDataExistCountInt32StringString">
            <summary>设置 BaseCollection`1.FindLastDataExistCount(Int32 lng, String StrPos, String key) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.FindSpecColumnValue(System.Int32,System.String)">
            <summary>设置 BaseCollection`1.FindSpecColumnValue(Int32 id, String strKey) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.FindSpecColumnValueInt32String">
            <summary>设置 BaseCollection`1.FindSpecColumnValue(Int32 id, String strKey) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.GetAllDistrStdDevInt32Int32">
            <summary>设置 BaseCollection`1.getAllDistrStdDev(Int32 n, Int32 c) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.GetAllShiftCntInt32Int32">
            <summary>设置 BaseCollection`1.getAllShiftCnt(Int32 ReviewCnt, Int32 TrainCnt) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.GetC_K_NStepInt32Int32">
            <summary>设置 BaseCollection`1.getC_K_NStep(Int32 reviewCnt, Int32 StepCnt) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.GetEntropyListInt32">
            <summary>设置 BaseCollection`1.getEntropyList(Int32 reviewCnt) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.GetSubTableInt32Int32">
            <summary>设置 BaseCollection`1.getSubTable(Int32 cnt, Int32 n) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.InitializeStub">
            <summary>初始化 type StubBaseCollection 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.IsByNoGet">
            <summary>设置 BaseCollection`1.get_isByNo() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.IsByNoSetBoolean">
            <summary>设置 BaseCollection`1.set_isByNo(Boolean value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.SerialDistributionTable">
            <summary>设置 BaseCollection`1.get_SerialDistributionTable() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.SerialDistributionTableGet">
            <summary>设置 BaseCollection`1.get_SerialDistributionTable() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.Table">
            <summary>设置 BaseCollection`1.get_Table() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.TableGet">
            <summary>设置 BaseCollection`1.get_Table() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.getAllDistrStdDev(System.Int32,System.Int32)">
            <summary>设置 BaseCollection`1.getAllDistrStdDev(Int32 n, Int32 c) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.getAllShiftCnt(System.Int32,System.Int32)">
            <summary>设置 BaseCollection`1.getAllShiftCnt(Int32 ReviewCnt, Int32 TrainCnt) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.getC_K_NStep(System.Int32,System.Int32)">
            <summary>设置 BaseCollection`1.getC_K_NStep(Int32 reviewCnt, Int32 StepCnt) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.getEntropyList(System.Int32)">
            <summary>设置 BaseCollection`1.getEntropyList(Int32 reviewCnt) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.getSubTable(System.Int32,System.Int32)">
            <summary>设置 BaseCollection`1.getSubTable(Int32 cnt, Int32 n) 的 存根</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseCollection`1.isByNo">
            <summary>设置 BaseCollection`1.get_isByNo() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubBaseData">
            <summary>WolfInv.com.BaseObjectsLib.BaseData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseData.InitializeStub">
            <summary>初始化 type StubBaseData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataItemClass">
            <summary>WolfInv.com.BaseObjectsLib.BaseDataItemClass 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataItemClass.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataItemClass.#ctor(System.Data.DataRow)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataItemClass.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataItemClass.InitializeStub">
            <summary>初始化 type StubBaseDataItemClass 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataItemClass.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataItemClass.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataTable">
            <summary>WolfInv.com.BaseObjectsLib.BaseDataTable 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataTable.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataTable.#ctor(System.Data.DataTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataTable.#ctor(WolfInv.com.BaseObjectsLib.MTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataTable.InitializeStub">
            <summary>初始化 type StubBaseDataTable 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataTable.Item(System.Int32)">
            <summary>设置 BaseDataTable.get_Item(Int32 id) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubBaseDataTable.ItemGetInt32">
            <summary>设置 BaseDataTable.get_Item(Int32 id) 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubChanceClass`1">
            <summary>WolfInv.com.BaseObjectsLib.ChanceClass`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubChanceClass`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubChanceClass`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubChanceClass`1.InitializeStub">
            <summary>初始化 type StubChanceClass 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubChanceClass`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubChanceClass`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubChanceClass`1.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubChanceClass`1.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubClassOperateTool">
            <summary>WolfInv.com.BaseObjectsLib.ClassOperateTool 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubClassOperateTool.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubClassOperateTool.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubClassOperateTool.InitializeStub">
            <summary>初始化 type StubClassOperateTool 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubClassOperateTool.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubClassOperateTool.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubCommExpectListProcess`1">
            <summary>WolfInv.com.BaseObjectsLib.CommExpectListProcess`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubCommExpectListProcess`1.#ctor(WolfInv.com.BaseObjectsLib.ExpectList{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubCommExpectListProcess`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubCommExpectListProcess`1.GetNoDispNumsInt32">
            <summary>设置 CommExpectListProcess`1.getNoDispNums(Int32 reviewCnt) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubCommExpectListProcess`1.GetSerialDataInt32Boolean">
            <summary>设置 CommExpectListProcess`1.getSerialData(Int32 reviewCnt, Boolean ByNo) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubCommExpectListProcess`1.InitializeStub">
            <summary>初始化 type StubCommExpectListProcess 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubCommExpectListProcess`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubCommExpectListProcess`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubCommExpectListProcess`1.getNoDispNums(System.Int32)">
            <summary>设置 CommExpectListProcess`1.getNoDispNums(Int32 reviewCnt) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubCommExpectListProcess`1.getSerialData(System.Int32,System.Boolean)">
            <summary>设置 CommExpectListProcess`1.getSerialData(Int32 reviewCnt, Boolean ByNo) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubCommResult">
            <summary>WolfInv.com.BaseObjectsLib.CommResult 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubCommResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubCommResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubCommResult.InitializeStub">
            <summary>初始化 type StubCommResult 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubCommResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubCommResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubCommResult`1">
            <summary>WolfInv.com.BaseObjectsLib.CommResult`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubCommResult`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubCommResult`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubCommResult`1.InitializeStub">
            <summary>初始化 type StubCommResult 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubCommResult`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubCommResult`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubDataFrame`1">
            <summary>WolfInv.com.BaseObjectsLib.DataFrame`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataFrame`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataFrame`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataFrame`1.InitializeStub">
            <summary>初始化 type StubDataFrame 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataFrame`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataFrame`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataFrame`1.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataFrame`1.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubDataListConverter`1">
            <summary>WolfInv.com.BaseObjectsLib.DataListConverter`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataListConverter`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataListConverter`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataListConverter`1.InitializeStub">
            <summary>初始化 type StubDataListConverter 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataListConverter`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataListConverter`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubDataPointBuff">
            <summary>WolfInv.com.BaseObjectsLib.DataPointBuff 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataPointBuff.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataPointBuff.#ctor(WolfInv.com.BaseObjectsLib.DataTypePoint)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataPointBuff.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataPointBuff.InitializeStub">
            <summary>初始化 type StubDataPointBuff 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataPointBuff.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataPointBuff.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx">
            <summary>WolfInv.com.BaseObjectsLib.DataTableEx 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.AttachBackingFieldToSite">
            <summary>附加委托以将 StubDataTableEx.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.BeginInit">
            <summary>设置 DataTable.BeginInit() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.BeginInit01">
            <summary>设置 DataTable.BeginInit() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.Clone">
            <summary>设置 DataTable.Clone() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.Clone01">
            <summary>设置 DataTable.Clone() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.Container">
            <summary>设置 MarshalByValueComponent.get_Container() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.ContainerGet">
            <summary>设置 MarshalByValueComponent.get_Container() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.CreateInstance">
            <summary>设置 DataTable.CreateInstance() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.CreateInstance01">
            <summary>设置 DataTable.CreateInstance() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.DesignMode">
            <summary>设置 MarshalByValueComponent.get_DesignMode() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.DesignModeGet">
            <summary>设置 MarshalByValueComponent.get_DesignMode() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.Dispose(System.Boolean)">
            <summary>设置 MarshalByValueComponent.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.DisposeBoolean">
            <summary>设置 MarshalByValueComponent.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.EndInit">
            <summary>设置 DataTable.EndInit() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.EndInit01">
            <summary>设置 DataTable.EndInit() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 DataTable.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 DataTable.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.GetRowType">
            <summary>设置 DataTable.GetRowType() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.GetRowType01">
            <summary>设置 DataTable.GetRowType() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.GetSchema">
            <summary>设置 DataTable.GetSchema() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.GetSchema01">
            <summary>设置 DataTable.GetSchema() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.GetService(System.Type)">
            <summary>设置 MarshalByValueComponent.GetService(Type service) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.GetServiceType">
            <summary>设置 MarshalByValueComponent.GetService(Type service) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.InitializeStub">
            <summary>初始化 type StubDataTableEx 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
            <summary>设置 DataTable.Load(IDataReader reader, LoadOption loadOption, FillErrorEventHandler errorHandler) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.LoadIDataReaderLoadOptionFillErrorEventHandler">
            <summary>设置 DataTable.Load(IDataReader reader, LoadOption loadOption, FillErrorEventHandler errorHandler) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>设置 DataTable.NewRowFromBuilder(DataRowBuilder builder) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.NewRowFromBuilderDataRowBuilder">
            <summary>设置 DataTable.NewRowFromBuilder(DataRowBuilder builder) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
            <summary>设置 DataTable.OnColumnChanged(DataColumnChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnColumnChangedDataColumnChangeEventArgs">
            <summary>设置 DataTable.OnColumnChanged(DataColumnChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
            <summary>设置 DataTable.OnColumnChanging(DataColumnChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnColumnChangingDataColumnChangeEventArgs">
            <summary>设置 DataTable.OnColumnChanging(DataColumnChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>设置 DataTable.OnPropertyChanging(PropertyChangedEventArgs pcevent) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnPropertyChangingPropertyChangedEventArgs">
            <summary>设置 DataTable.OnPropertyChanging(PropertyChangedEventArgs pcevent) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnRemoveColumn(System.Data.DataColumn)">
            <summary>设置 DataTable.OnRemoveColumn(DataColumn column) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnRemoveColumnDataColumn">
            <summary>设置 DataTable.OnRemoveColumn(DataColumn column) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <summary>设置 DataTable.OnRowChanged(DataRowChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnRowChangedDataRowChangeEventArgs">
            <summary>设置 DataTable.OnRowChanged(DataRowChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnRowChanging(System.Data.DataRowChangeEventArgs)">
            <summary>设置 DataTable.OnRowChanging(DataRowChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnRowChangingDataRowChangeEventArgs">
            <summary>设置 DataTable.OnRowChanging(DataRowChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <summary>设置 DataTable.OnRowDeleted(DataRowChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnRowDeletedDataRowChangeEventArgs">
            <summary>设置 DataTable.OnRowDeleted(DataRowChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
            <summary>设置 DataTable.OnRowDeleting(DataRowChangeEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnRowDeletingDataRowChangeEventArgs">
            <summary>设置 DataTable.OnRowDeleting(DataRowChangeEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnTableCleared(System.Data.DataTableClearEventArgs)">
            <summary>设置 DataTable.OnTableCleared(DataTableClearEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnTableClearedDataTableClearEventArgs">
            <summary>设置 DataTable.OnTableCleared(DataTableClearEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnTableClearing(System.Data.DataTableClearEventArgs)">
            <summary>设置 DataTable.OnTableClearing(DataTableClearEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnTableClearingDataTableClearEventArgs">
            <summary>设置 DataTable.OnTableClearing(DataTableClearEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
            <summary>设置 DataTable.OnTableNewRow(DataTableNewRowEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.OnTableNewRowDataTableNewRowEventArgs">
            <summary>设置 DataTable.OnTableNewRow(DataTableNewRowEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.ReadXmlSerializable(System.Xml.XmlReader)">
            <summary>设置 DataTable.ReadXmlSerializable(XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.ReadXmlSerializableXmlReader">
            <summary>设置 DataTable.ReadXmlSerializable(XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.Reset">
            <summary>设置 DataTable.Reset() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.Reset01">
            <summary>设置 DataTable.Reset() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.Site">
            <summary>设置 DataTable.get_Site() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.SiteGet">
            <summary>设置 DataTable.get_Site() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.SiteSetISite">
            <summary>设置 DataTable.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.ToString">
            <summary>设置 DataTable.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTableEx.ToString01">
            <summary>设置 DataTable.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubDataTypePoint">
            <summary>WolfInv.com.BaseObjectsLib.DataTypePoint 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTypePoint.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataTypePoint.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTypePoint.InitializeStub">
            <summary>初始化 type StubDataTypePoint 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataTypePoint.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDataTypePoint.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDataTypePoint.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDataTypePoint.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubDbChanceList`1">
            <summary>WolfInv.com.BaseObjectsLib.DbChanceList`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDbChanceList`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDbChanceList`1.#ctor(System.Data.DataTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDbChanceList`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDbChanceList`1.InitializeStub">
            <summary>初始化 type StubDbChanceList 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDbChanceList`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDbChanceList`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDbChanceList`1.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDbChanceList`1.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubDetailStringClass">
            <summary>WolfInv.com.BaseObjectsLib.DetailStringClass 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDetailStringClass.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDetailStringClass.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDetailStringClass.InitializeStub">
            <summary>初始化 type StubDetailStringClass 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDetailStringClass.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDetailStringClass.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDetailStringClass.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDetailStringClass.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubDisplayAsTableClass">
            <summary>WolfInv.com.BaseObjectsLib.DisplayAsTableClass 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDisplayAsTableClass.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDisplayAsTableClass.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDisplayAsTableClass.InitializeStub">
            <summary>初始化 type StubDisplayAsTableClass 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDisplayAsTableClass.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubDisplayAsTableClass.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubDisplayAsTableClass.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubDisplayAsTableClass.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubExchangeMongoData">
            <summary>WolfInv.com.BaseObjectsLib.ExchangeMongoData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExchangeMongoData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubExchangeMongoData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExchangeMongoData.InitializeStub">
            <summary>初始化 type StubExchangeMongoData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubExchangeMongoData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubExchangeMongoData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExchangeMongoData.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubExchangeMongoData.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubExpectData`1">
            <summary>WolfInv.com.BaseObjectsLib.ExpectData`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExpectData`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExpectData`1.#ctor(`0)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubExpectData`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExpectData`1.InitializeStub">
            <summary>初始化 type StubExpectData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubExpectData`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubExpectData`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExpectData`1.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubExpectData`1.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubExpectDataEEE">
            <summary>WolfInv.com.BaseObjectsLib.ExpectDataEEE 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExpectDataEEE.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubExpectDataEEE.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExpectDataEEE.InitializeStub">
            <summary>初始化 type StubExpectDataEEE 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubExpectDataEEE.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubExpectDataEEE.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExpectDataEEE.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubExpectDataEEE.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubExpectList`1">
            <summary>WolfInv.com.BaseObjectsLib.ExpectList`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExpectList`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExpectList`1.#ctor(System.Data.DataTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExpectList`1.#ctor(System.Collections.Generic.Dictionary{System.String,WolfInv.com.BaseObjectsLib.MongoReturnDataList{`0}},System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExpectList`1.#ctor(System.String,WolfInv.com.BaseObjectsLib.Cycle,System.Data.DataSet)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubExpectList`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubExpectList`1.InitializeStub">
            <summary>初始化 type StubExpectList 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubExpectList`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubExpectList`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubGlobalClass">
            <summary>WolfInv.com.BaseObjectsLib.GlobalClass 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubGlobalClass.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubGlobalClass.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubGlobalClass.InitializeStub">
            <summary>初始化 type StubGlobalClass 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubGlobalClass.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubGlobalClass.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubGlobalClass.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubGlobalClass.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubGroupBuilder">
            <summary>WolfInv.com.BaseObjectsLib.GroupBuilder 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubGroupBuilder.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubGroupBuilder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubGroupBuilder.InitializeStub">
            <summary>初始化 type StubGroupBuilder 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubGroupBuilder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubGroupBuilder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubHistoryData">
            <summary>WolfInv.com.BaseObjectsLib.HistoryData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubHistoryData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubHistoryData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubHistoryData.InitializeStub">
            <summary>初始化 type StubHistoryData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubHistoryData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubHistoryData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection">
            <summary>WolfInv.com.BaseObjectsLib.IBaseCollection 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.#ctor">
            <summary>初始化 type StubIBaseCollection 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.WolfInv#com#BaseObjectsLib#IBaseCollection#CarDistributionTable">
            <summary>设置 IBaseCollection.get_CarDistributionTable() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.CarDistributionTableGet">
            <summary>设置 IBaseCollection.get_CarDistributionTable() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.WolfInv#com#BaseObjectsLib#IBaseCollection#CarTable">
            <summary>设置 IBaseCollection.get_CarTable() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.CarTableGet">
            <summary>设置 IBaseCollection.get_CarTable() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.FindLastDataExistCountInt32Int32StringString">
            <summary>设置 IBaseCollection.FindLastDataExistCount(Int32 StartPos, Int32 lng, String StrKey, String val) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.FindLastDataExistCountInt32StringString">
            <summary>设置 IBaseCollection.FindLastDataExistCount(Int32 lng, String StrPos, String key) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.FindSpecColumnValueInt32String">
            <summary>设置 IBaseCollection.FindSpecColumnValue(Int32 id, String strKey) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.GetAllDistrStdDevInt32Int32">
            <summary>设置 IBaseCollection.getAllDistrStdDev(Int32 reviewCnt, Int32 stepLong) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.GetAllShiftCntInt32Int32">
            <summary>设置 IBaseCollection.getAllShiftCnt(Int32 ReviewCnt, Int32 TrainCnt) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.GetC_K_NStepInt32Int32">
            <summary>设置 IBaseCollection.getC_K_NStep(Int32 reviewCnt, Int32 StepCnt) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.GetEntropyListInt32">
            <summary>设置 IBaseCollection.getEntropyList(Int32 reviewCnt) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.GetSubTableInt32Int32">
            <summary>设置 IBaseCollection.getSubTable(Int32 FromId, Int32 lng) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.WolfInv#com#BaseObjectsLib#IBaseCollection#SerialDistributionTable">
            <summary>设置 IBaseCollection.get_SerialDistributionTable() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.SerialDistributionTableGet">
            <summary>设置 IBaseCollection.get_SerialDistributionTable() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.WolfInv#com#BaseObjectsLib#IBaseCollection#Table">
            <summary>设置 IBaseCollection.get_Table() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.TableGet">
            <summary>设置 IBaseCollection.get_Table() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.WolfInv#com#BaseObjectsLib#IBaseCollection#FindLastDataExistCount(System.Int32,System.String,System.String)">
            <summary>设置 IBaseCollection.FindLastDataExistCount(Int32 lng, String StrPos, String key) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.WolfInv#com#BaseObjectsLib#IBaseCollection#FindLastDataExistCount(System.Int32,System.Int32,System.String,System.String)">
            <summary>设置 IBaseCollection.FindLastDataExistCount(Int32 StartPos, Int32 lng, String StrKey, String val) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.WolfInv#com#BaseObjectsLib#IBaseCollection#FindSpecColumnValue(System.Int32,System.String)">
            <summary>设置 IBaseCollection.FindSpecColumnValue(Int32 id, String strKey) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.WolfInv#com#BaseObjectsLib#IBaseCollection#getAllDistrStdDev(System.Int32,System.Int32)">
            <summary>设置 IBaseCollection.getAllDistrStdDev(Int32 reviewCnt, Int32 stepLong) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.WolfInv#com#BaseObjectsLib#IBaseCollection#getAllShiftCnt(System.Int32,System.Int32)">
            <summary>设置 IBaseCollection.getAllShiftCnt(Int32 ReviewCnt, Int32 TrainCnt) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.WolfInv#com#BaseObjectsLib#IBaseCollection#getC_K_NStep(System.Int32,System.Int32)">
            <summary>设置 IBaseCollection.getC_K_NStep(Int32 reviewCnt, Int32 StepCnt) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.WolfInv#com#BaseObjectsLib#IBaseCollection#getEntropyList(System.Int32)">
            <summary>设置 IBaseCollection.getEntropyList(Int32 reviewCnt) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIBaseCollection.WolfInv#com#BaseObjectsLib#IBaseCollection#getSubTable(System.Int32,System.Int32)">
            <summary>设置 IBaseCollection.getSubTable(Int32 FromId, Int32 lng) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubICodeData">
            <summary>WolfInv.com.BaseObjectsLib.ICodeData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubICodeData.#ctor">
            <summary>初始化 type StubICodeData 的新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubICodeData.AttachBackingFieldTocode">
            <summary>附加委托以将 StubICodeData.code 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubICodeData.CodeGet">
            <summary>设置 ICodeData.get_code() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubICodeData.CodeSetString">
            <summary>设置 ICodeData.set_code(String value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubICodeData.WolfInv#com#BaseObjectsLib#ICodeData#code">
            <summary>设置 ICodeData.get_code() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubICommExpectListProcess`1">
            <summary>WolfInv.com.BaseObjectsLib.ICommExpectListProcess`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubICommExpectListProcess`1.#ctor">
            <summary>初始化 type StubICommExpectListProcess 的新实例</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubICommExpectListProcess`1.GetNoDispNumsInt32">
            <summary>设置 ICommExpectListProcess`1.getNoDispNums(Int32 reviewCnt) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubICommExpectListProcess`1.GetSerialDataInt32Boolean">
            <summary>设置 ICommExpectListProcess`1.getSerialData(Int32 reviewCnt, Boolean ByNo) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubICommExpectListProcess`1.WolfInv#com#BaseObjectsLib#ICommExpectListProcess{T}#getNoDispNums(System.Int32)">
            <summary>设置 ICommExpectListProcess`1.getNoDispNums(Int32 reviewCnt) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubICommExpectListProcess`1.WolfInv#com#BaseObjectsLib#ICommExpectListProcess{T}#getSerialData(System.Int32,System.Boolean)">
            <summary>设置 ICommExpectListProcess`1.getSerialData(Int32 reviewCnt, Boolean ByNo) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubIDateData">
            <summary>WolfInv.com.BaseObjectsLib.IDateData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIDateData.#ctor">
            <summary>初始化 type StubIDateData 的新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIDateData.AttachBackingFieldTodate">
            <summary>附加委托以将 StubIDateData.date 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIDateData.DateGet">
            <summary>设置 IDateData.get_date() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIDateData.DateSetString">
            <summary>设置 IDateData.set_date(String value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIDateData.WolfInv#com#BaseObjectsLib#IDateData#date">
            <summary>设置 IDateData.get_date() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubIDateStampData">
            <summary>WolfInv.com.BaseObjectsLib.IDateStampData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIDateStampData.#ctor">
            <summary>初始化 type StubIDateStampData 的新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIDateStampData.AttachBackingFieldTodate_stamp">
            <summary>附加委托以将 StubIDateStampData.date_stamp 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIDateStampData.WolfInv#com#BaseObjectsLib#IDateStampData#date_stamp">
            <summary>设置 IDateStampData.get_date_stamp() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIDateStampData.stampGetDate">
            <summary>设置 IDateStampData.get_date_stamp() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIDateStampData.stampSetDateDouble">
            <summary>设置 IDateStampData.set_date_stamp(Double value) 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData">
            <summary>WolfInv.com.BaseObjectsLib.IExchangeData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.#ctor">
            <summary>初始化 type StubIExchangeData 的新实例</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.AmountGet">
            <summary>设置 iVolAmount.get_amount() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.AmountSetDouble">
            <summary>设置 iVolAmount.set_amount(Double value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.AttachBackingFieldToamount">
            <summary>附加委托以将 StubIExchangeData.amount 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.AttachBackingFieldToclose">
            <summary>附加委托以将 StubIExchangeData.close 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.AttachBackingFieldTocode">
            <summary>附加委托以将 StubIExchangeData.code 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.AttachBackingFieldTodate">
            <summary>附加委托以将 StubIExchangeData.date 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.AttachBackingFieldTohigh">
            <summary>附加委托以将 StubIExchangeData.high 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.AttachBackingFieldTolow">
            <summary>附加委托以将 StubIExchangeData.low 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.AttachBackingFieldToopen">
            <summary>附加委托以将 StubIExchangeData.open 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.AttachBackingFieldTovol">
            <summary>附加委托以将 StubIExchangeData.vol 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.CloseGet">
            <summary>设置 IOHLCData.get_close() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.CloseSetDouble">
            <summary>设置 IOHLCData.set_close(Double value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.CodeGet">
            <summary>设置 ICodeData.get_code() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.CodeSetString">
            <summary>设置 ICodeData.set_code(String value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.DateGet">
            <summary>设置 IDateData.get_date() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.DateSetString">
            <summary>设置 IDateData.set_date(String value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.HighGet">
            <summary>设置 IOHLCData.get_high() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.HighSetDouble">
            <summary>设置 IOHLCData.set_high(Double value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.LowGet">
            <summary>设置 IOHLCData.get_low() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.LowSetDouble">
            <summary>设置 IOHLCData.set_low(Double value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.OpenGet">
            <summary>设置 IOHLCData.get_open() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.OpenSetDouble">
            <summary>设置 IOHLCData.set_open(Double value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.VolGet">
            <summary>设置 iVolAmount.get_vol() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.VolSetDouble">
            <summary>设置 iVolAmount.set_vol(Double value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.WolfInv#com#BaseObjectsLib#iVolAmount#amount">
            <summary>设置 iVolAmount.get_amount() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.WolfInv#com#BaseObjectsLib#IOHLCData#close">
            <summary>设置 IOHLCData.get_close() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.WolfInv#com#BaseObjectsLib#ICodeData#code">
            <summary>设置 ICodeData.get_code() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.WolfInv#com#BaseObjectsLib#IDateData#date">
            <summary>设置 IDateData.get_date() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.WolfInv#com#BaseObjectsLib#IOHLCData#high">
            <summary>设置 IOHLCData.get_high() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.WolfInv#com#BaseObjectsLib#IOHLCData#low">
            <summary>设置 IOHLCData.get_low() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.WolfInv#com#BaseObjectsLib#IOHLCData#open">
            <summary>设置 IOHLCData.get_open() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExchangeData.WolfInv#com#BaseObjectsLib#iVolAmount#vol">
            <summary>设置 iVolAmount.get_vol() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1">
            <summary>WolfInv.com.BaseObjectsLib.IExpectList`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.#ctor">
            <summary>初始化 type StubIExpectList 的新实例</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.AddExpectDataOfT0">
            <summary>设置 IExpectList`1.Add(ExpectData`1&lt;!0&gt; item) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.Clear">
            <summary>设置 IExpectList`1.Clear() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.ContainsExpectDataOfT0">
            <summary>设置 IExpectList`1.Contains(ExpectData`1&lt;!0&gt; item) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.CopyToExpectDataOfT0ArrayInt32">
            <summary>设置 IExpectList`1.CopyTo(ExpectData`1&lt;!0&gt;[] array, Int32 arrayIndex) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#Count">
            <summary>设置 IExpectList`1.get_Count() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.CountGet">
            <summary>设置 IExpectList`1.get_Count() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#FirstData">
            <summary>设置 IExpectList`1.get_FirstData() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.FirstDataGet">
            <summary>设置 IExpectList`1.get_FirstData() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.FirstDatasInt32">
            <summary>设置 IExpectList`1.FirstDatas(Int32 RecLng) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.GetEnumerator">
            <summary>设置 IExpectList`1.GetEnumerator() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.GetSubArrayInt32Int32">
            <summary>设置 IExpectList`1.getSubArray(Int32 FromIndex, Int32 len) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.IndexOfExpectDataOfT0">
            <summary>设置 IExpectList`1.IndexOf(ExpectData`1&lt;!0&gt; item) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.IndexOfString">
            <summary>设置 IExpectList`1.IndexOf(String ExpectNo) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.InsertInt32ExpectDataOfT0">
            <summary>设置 IExpectList`1.Insert(Int32 index, ExpectData`1&lt;!0&gt; item) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#IsReadOnly">
            <summary>设置 IExpectList`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.IsReadOnlyGet">
            <summary>设置 IExpectList`1.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#Item(System.Int32)">
            <summary>设置 IExpectList`1.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.ItemGetInt32">
            <summary>设置 IExpectList`1.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.ItemSetInt32ExpectDataOfT0">
            <summary>设置 IExpectList`1.set_Item(Int32 index, ExpectData`1&lt;!0&gt; value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#LastData">
            <summary>设置 IExpectList`1.get_LastData() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.LastDataGet">
            <summary>设置 IExpectList`1.get_LastData() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.LastDatasInt32">
            <summary>设置 IExpectList`1.LastDatas(Int32 RecLng) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.RemoveAtInt32">
            <summary>设置 IExpectList`1.RemoveAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.RemoveExpectDataOfT0">
            <summary>设置 IExpectList`1.Remove(ExpectData`1&lt;!0&gt; item) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#Table">
            <summary>设置 IExpectList`1.get_Table() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.TableGet">
            <summary>设置 IExpectList`1.get_Table() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#Add(WolfInv.com.BaseObjectsLib.ExpectData{`0})">
            <summary>设置 IExpectList`1.Add(ExpectData`1&lt;!0&gt; item) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#Clear">
            <summary>设置 IExpectList`1.Clear() 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#Contains(WolfInv.com.BaseObjectsLib.ExpectData{`0})">
            <summary>设置 IExpectList`1.Contains(ExpectData`1&lt;!0&gt; item) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#CopyTo(WolfInv.com.BaseObjectsLib.ExpectData{`0}[],System.Int32)">
            <summary>设置 IExpectList`1.CopyTo(ExpectData`1&lt;!0&gt;[] array, Int32 arrayIndex) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#FirstDatas(System.Int32)">
            <summary>设置 IExpectList`1.FirstDatas(Int32 RecLng) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#GetEnumerator">
            <summary>设置 IExpectList`1.GetEnumerator() 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#IndexOf(WolfInv.com.BaseObjectsLib.ExpectData{`0})">
            <summary>设置 IExpectList`1.IndexOf(ExpectData`1&lt;!0&gt; item) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#IndexOf(System.String)">
            <summary>设置 IExpectList`1.IndexOf(String ExpectNo) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#Insert(System.Int32,WolfInv.com.BaseObjectsLib.ExpectData{`0})">
            <summary>设置 IExpectList`1.Insert(Int32 index, ExpectData`1&lt;!0&gt; item) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#LastDatas(System.Int32)">
            <summary>设置 IExpectList`1.LastDatas(Int32 RecLng) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#Remove(WolfInv.com.BaseObjectsLib.ExpectData{`0})">
            <summary>设置 IExpectList`1.Remove(ExpectData`1&lt;!0&gt; item) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#RemoveAt(System.Int32)">
            <summary>设置 IExpectList`1.RemoveAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIExpectList`1.WolfInv#com#BaseObjectsLib#IExpectList{T}#getSubArray(System.Int32,System.Int32)">
            <summary>设置 IExpectList`1.getSubArray(Int32 FromIndex, Int32 len) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubIIndexData">
            <summary>WolfInv.com.BaseObjectsLib.IIndexData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIIndexData.#ctor">
            <summary>初始化 type StubIIndexData 的新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIIndexData.AttachBackingFieldTodown_count">
            <summary>附加委托以将 StubIIndexData.down_count 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIIndexData.AttachBackingFieldToup_count">
            <summary>附加委托以将 StubIIndexData.up_count 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIIndexData.countGetDown">
            <summary>设置 IIndexData.get_down_count() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIIndexData.countGetUp">
            <summary>设置 IIndexData.get_up_count() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIIndexData.countSetDownInt32">
            <summary>设置 IIndexData.set_down_count(Int32 value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIIndexData.countSetUpInt32">
            <summary>设置 IIndexData.set_up_count(Int32 value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIIndexData.WolfInv#com#BaseObjectsLib#IIndexData#down_count">
            <summary>设置 IIndexData.get_down_count() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIIndexData.WolfInv#com#BaseObjectsLib#IIndexData#up_count">
            <summary>设置 IIndexData.get_up_count() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubIMatchFilter">
            <summary>WolfInv.com.BaseObjectsLib.IMatchFilter 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIMatchFilter.#ctor">
            <summary>初始化 type StubIMatchFilter 的新实例</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIMatchFilter.MatchBsonElement">
            <summary>设置 IMatchFilter.Match(BsonElement filter) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIMatchFilter.WolfInv#com#BaseObjectsLib#IMatchFilter#Match(MongoDB.Bson.BsonElement)">
            <summary>设置 IMatchFilter.Match(BsonElement filter) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData">
            <summary>WolfInv.com.BaseObjectsLib.IOHLCData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.#ctor">
            <summary>初始化 type StubIOHLCData 的新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.AttachBackingFieldToclose">
            <summary>附加委托以将 StubIOHLCData.close 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.AttachBackingFieldTohigh">
            <summary>附加委托以将 StubIOHLCData.high 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.AttachBackingFieldTolow">
            <summary>附加委托以将 StubIOHLCData.low 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.AttachBackingFieldToopen">
            <summary>附加委托以将 StubIOHLCData.open 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.CloseGet">
            <summary>设置 IOHLCData.get_close() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.CloseSetDouble">
            <summary>设置 IOHLCData.set_close(Double value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.HighGet">
            <summary>设置 IOHLCData.get_high() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.HighSetDouble">
            <summary>设置 IOHLCData.set_high(Double value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.LowGet">
            <summary>设置 IOHLCData.get_low() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.LowSetDouble">
            <summary>设置 IOHLCData.set_low(Double value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.OpenGet">
            <summary>设置 IOHLCData.get_open() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.OpenSetDouble">
            <summary>设置 IOHLCData.set_open(Double value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.WolfInv#com#BaseObjectsLib#IOHLCData#close">
            <summary>设置 IOHLCData.get_close() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.WolfInv#com#BaseObjectsLib#IOHLCData#high">
            <summary>设置 IOHLCData.get_high() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.WolfInv#com#BaseObjectsLib#IOHLCData#low">
            <summary>设置 IOHLCData.get_low() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIOHLCData.WolfInv#com#BaseObjectsLib#IOHLCData#open">
            <summary>设置 IOHLCData.get_open() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubIObjectId">
            <summary>WolfInv.com.BaseObjectsLib.IObjectId 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIObjectId.#ctor">
            <summary>初始化 type StubIObjectId 的新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubIObjectId.AttachBackingFieldTo_id">
            <summary>附加委托以将 StubIObjectId._id 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubIObjectId.WolfInv#com#BaseObjectsLib#IObjectId#_id">
            <summary>设置 IObjectId.get__id() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIObjectId._idGet">
            <summary>设置 IObjectId.get__id() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubIObjectId._idSetBsonObjectId">
            <summary>设置 IObjectId.set__id(BsonObjectId value) 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubISelectable">
            <summary>WolfInv.com.BaseObjectsLib.ISelectable 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubISelectable.#ctor">
            <summary>初始化 type StubISelectable 的新实例</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubISelectable.SelectString">
            <summary>设置 ISelectable.Select(String sql) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubISelectable.WolfInv#com#BaseObjectsLib#ISelectable#Select(System.String)">
            <summary>设置 ISelectable.Select(String sql) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubISpecAmount">
            <summary>WolfInv.com.BaseObjectsLib.ISpecAmount 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubISpecAmount.#ctor">
            <summary>初始化 type StubISpecAmount 的新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubISpecAmount.GetChipAmountOf1DoubleChanceClassOfM0AmoutSerials``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Double,WolfInv.com.BaseObjectsLib.ChanceClass{``0},WolfInv.com.BaseObjectsLib.AmoutSerials,System.Int64})">
            <summary>设置 getChipAmount(Double RestCash, ChanceClass`1&lt;!!0&gt; cc, AmoutSerials amts) 的存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubISpecAmount.WolfInv#com#BaseObjectsLib#ISpecAmount#getChipAmount``1(System.Double,WolfInv.com.BaseObjectsLib.ChanceClass{``0},WolfInv.com.BaseObjectsLib.AmoutSerials)">
            <summary>设置 ISpecAmount.getChipAmount(Double RestCash, ChanceClass`1&lt;!!0&gt; cc, AmoutSerials amts) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubITraceChance">
            <summary>WolfInv.com.BaseObjectsLib.ITraceChance 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubITraceChance.#ctor">
            <summary>初始化 type StubITraceChance 的新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubITraceChance.AttachBackingFieldToIsTracing">
            <summary>附加委托以将 StubITraceChance.IsTracing 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubITraceChance.CheckNeedEndTheChanceOf1ChanceClassOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.ChanceClass{``0},System.Boolean,System.Boolean})">
            <summary>设置 CheckNeedEndTheChance(ChanceClass`1&lt;!!0&gt; cc, Boolean LastExpectMatched) 的存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubITraceChance.GetChipAmountOf1DoubleChanceClassOfM0AmoutSerials``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Double,WolfInv.com.BaseObjectsLib.ChanceClass{``0},WolfInv.com.BaseObjectsLib.AmoutSerials,System.Int64})">
            <summary>设置 getChipAmount(Double RestCash, ChanceClass`1&lt;!!0&gt; cc, AmoutSerials amts) 的存根</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubITraceChance.WolfInv#com#BaseObjectsLib#ITraceChance#IsTracing">
            <summary>设置 ITraceChance.get_IsTracing() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubITraceChance.IsTracingGet">
            <summary>设置 ITraceChance.get_IsTracing() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubITraceChance.IsTracingSetBoolean">
            <summary>设置 ITraceChance.set_IsTracing(Boolean value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubITraceChance.WolfInv#com#BaseObjectsLib#ISpecAmount#getChipAmount``1(System.Double,WolfInv.com.BaseObjectsLib.ChanceClass{``0},WolfInv.com.BaseObjectsLib.AmoutSerials)">
            <summary>设置 ISpecAmount.getChipAmount(Double RestCash, ChanceClass`1&lt;!!0&gt; cc, AmoutSerials amts) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubITraceChance.WolfInv#com#BaseObjectsLib#ITraceChance#CheckNeedEndTheChance``1(WolfInv.com.BaseObjectsLib.ChanceClass{``0},System.Boolean)">
            <summary>设置 ITraceChance.CheckNeedEndTheChance(ChanceClass`1&lt;!!0&gt; cc, Boolean LastExpectMatched) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubInitData">
            <summary>WolfInv.com.BaseObjectsLib.InitData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubInitData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubInitData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubInitData.InitializeStub">
            <summary>初始化 type StubInitData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubInitData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubInitData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubInnerClass`1">
            <summary>WolfInv.com.BaseObjectsLib.InnerClass`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubInnerClass`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubInnerClass`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubInnerClass`1.InitializeStub">
            <summary>初始化 type StubInnerClass 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubInnerClass`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubInnerClass`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubInnerClass`1.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubInnerClass`1.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubLottyData">
            <summary>WolfInv.com.BaseObjectsLib.LottyData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubLottyData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubLottyData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubLottyData.InitializeStub">
            <summary>初始化 type StubLottyData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubLottyData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubLottyData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubLottyData.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubLottyData.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubMTable">
            <summary>WolfInv.com.BaseObjectsLib.MTable 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMTable.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMTable.#ctor(System.Data.DataTable)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMTable.InitializeStub">
            <summary>初始化 type StubMTable 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMTable.Item(System.Int32)">
            <summary>设置 MTable.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMTable.ItemGetInt32">
            <summary>设置 MTable.get_Item(Int32 index) 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubMatrix">
            <summary>WolfInv.com.BaseObjectsLib.Matrix 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrix.#ctor(System.Double[0:,0:])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrix.#ctor(System.Double[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrix.#ctor(System.Collections.Generic.List{System.Double[]})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrix.#ctor(System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrix.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrix.Equals(System.Object)">
            <summary>设置 Matrix.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMatrix.EqualsObject">
            <summary>设置 Matrix.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrix.InitializeStub">
            <summary>初始化 type StubMatrix 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrix.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrix.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException">
            <summary>WolfInv.com.BaseObjectsLib.MatrixException 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubMatrixException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubMatrixException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.InitializeStub">
            <summary>初始化 type StubMatrixException 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixTableCell`1">
            <summary>WolfInv.com.BaseObjectsLib.MatrixTableCell`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixTableCell`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixTableCell`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixTableCell`1.InitializeStub">
            <summary>初始化 type StubMatrixTableCell 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixTableCell`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixTableCell`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixTableRows`1">
            <summary>WolfInv.com.BaseObjectsLib.MatrixTableRows`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixTableRows`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixTableRows`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixTableRows`1.InitializeStub">
            <summary>初始化 type StubMatrixTableRows 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixTableRows`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMatrixTableRows`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubMongoData">
            <summary>WolfInv.com.BaseObjectsLib.MongoData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMongoData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMongoData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMongoData.InitializeStub">
            <summary>初始化 type StubMongoData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMongoData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMongoData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMongoData.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMongoData.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataDictionary`1">
            <summary>WolfInv.com.BaseObjectsLib.MongoDataDictionary`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataDictionary`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataDictionary`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataDictionary`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataDictionary`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataDictionary`1.InitializeStub">
            <summary>初始化 type StubMongoDataDictionary 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataDictionary`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataDictionary`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataDictionary`1.OnDeserialization(System.Object)">
            <summary>设置 Dictionary`2.OnDeserialization(Object sender) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataDictionary`1.OnDeserializationObject">
            <summary>设置 Dictionary`2.OnDeserialization(Object sender) 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataList">
            <summary>WolfInv.com.BaseObjectsLib.MongoDataList 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataList.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataList.InitializeStub">
            <summary>初始化 type StubMongoDataList 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMongoDataList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubMongoReturnDataList`1">
            <summary>WolfInv.com.BaseObjectsLib.MongoReturnDataList`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMongoReturnDataList`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMongoReturnDataList`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMongoReturnDataList`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubMongoReturnDataList`1.InitializeStub">
            <summary>初始化 type StubMongoReturnDataList 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMongoReturnDataList`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubMongoReturnDataList`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubNolimitTraceChance`1">
            <summary>WolfInv.com.BaseObjectsLib.NolimitTraceChance`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubNolimitTraceChance`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubNolimitTraceChance`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubNolimitTraceChance`1.CheckNeedEndTheChance``1(WolfInv.com.BaseObjectsLib.ChanceClass{``0},System.Boolean)">
            <summary>设置 NolimitTraceChance`1.CheckNeedEndTheChance(ChanceClass`1&lt;!!0&gt; cc, Boolean LastExpectMatched) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubNolimitTraceChance`1.CheckNeedEndTheChanceOf1ChanceClassOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.ChanceClass{``0},System.Boolean,System.Boolean})">
            <summary>设置 CheckNeedEndTheChance(ChanceClass`1&lt;!!0&gt; cc, Boolean LastExpectMatched) 的存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubNolimitTraceChance`1.GetChipAmountOf1DoubleChanceClassOfM0AmoutSerials``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Double,WolfInv.com.BaseObjectsLib.ChanceClass{``0},WolfInv.com.BaseObjectsLib.AmoutSerials,System.Int64})">
            <summary>设置 getChipAmount(Double RestCash, ChanceClass`1&lt;!!0&gt; cc, AmoutSerials amts) 的存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubNolimitTraceChance`1.InitializeStub">
            <summary>初始化 type StubNolimitTraceChance 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubNolimitTraceChance`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubNolimitTraceChance`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubNolimitTraceChance`1.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubNolimitTraceChance`1.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubNolimitTraceChance`1.getChipAmount``1(System.Double,WolfInv.com.BaseObjectsLib.ChanceClass{``0},WolfInv.com.BaseObjectsLib.AmoutSerials)">
            <summary>设置 NolimitTraceChance`1.getChipAmount(Double RestCash, ChanceClass`1&lt;!!0&gt; cc, AmoutSerials amts) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubOnceChance`1">
            <summary>WolfInv.com.BaseObjectsLib.OnceChance`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubOnceChance`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubOnceChance`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubOnceChance`1.InitializeStub">
            <summary>初始化 type StubOnceChance 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubOnceChance`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubOnceChance`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubOnceChance`1.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubOnceChance`1.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubOneCycleData">
            <summary>WolfInv.com.BaseObjectsLib.OneCycleData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubOneCycleData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubOneCycleData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubOneCycleData.InitializeStub">
            <summary>初始化 type StubOneCycleData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubOneCycleData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubOneCycleData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubOneCycleData.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubOneCycleData.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubPrintClass">
            <summary>WolfInv.com.BaseObjectsLib.PrintClass 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubPrintClass.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubPrintClass.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubPrintClass.InitializeStub">
            <summary>初始化 type StubPrintClass 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubPrintClass.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubPrintClass.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubRecordObject">
            <summary>WolfInv.com.BaseObjectsLib.RecordObject 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubRecordObject.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubRecordObject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubRecordObject.InitializeStub">
            <summary>初始化 type StubRecordObject 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubRecordObject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubRecordObject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubSecBuffData">
            <summary>WolfInv.com.BaseObjectsLib.SecBuffData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSecBuffData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSecBuffData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSecBuffData.InitializeStub">
            <summary>初始化 type StubSecBuffData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSecBuffData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSecBuffData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubSecurityInfoClass">
            <summary>WolfInv.com.BaseObjectsLib.SecurityInfoClass 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSecurityInfoClass.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSecurityInfoClass.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSecurityInfoClass.InitializeStub">
            <summary>初始化 type StubSecurityInfoClass 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSecurityInfoClass.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSecurityInfoClass.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1">
            <summary>WolfInv.com.BaseObjectsLib.SerialObjectEdit`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>设置 SerialObjectEdit`1.EditValue(ITypeDescriptorContext context, IServiceProvider provider, Object value) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>设置 SerialObjectEdit`1.EditValue(ITypeDescriptorContext context, IServiceProvider provider, Object value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 SerialObjectEdit`1.GetEditStyle(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.GetEditStyleITypeDescriptorContext">
            <summary>设置 SerialObjectEdit`1.GetEditStyle(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>设置 SerialObjectEdit`1.GetPaintValueSupported(ITypeDescriptorContext context) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.GetPaintValueSupportedITypeDescriptorContext">
            <summary>设置 SerialObjectEdit`1.GetPaintValueSupported(ITypeDescriptorContext context) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.InitializeStub">
            <summary>初始化 type StubSerialObjectEdit 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.IsDropDownResizable">
            <summary>设置 UITypeEditor.get_IsDropDownResizable() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.IsDropDownResizableGet">
            <summary>设置 UITypeEditor.get_IsDropDownResizable() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>设置 UITypeEditor.PaintValue(PaintValueEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialObjectEdit`1.PaintValuePaintValueEventArgs">
            <summary>设置 UITypeEditor.PaintValue(PaintValueEventArgs e) 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1">
            <summary>WolfInv.com.BaseObjectsLib.SerialableObjectEditor`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AdjustFormScrollbars(System.Boolean)">
            <summary>设置 Form.AdjustFormScrollbars(Boolean displayScrollbars) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AdjustFormScrollbarsBoolean">
            <summary>设置 Form.AdjustFormScrollbars(Boolean displayScrollbars) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AllowDrop">
            <summary>设置 Control.get_AllowDrop() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AllowDropGet">
            <summary>设置 Control.get_AllowDrop() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AllowDropSetBoolean">
            <summary>设置 Control.set_AllowDrop(Boolean value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.Anchor">
            <summary>设置 Control.get_Anchor() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AnchorGet">
            <summary>设置 Control.get_Anchor() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AnchorSetAnchorStyles">
            <summary>设置 Control.set_Anchor(AnchorStyles value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToAllowDrop">
            <summary>附加委托以将 StubSerialableObjectEditor.AllowDrop 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToAnchor">
            <summary>附加委托以将 StubSerialableObjectEditor.Anchor 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToAutoScaleBaseSize">
            <summary>附加委托以将 StubSerialableObjectEditor.AutoScaleBaseSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToAutoScroll">
            <summary>附加委托以将 StubSerialableObjectEditor.AutoScroll 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToAutoScrollOffset">
            <summary>附加委托以将 StubSerialableObjectEditor.AutoScrollOffset 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToAutoSize">
            <summary>附加委托以将 StubSerialableObjectEditor.AutoSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToAutoValidate">
            <summary>附加委托以将 StubSerialableObjectEditor.AutoValidate 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToBackColor">
            <summary>附加委托以将 StubSerialableObjectEditor.BackColor 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToBackgroundImage">
            <summary>附加委托以将 StubSerialableObjectEditor.BackgroundImage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToBackgroundImageLayout">
            <summary>附加委托以将 StubSerialableObjectEditor.BackgroundImageLayout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToBindingContext">
            <summary>附加委托以将 StubSerialableObjectEditor.BindingContext 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToContextMenu">
            <summary>附加委托以将 StubSerialableObjectEditor.ContextMenu 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToContextMenuStrip">
            <summary>附加委托以将 StubSerialableObjectEditor.ContextMenuStrip 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToCursor">
            <summary>附加委托以将 StubSerialableObjectEditor.Cursor 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToDock">
            <summary>附加委托以将 StubSerialableObjectEditor.Dock 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToDoubleBuffered">
            <summary>附加委托以将 StubSerialableObjectEditor.DoubleBuffered 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToFont">
            <summary>附加委托以将 StubSerialableObjectEditor.Font 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToForeColor">
            <summary>附加委托以将 StubSerialableObjectEditor.ForeColor 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToImeModeBase">
            <summary>附加委托以将 StubSerialableObjectEditor.ImeModeBase 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToMaximumSize">
            <summary>附加委托以将 StubSerialableObjectEditor.MaximumSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToMinimumSize">
            <summary>附加委托以将 StubSerialableObjectEditor.MinimumSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToRightToLeft">
            <summary>附加委托以将 StubSerialableObjectEditor.RightToLeft 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToRightToLeftLayout">
            <summary>附加委托以将 StubSerialableObjectEditor.RightToLeftLayout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToSite">
            <summary>附加委托以将 StubSerialableObjectEditor.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AttachBackingFieldToText">
            <summary>附加委托以将 StubSerialableObjectEditor.Text 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoScaleBaseSize">
            <summary>设置 Form.get_AutoScaleBaseSize() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoScaleBaseSizeGet">
            <summary>设置 Form.get_AutoScaleBaseSize() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoScaleBaseSizeSetSize">
            <summary>设置 Form.set_AutoScaleBaseSize(Size value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoScroll">
            <summary>设置 Form.get_AutoScroll() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoScrollGet">
            <summary>设置 Form.get_AutoScroll() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoScrollOffset">
            <summary>设置 Control.get_AutoScrollOffset() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoScrollOffsetGet">
            <summary>设置 Control.get_AutoScrollOffset() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoScrollOffsetSetPoint">
            <summary>设置 Control.set_AutoScrollOffset(Point value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoScrollSetBoolean">
            <summary>设置 Form.set_AutoScroll(Boolean value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoSize">
            <summary>设置 Form.get_AutoSize() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoSizeGet">
            <summary>设置 Form.get_AutoSize() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoSizeSetBoolean">
            <summary>设置 Form.set_AutoSize(Boolean value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoValidate">
            <summary>设置 Form.get_AutoValidate() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoValidateGet">
            <summary>设置 Form.get_AutoValidate() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.AutoValidateSetAutoValidate">
            <summary>设置 Form.set_AutoValidate(AutoValidate value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.BackColor">
            <summary>设置 Form.get_BackColor() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.BackColorGet">
            <summary>设置 Form.get_BackColor() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.BackColorSetColor">
            <summary>设置 Form.set_BackColor(Color value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.BackgroundImage">
            <summary>设置 Control.get_BackgroundImage() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.BackgroundImageGet">
            <summary>设置 Control.get_BackgroundImage() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.BackgroundImageLayout">
            <summary>设置 Control.get_BackgroundImageLayout() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.BackgroundImageLayoutGet">
            <summary>设置 Control.get_BackgroundImageLayout() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.BackgroundImageLayoutSetImageLayout">
            <summary>设置 Control.set_BackgroundImageLayout(ImageLayout value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.BackgroundImageSetImage">
            <summary>设置 Control.set_BackgroundImage(Image value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.BindingContext">
            <summary>设置 ContainerControl.get_BindingContext() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.BindingContextGet">
            <summary>设置 ContainerControl.get_BindingContext() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.BindingContextSetBindingContext">
            <summary>设置 ContainerControl.set_BindingContext(BindingContext value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CanEnableIme">
            <summary>设置 ContainerControl.get_CanEnableIme() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CanEnableImeGet">
            <summary>设置 ContainerControl.get_CanEnableIme() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CanRaiseEvents">
            <summary>设置 Control.get_CanRaiseEvents() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CanRaiseEventsGet">
            <summary>设置 Control.get_CanRaiseEvents() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ContextMenu">
            <summary>设置 Control.get_ContextMenu() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ContextMenuGet">
            <summary>设置 Control.get_ContextMenu() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ContextMenuSetContextMenu">
            <summary>设置 Control.set_ContextMenu(ContextMenu value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ContextMenuStrip">
            <summary>设置 Control.get_ContextMenuStrip() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ContextMenuStripGet">
            <summary>设置 Control.get_ContextMenuStrip() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ContextMenuStripSetContextMenuStrip">
            <summary>设置 Control.set_ContextMenuStrip(ContextMenuStrip value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CreateAccessibilityInstance">
            <summary>设置 Control.CreateAccessibilityInstance() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CreateAccessibilityInstance01">
            <summary>设置 Control.CreateAccessibilityInstance() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CreateControlsInstance">
            <summary>设置 Form.CreateControlsInstance() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CreateControlsInstance01">
            <summary>设置 Form.CreateControlsInstance() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CreateHandle">
            <summary>设置 Form.CreateHandle() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CreateHandle01">
            <summary>设置 Form.CreateHandle() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CreateParams">
            <summary>设置 Form.get_CreateParams() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CreateParamsGet">
            <summary>设置 Form.get_CreateParams() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.Cursor">
            <summary>设置 Control.get_Cursor() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CursorGet">
            <summary>设置 Control.get_Cursor() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.CursorSetCursor">
            <summary>设置 Control.set_Cursor(Cursor value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefWndProc(System.Windows.Forms.Message@)">
            <summary>设置 Form.DefWndProc(Message&amp; m) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefWndProcMessageRef">
            <summary>设置 Form.DefWndProc(Message&amp; m) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultCursor">
            <summary>设置 Control.get_DefaultCursor() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultCursorGet">
            <summary>设置 Control.get_DefaultCursor() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultImeMode">
            <summary>设置 Form.get_DefaultImeMode() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultImeModeGet">
            <summary>设置 Form.get_DefaultImeMode() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultMargin">
            <summary>设置 Control.get_DefaultMargin() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultMarginGet">
            <summary>设置 Control.get_DefaultMargin() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultMaximumSize">
            <summary>设置 Control.get_DefaultMaximumSize() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultMaximumSizeGet">
            <summary>设置 Control.get_DefaultMaximumSize() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultMinimumSize">
            <summary>设置 Control.get_DefaultMinimumSize() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultMinimumSizeGet">
            <summary>设置 Control.get_DefaultMinimumSize() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultPadding">
            <summary>设置 Control.get_DefaultPadding() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultPaddingGet">
            <summary>设置 Control.get_DefaultPadding() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultSize">
            <summary>设置 Form.get_DefaultSize() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DefaultSizeGet">
            <summary>设置 Form.get_DefaultSize() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DestroyHandle">
            <summary>设置 Control.DestroyHandle() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DestroyHandle01">
            <summary>设置 Control.DestroyHandle() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DisplayRectangle">
            <summary>设置 ScrollableControl.get_DisplayRectangle() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DisplayRectangleGet">
            <summary>设置 ScrollableControl.get_DisplayRectangle() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.Dispose(System.Boolean)">
            <summary>设置 SerialableObjectEditor`1.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DisposeBoolean">
            <summary>设置 SerialableObjectEditor`1.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.Dock">
            <summary>设置 Control.get_Dock() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DockGet">
            <summary>设置 Control.get_Dock() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DockSetDockStyle">
            <summary>设置 Control.set_Dock(DockStyle value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DoubleBuffered">
            <summary>设置 Control.get_DoubleBuffered() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DoubleBufferedGet">
            <summary>设置 Control.get_DoubleBuffered() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.DoubleBufferedSetBoolean">
            <summary>设置 Control.set_DoubleBuffered(Boolean value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.Focused">
            <summary>设置 Control.get_Focused() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.FocusedGet">
            <summary>设置 Control.get_Focused() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.Font">
            <summary>设置 Control.get_Font() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.FontGet">
            <summary>设置 Control.get_Font() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.FontSetFont">
            <summary>设置 Control.set_Font(Font value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ForeColor">
            <summary>设置 Control.get_ForeColor() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ForeColorGet">
            <summary>设置 Control.get_ForeColor() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ForeColorSetColor">
            <summary>设置 Control.set_ForeColor(Color value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.GetAccessibilityObjectById(System.Int32)">
            <summary>设置 Control.GetAccessibilityObjectById(Int32 objectId) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.GetAccessibilityObjectByIdInt32">
            <summary>设置 Control.GetAccessibilityObjectById(Int32 objectId) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.GetPreferredSize(System.Drawing.Size)">
            <summary>设置 Control.GetPreferredSize(Size proposedSize) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.GetPreferredSizeSize">
            <summary>设置 Control.GetPreferredSize(Size proposedSize) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>设置 Form.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.GetScaledBoundsRectangleSizeFBoundsSpecified">
            <summary>设置 Form.GetScaledBounds(Rectangle bounds, SizeF factor, BoundsSpecified specified) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.GetService(System.Type)">
            <summary>设置 Component.GetService(Type service) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.GetServiceType">
            <summary>设置 Component.GetService(Type service) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ImeModeBase">
            <summary>设置 Control.get_ImeModeBase() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ImeModeBaseGet">
            <summary>设置 Control.get_ImeModeBase() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ImeModeBaseSetImeMode">
            <summary>设置 Control.set_ImeModeBase(ImeMode value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.InitLayout">
            <summary>设置 Control.InitLayout() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.InitLayout01">
            <summary>设置 Control.InitLayout() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.InitializeStub">
            <summary>初始化 type StubSerialableObjectEditor 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.IsInputChar(System.Char)">
            <summary>设置 Control.IsInputChar(Char charCode) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.IsInputCharChar">
            <summary>设置 Control.IsInputChar(Char charCode) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.IsInputKey(System.Windows.Forms.Keys)">
            <summary>设置 Control.IsInputKey(Keys keyData) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.IsInputKeyKeys">
            <summary>设置 Control.IsInputKey(Keys keyData) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.LayoutEngine">
            <summary>设置 Control.get_LayoutEngine() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.LayoutEngineGet">
            <summary>设置 Control.get_LayoutEngine() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.MaximumSize">
            <summary>设置 Form.get_MaximumSize() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.MaximumSizeGet">
            <summary>设置 Form.get_MaximumSize() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.MaximumSizeSetSize">
            <summary>设置 Form.set_MaximumSize(Size value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.MinimumSize">
            <summary>设置 Form.get_MinimumSize() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.MinimumSizeGet">
            <summary>设置 Form.get_MinimumSize() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.MinimumSizeSetSize">
            <summary>设置 Form.set_MinimumSize(Size value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.NotifyInvalidate(System.Drawing.Rectangle)">
            <summary>设置 Control.NotifyInvalidate(Rectangle invalidatedArea) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.NotifyInvalidateRectangle">
            <summary>设置 Control.NotifyInvalidate(Rectangle invalidatedArea) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnActivated(System.EventArgs)">
            <summary>设置 Form.OnActivated(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnActivatedEventArgs">
            <summary>设置 Form.OnActivated(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnAutoSizeChanged(System.EventArgs)">
            <summary>设置 Control.OnAutoSizeChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnAutoSizeChangedEventArgs">
            <summary>设置 Control.OnAutoSizeChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnAutoValidateChanged(System.EventArgs)">
            <summary>设置 ContainerControl.OnAutoValidateChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnAutoValidateChangedEventArgs">
            <summary>设置 ContainerControl.OnAutoValidateChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnBackColorChanged(System.EventArgs)">
            <summary>设置 Control.OnBackColorChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnBackColorChangedEventArgs">
            <summary>设置 Control.OnBackColorChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnBackgroundImageChanged(System.EventArgs)">
            <summary>设置 Form.OnBackgroundImageChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnBackgroundImageChangedEventArgs">
            <summary>设置 Form.OnBackgroundImageChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnBackgroundImageLayoutChanged(System.EventArgs)">
            <summary>设置 Form.OnBackgroundImageLayoutChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnBackgroundImageLayoutChangedEventArgs">
            <summary>设置 Form.OnBackgroundImageLayoutChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnBindingContextChanged(System.EventArgs)">
            <summary>设置 Control.OnBindingContextChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnBindingContextChangedEventArgs">
            <summary>设置 Control.OnBindingContextChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnCausesValidationChanged(System.EventArgs)">
            <summary>设置 Control.OnCausesValidationChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnCausesValidationChangedEventArgs">
            <summary>设置 Control.OnCausesValidationChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)">
            <summary>设置 Control.OnChangeUICues(UICuesEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnChangeUICuesUICuesEventArgs">
            <summary>设置 Control.OnChangeUICues(UICuesEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnClick(System.EventArgs)">
            <summary>设置 Control.OnClick(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnClickEventArgs">
            <summary>设置 Control.OnClick(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnClientSizeChanged(System.EventArgs)">
            <summary>设置 Control.OnClientSizeChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnClientSizeChangedEventArgs">
            <summary>设置 Control.OnClientSizeChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnClosed(System.EventArgs)">
            <summary>设置 Form.OnClosed(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnClosedEventArgs">
            <summary>设置 Form.OnClosed(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>设置 Form.OnClosing(CancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnClosingCancelEventArgs">
            <summary>设置 Form.OnClosing(CancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnContextMenuChanged(System.EventArgs)">
            <summary>设置 Control.OnContextMenuChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnContextMenuChangedEventArgs">
            <summary>设置 Control.OnContextMenuChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnContextMenuStripChanged(System.EventArgs)">
            <summary>设置 Control.OnContextMenuStripChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnContextMenuStripChangedEventArgs">
            <summary>设置 Control.OnContextMenuStripChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>设置 Control.OnControlAdded(ControlEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnControlAddedControlEventArgs">
            <summary>设置 Control.OnControlAdded(ControlEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>设置 Control.OnControlRemoved(ControlEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnControlRemovedControlEventArgs">
            <summary>设置 Control.OnControlRemoved(ControlEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnCreateControl">
            <summary>设置 Form.OnCreateControl() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnCreateControl01">
            <summary>设置 Form.OnCreateControl() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnCursorChanged(System.EventArgs)">
            <summary>设置 Control.OnCursorChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnCursorChangedEventArgs">
            <summary>设置 Control.OnCursorChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDeactivate(System.EventArgs)">
            <summary>设置 Form.OnDeactivate(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDeactivateEventArgs">
            <summary>设置 Form.OnDeactivate(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDockChanged(System.EventArgs)">
            <summary>设置 Control.OnDockChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDockChangedEventArgs">
            <summary>设置 Control.OnDockChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDoubleClick(System.EventArgs)">
            <summary>设置 Control.OnDoubleClick(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDoubleClickEventArgs">
            <summary>设置 Control.OnDoubleClick(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>设置 Control.OnDragDrop(DragEventArgs drgevent) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDragDropDragEventArgs">
            <summary>设置 Control.OnDragDrop(DragEventArgs drgevent) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>设置 Control.OnDragEnter(DragEventArgs drgevent) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDragEnterDragEventArgs">
            <summary>设置 Control.OnDragEnter(DragEventArgs drgevent) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDragLeave(System.EventArgs)">
            <summary>设置 Control.OnDragLeave(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDragLeaveEventArgs">
            <summary>设置 Control.OnDragLeave(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>设置 Control.OnDragOver(DragEventArgs drgevent) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnDragOverDragEventArgs">
            <summary>设置 Control.OnDragOver(DragEventArgs drgevent) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnEnabledChanged(System.EventArgs)">
            <summary>设置 Form.OnEnabledChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnEnabledChangedEventArgs">
            <summary>设置 Form.OnEnabledChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnEnter(System.EventArgs)">
            <summary>设置 Form.OnEnter(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnEnterEventArgs">
            <summary>设置 Form.OnEnter(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnFontChanged(System.EventArgs)">
            <summary>设置 Form.OnFontChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnFontChangedEventArgs">
            <summary>设置 Form.OnFontChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnForeColorChanged(System.EventArgs)">
            <summary>设置 Control.OnForeColorChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnForeColorChangedEventArgs">
            <summary>设置 Control.OnForeColorChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
            <summary>设置 Form.OnFormClosed(FormClosedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnFormClosedFormClosedEventArgs">
            <summary>设置 Form.OnFormClosed(FormClosedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>设置 Form.OnFormClosing(FormClosingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnFormClosingFormClosingEventArgs">
            <summary>设置 Form.OnFormClosing(FormClosingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>设置 Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnGiveFeedbackGiveFeedbackEventArgs">
            <summary>设置 Control.OnGiveFeedback(GiveFeedbackEventArgs gfbevent) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnGotFocus(System.EventArgs)">
            <summary>设置 Control.OnGotFocus(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnGotFocusEventArgs">
            <summary>设置 Control.OnGotFocus(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnHandleCreated(System.EventArgs)">
            <summary>设置 Form.OnHandleCreated(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnHandleCreatedEventArgs">
            <summary>设置 Form.OnHandleCreated(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnHandleDestroyed(System.EventArgs)">
            <summary>设置 Form.OnHandleDestroyed(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnHandleDestroyedEventArgs">
            <summary>设置 Form.OnHandleDestroyed(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
            <summary>设置 Form.OnHelpButtonClicked(CancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnHelpButtonClickedCancelEventArgs">
            <summary>设置 Form.OnHelpButtonClicked(CancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
            <summary>设置 Control.OnHelpRequested(HelpEventArgs hevent) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnHelpRequestedHelpEventArgs">
            <summary>设置 Control.OnHelpRequested(HelpEventArgs hevent) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnImeModeChanged(System.EventArgs)">
            <summary>设置 Control.OnImeModeChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnImeModeChangedEventArgs">
            <summary>设置 Control.OnImeModeChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
            <summary>设置 Form.OnInputLanguageChanged(InputLanguageChangedEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnInputLanguageChangedInputLanguageChangedEventArgs">
            <summary>设置 Form.OnInputLanguageChanged(InputLanguageChangedEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
            <summary>设置 Form.OnInputLanguageChanging(InputLanguageChangingEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnInputLanguageChangingInputLanguageChangingEventArgs">
            <summary>设置 Form.OnInputLanguageChanging(InputLanguageChangingEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>设置 Control.OnInvalidated(InvalidateEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnInvalidatedInvalidateEventArgs">
            <summary>设置 Control.OnInvalidated(InvalidateEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>设置 Control.OnKeyDown(KeyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnKeyDownKeyEventArgs">
            <summary>设置 Control.OnKeyDown(KeyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>设置 Control.OnKeyPress(KeyPressEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnKeyPressKeyPressEventArgs">
            <summary>设置 Control.OnKeyPress(KeyPressEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>设置 Control.OnKeyUp(KeyEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnKeyUpKeyEventArgs">
            <summary>设置 Control.OnKeyUp(KeyEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>设置 Form.OnLayout(LayoutEventArgs levent) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnLayoutLayoutEventArgs">
            <summary>设置 Form.OnLayout(LayoutEventArgs levent) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnLeave(System.EventArgs)">
            <summary>设置 Control.OnLeave(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnLeaveEventArgs">
            <summary>设置 Control.OnLeave(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnLoad(System.EventArgs)">
            <summary>设置 Form.OnLoad(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnLoadEventArgs">
            <summary>设置 Form.OnLoad(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnLocationChanged(System.EventArgs)">
            <summary>设置 Control.OnLocationChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnLocationChangedEventArgs">
            <summary>设置 Control.OnLocationChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnLostFocus(System.EventArgs)">
            <summary>设置 Control.OnLostFocus(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnLostFocusEventArgs">
            <summary>设置 Control.OnLostFocus(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMarginChanged(System.EventArgs)">
            <summary>设置 Control.OnMarginChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMarginChangedEventArgs">
            <summary>设置 Control.OnMarginChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMaximizedBoundsChanged(System.EventArgs)">
            <summary>设置 Form.OnMaximizedBoundsChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMaximizedBoundsChangedEventArgs">
            <summary>设置 Form.OnMaximizedBoundsChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMaximumSizeChanged(System.EventArgs)">
            <summary>设置 Form.OnMaximumSizeChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMaximumSizeChangedEventArgs">
            <summary>设置 Form.OnMaximumSizeChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMdiChildActivate(System.EventArgs)">
            <summary>设置 Form.OnMdiChildActivate(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMdiChildActivateEventArgs">
            <summary>设置 Form.OnMdiChildActivate(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMenuComplete(System.EventArgs)">
            <summary>设置 Form.OnMenuComplete(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMenuCompleteEventArgs">
            <summary>设置 Form.OnMenuComplete(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMenuStart(System.EventArgs)">
            <summary>设置 Form.OnMenuStart(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMenuStartEventArgs">
            <summary>设置 Form.OnMenuStart(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMinimumSizeChanged(System.EventArgs)">
            <summary>设置 Form.OnMinimumSizeChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMinimumSizeChangedEventArgs">
            <summary>设置 Form.OnMinimumSizeChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseCaptureChanged(System.EventArgs)">
            <summary>设置 Control.OnMouseCaptureChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseCaptureChangedEventArgs">
            <summary>设置 Control.OnMouseCaptureChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>设置 Control.OnMouseClick(MouseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseClickMouseEventArgs">
            <summary>设置 Control.OnMouseClick(MouseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>设置 Control.OnMouseDoubleClick(MouseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseDoubleClickMouseEventArgs">
            <summary>设置 Control.OnMouseDoubleClick(MouseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>设置 Control.OnMouseDown(MouseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseDownMouseEventArgs">
            <summary>设置 Control.OnMouseDown(MouseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseEnter(System.EventArgs)">
            <summary>设置 Control.OnMouseEnter(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseEnterEventArgs">
            <summary>设置 Control.OnMouseEnter(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseHover(System.EventArgs)">
            <summary>设置 Control.OnMouseHover(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseHoverEventArgs">
            <summary>设置 Control.OnMouseHover(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseLeave(System.EventArgs)">
            <summary>设置 Control.OnMouseLeave(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseLeaveEventArgs">
            <summary>设置 Control.OnMouseLeave(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>设置 Control.OnMouseMove(MouseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseMoveMouseEventArgs">
            <summary>设置 Control.OnMouseMove(MouseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>设置 Control.OnMouseUp(MouseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseUpMouseEventArgs">
            <summary>设置 Control.OnMouseUp(MouseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>设置 ScrollableControl.OnMouseWheel(MouseEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMouseWheelMouseEventArgs">
            <summary>设置 ScrollableControl.OnMouseWheel(MouseEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMove(System.EventArgs)">
            <summary>设置 Control.OnMove(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnMoveEventArgs">
            <summary>设置 Control.OnMove(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>设置 Control.OnNotifyMessage(Message m) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnNotifyMessageMessage">
            <summary>设置 Control.OnNotifyMessage(Message m) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnPaddingChanged(System.EventArgs)">
            <summary>设置 ScrollableControl.OnPaddingChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnPaddingChangedEventArgs">
            <summary>设置 ScrollableControl.OnPaddingChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>设置 Form.OnPaint(PaintEventArgs e) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>设置 ScrollableControl.OnPaintBackground(PaintEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnPaintBackgroundPaintEventArgs">
            <summary>设置 ScrollableControl.OnPaintBackground(PaintEventArgs e) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnPaintPaintEventArgs">
            <summary>设置 Form.OnPaint(PaintEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentBackColorChanged(System.EventArgs)">
            <summary>设置 Control.OnParentBackColorChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentBackColorChangedEventArgs">
            <summary>设置 Control.OnParentBackColorChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentBackgroundImageChanged(System.EventArgs)">
            <summary>设置 Control.OnParentBackgroundImageChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentBackgroundImageChangedEventArgs">
            <summary>设置 Control.OnParentBackgroundImageChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentBindingContextChanged(System.EventArgs)">
            <summary>设置 Control.OnParentBindingContextChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentBindingContextChangedEventArgs">
            <summary>设置 Control.OnParentBindingContextChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentChanged(System.EventArgs)">
            <summary>设置 ContainerControl.OnParentChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentChangedEventArgs">
            <summary>设置 ContainerControl.OnParentChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentCursorChanged(System.EventArgs)">
            <summary>设置 Control.OnParentCursorChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentCursorChangedEventArgs">
            <summary>设置 Control.OnParentCursorChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentEnabledChanged(System.EventArgs)">
            <summary>设置 Control.OnParentEnabledChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentEnabledChangedEventArgs">
            <summary>设置 Control.OnParentEnabledChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentFontChanged(System.EventArgs)">
            <summary>设置 Control.OnParentFontChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentFontChangedEventArgs">
            <summary>设置 Control.OnParentFontChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentForeColorChanged(System.EventArgs)">
            <summary>设置 Control.OnParentForeColorChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentForeColorChangedEventArgs">
            <summary>设置 Control.OnParentForeColorChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentRightToLeftChanged(System.EventArgs)">
            <summary>设置 Control.OnParentRightToLeftChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentRightToLeftChangedEventArgs">
            <summary>设置 Control.OnParentRightToLeftChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentVisibleChanged(System.EventArgs)">
            <summary>设置 Control.OnParentVisibleChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnParentVisibleChangedEventArgs">
            <summary>设置 Control.OnParentVisibleChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>设置 Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnPreviewKeyDownPreviewKeyDownEventArgs">
            <summary>设置 Control.OnPreviewKeyDown(PreviewKeyDownEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnPrint(System.Windows.Forms.PaintEventArgs)">
            <summary>设置 Control.OnPrint(PaintEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnPrintPaintEventArgs">
            <summary>设置 Control.OnPrint(PaintEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>设置 Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnQueryContinueDragQueryContinueDragEventArgs">
            <summary>设置 Control.OnQueryContinueDrag(QueryContinueDragEventArgs qcdevent) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnRegionChanged(System.EventArgs)">
            <summary>设置 Control.OnRegionChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnRegionChangedEventArgs">
            <summary>设置 Control.OnRegionChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnResize(System.EventArgs)">
            <summary>设置 Form.OnResize(EventArgs e) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnResizeBegin(System.EventArgs)">
            <summary>设置 Form.OnResizeBegin(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnResizeBeginEventArgs">
            <summary>设置 Form.OnResizeBegin(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnResizeEnd(System.EventArgs)">
            <summary>设置 Form.OnResizeEnd(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnResizeEndEventArgs">
            <summary>设置 Form.OnResizeEnd(EventArgs e) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnResizeEventArgs">
            <summary>设置 Form.OnResize(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnRightToLeftChanged(System.EventArgs)">
            <summary>设置 ScrollableControl.OnRightToLeftChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnRightToLeftChangedEventArgs">
            <summary>设置 ScrollableControl.OnRightToLeftChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnRightToLeftLayoutChanged(System.EventArgs)">
            <summary>设置 Form.OnRightToLeftLayoutChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnRightToLeftLayoutChangedEventArgs">
            <summary>设置 Form.OnRightToLeftLayoutChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>设置 ScrollableControl.OnScroll(ScrollEventArgs se) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnScrollScrollEventArgs">
            <summary>设置 ScrollableControl.OnScroll(ScrollEventArgs se) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnShown(System.EventArgs)">
            <summary>设置 Form.OnShown(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnShownEventArgs">
            <summary>设置 Form.OnShown(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnSizeChanged(System.EventArgs)">
            <summary>设置 Control.OnSizeChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnSizeChangedEventArgs">
            <summary>设置 Control.OnSizeChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnStyleChanged(System.EventArgs)">
            <summary>设置 Form.OnStyleChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnStyleChangedEventArgs">
            <summary>设置 Form.OnStyleChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnSystemColorsChanged(System.EventArgs)">
            <summary>设置 Control.OnSystemColorsChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnSystemColorsChangedEventArgs">
            <summary>设置 Control.OnSystemColorsChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnTabIndexChanged(System.EventArgs)">
            <summary>设置 Control.OnTabIndexChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnTabIndexChangedEventArgs">
            <summary>设置 Control.OnTabIndexChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnTabStopChanged(System.EventArgs)">
            <summary>设置 Control.OnTabStopChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnTabStopChangedEventArgs">
            <summary>设置 Control.OnTabStopChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnTextChanged(System.EventArgs)">
            <summary>设置 Form.OnTextChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnTextChangedEventArgs">
            <summary>设置 Form.OnTextChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnValidated(System.EventArgs)">
            <summary>设置 Control.OnValidated(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnValidatedEventArgs">
            <summary>设置 Control.OnValidated(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>设置 Control.OnValidating(CancelEventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnValidatingCancelEventArgs">
            <summary>设置 Control.OnValidating(CancelEventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnVisibleChanged(System.EventArgs)">
            <summary>设置 Form.OnVisibleChanged(EventArgs e) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.OnVisibleChangedEventArgs">
            <summary>设置 Form.OnVisibleChanged(EventArgs e) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>设置 Control.PreProcessMessage(Message&amp; msg) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.PreProcessMessageMessageRef">
            <summary>设置 Control.PreProcessMessage(Message&amp; msg) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>设置 Form.ProcessCmdKey(Message&amp; msg, Keys keyData) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessCmdKeyMessageRefKeys">
            <summary>设置 Form.ProcessCmdKey(Message&amp; msg, Keys keyData) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessDialogChar(System.Char)">
            <summary>设置 Form.ProcessDialogChar(Char charCode) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessDialogCharChar">
            <summary>设置 Form.ProcessDialogChar(Char charCode) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>设置 Form.ProcessDialogKey(Keys keyData) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessDialogKeyKeys">
            <summary>设置 Form.ProcessDialogKey(Keys keyData) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessKeyEventArgs(System.Windows.Forms.Message@)">
            <summary>设置 Control.ProcessKeyEventArgs(Message&amp; m) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessKeyEventArgsMessageRef">
            <summary>设置 Control.ProcessKeyEventArgs(Message&amp; m) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>设置 Control.ProcessKeyMessage(Message&amp; m) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessKeyMessageMessageRef">
            <summary>设置 Control.ProcessKeyMessage(Message&amp; m) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>设置 Form.ProcessKeyPreview(Message&amp; m) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessKeyPreviewMessageRef">
            <summary>设置 Form.ProcessKeyPreview(Message&amp; m) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessMnemonic(System.Char)">
            <summary>设置 Form.ProcessMnemonic(Char charCode) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessMnemonicChar">
            <summary>设置 Form.ProcessMnemonic(Char charCode) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessTabKey(System.Boolean)">
            <summary>设置 Form.ProcessTabKey(Boolean forward) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ProcessTabKeyBoolean">
            <summary>设置 Form.ProcessTabKey(Boolean forward) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.Refresh">
            <summary>设置 Control.Refresh() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.Refresh01">
            <summary>设置 Control.Refresh() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ResetBackColor">
            <summary>设置 Control.ResetBackColor() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ResetBackColor01">
            <summary>设置 Control.ResetBackColor() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ResetCursor">
            <summary>设置 Control.ResetCursor() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ResetCursor01">
            <summary>设置 Control.ResetCursor() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ResetFont">
            <summary>设置 Control.ResetFont() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ResetFont01">
            <summary>设置 Control.ResetFont() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ResetForeColor">
            <summary>设置 Control.ResetForeColor() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ResetForeColor01">
            <summary>设置 Control.ResetForeColor() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ResetRightToLeft">
            <summary>设置 Control.ResetRightToLeft() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ResetRightToLeft01">
            <summary>设置 Control.ResetRightToLeft() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ResetText">
            <summary>设置 Control.ResetText() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ResetText01">
            <summary>设置 Control.ResetText() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.RightToLeft">
            <summary>设置 Control.get_RightToLeft() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.RightToLeftGet">
            <summary>设置 Control.get_RightToLeft() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.RightToLeftLayout">
            <summary>设置 Form.get_RightToLeftLayout() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.RightToLeftLayoutGet">
            <summary>设置 Form.get_RightToLeftLayout() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.RightToLeftLayoutSetBoolean">
            <summary>设置 Form.set_RightToLeftLayout(Boolean value) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.RightToLeftSetRightToLeft">
            <summary>设置 Control.set_RightToLeft(RightToLeft value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ScaleChildren">
            <summary>设置 Control.get_ScaleChildren() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ScaleChildrenGet">
            <summary>设置 Control.get_ScaleChildren() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>设置 Form.ScaleControl(SizeF factor, BoundsSpecified specified) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ScaleControlSizeFBoundsSpecified">
            <summary>设置 Form.ScaleControl(SizeF factor, BoundsSpecified specified) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ScaleCore(System.Single,System.Single)">
            <summary>设置 Form.ScaleCore(Single x, Single y) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ScaleCoreSingleSingle">
            <summary>设置 Form.ScaleCore(Single x, Single y) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ScrollToControl(System.Windows.Forms.Control)">
            <summary>设置 ScrollableControl.ScrollToControl(Control activeControl) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ScrollToControlControl">
            <summary>设置 ScrollableControl.ScrollToControl(Control activeControl) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.Select(System.Boolean,System.Boolean)">
            <summary>设置 Form.Select(Boolean directed, Boolean forward) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.SelectBooleanBoolean">
            <summary>设置 Form.Select(Boolean directed, Boolean forward) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>设置 Form.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.SetBoundsCoreInt32Int32Int32Int32BoundsSpecified">
            <summary>设置 Form.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.SetClientSizeCore(System.Int32,System.Int32)">
            <summary>设置 Form.SetClientSizeCore(Int32 x, Int32 y) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.SetClientSizeCoreInt32Int32">
            <summary>设置 Form.SetClientSizeCore(Int32 x, Int32 y) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.SetVisibleCore(System.Boolean)">
            <summary>设置 Form.SetVisibleCore(Boolean value) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.SetVisibleCoreBoolean">
            <summary>设置 Form.SetVisibleCore(Boolean value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ShowFocusCues">
            <summary>设置 Control.get_ShowFocusCues() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ShowFocusCuesGet">
            <summary>设置 Control.get_ShowFocusCues() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ShowKeyboardCues">
            <summary>设置 Control.get_ShowKeyboardCues() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ShowKeyboardCuesGet">
            <summary>设置 Control.get_ShowKeyboardCues() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ShowWithoutActivation">
            <summary>设置 Form.get_ShowWithoutActivation() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ShowWithoutActivationGet">
            <summary>设置 Form.get_ShowWithoutActivation() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.Site">
            <summary>设置 Control.get_Site() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.SiteGet">
            <summary>设置 Control.get_Site() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.SiteSetISite">
            <summary>设置 Control.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.SizeFromClientSize(System.Drawing.Size)">
            <summary>设置 Control.SizeFromClientSize(Size clientSize) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.SizeFromClientSizeSize">
            <summary>设置 Control.SizeFromClientSize(Size clientSize) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.Text">
            <summary>设置 Form.get_Text() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.TextGet">
            <summary>设置 Form.get_Text() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.TextSetString">
            <summary>设置 Form.set_Text(String value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ToString">
            <summary>设置 Form.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ToString01">
            <summary>设置 Form.ToString() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.UpdateDefaultButton">
            <summary>设置 Form.UpdateDefaultButton() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.UpdateDefaultButton01">
            <summary>设置 Form.UpdateDefaultButton() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ValidateChildren">
            <summary>设置 Form.ValidateChildren() 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
            <summary>设置 Form.ValidateChildren(ValidationConstraints validationConstraints) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ValidateChildren01">
            <summary>设置 Form.ValidateChildren() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.ValidateChildrenValidationConstraints">
            <summary>设置 Form.ValidateChildren(ValidationConstraints validationConstraints) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.WndProc(System.Windows.Forms.Message@)">
            <summary>设置 Form.WndProc(Message&amp; m) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSerialableObjectEditor`1.WndProcMessageRef">
            <summary>设置 Form.WndProc(Message&amp; m) 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubSettingClass">
            <summary>WolfInv.com.BaseObjectsLib.SettingClass 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSettingClass.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSettingClass.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSettingClass.InitializeStub">
            <summary>初始化 type StubSettingClass 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSettingClass.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSettingClass.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSettingClass.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSettingClass.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubStockIndexMongoData">
            <summary>WolfInv.com.BaseObjectsLib.StockIndexMongoData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubStockIndexMongoData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubStockIndexMongoData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubStockIndexMongoData.InitializeStub">
            <summary>初始化 type StubStockIndexMongoData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubStockIndexMongoData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubStockIndexMongoData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubStockIndexMongoData.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubStockIndexMongoData.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubStockInfoMongoData">
            <summary>WolfInv.com.BaseObjectsLib.StockInfoMongoData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubStockInfoMongoData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubStockInfoMongoData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubStockInfoMongoData.InitializeStub">
            <summary>初始化 type StubStockInfoMongoData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubStockInfoMongoData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubStockInfoMongoData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubStockInfoMongoData.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubStockInfoMongoData.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubStockMongoData">
            <summary>WolfInv.com.BaseObjectsLib.StockMongoData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubStockMongoData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubStockMongoData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubStockMongoData.InitializeStub">
            <summary>初始化 type StubStockMongoData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubStockMongoData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubStockMongoData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubStockMongoData.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubStockMongoData.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubSystemParams`2">
            <summary>WolfInv.com.BaseObjectsLib.SystemParams`2 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSystemParams`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSystemParams`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSystemParams`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSystemParams`2.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSystemParams`2.InitializeStub">
            <summary>初始化 type StubSystemParams 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSystemParams`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubSystemParams`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubSystemParams`2.OnDeserialization(System.Object)">
            <summary>设置 Dictionary`2.OnDeserialization(Object sender) 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubSystemParams`2.OnDeserializationObject">
            <summary>设置 Dictionary`2.OnDeserialization(Object sender) 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubTimeSerialData">
            <summary>WolfInv.com.BaseObjectsLib.TimeSerialData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubTimeSerialData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubTimeSerialData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubTimeSerialData.InitializeStub">
            <summary>初始化 type StubTimeSerialData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubTimeSerialData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubTimeSerialData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubTimeSerialData.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubTimeSerialData.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubTraceChance`1">
            <summary>WolfInv.com.BaseObjectsLib.TraceChance`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubTraceChance`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubTraceChance`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubTraceChance`1.CheckNeedEndTheChance``1(WolfInv.com.BaseObjectsLib.ChanceClass{``0},System.Boolean)">
            <summary>设置 TraceChance`1.CheckNeedEndTheChance(ChanceClass`1&lt;!!0&gt; cc, Boolean LastExpectMatched) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubTraceChance`1.CheckNeedEndTheChanceOf1ChanceClassOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{WolfInv.com.BaseObjectsLib.ChanceClass{``0},System.Boolean,System.Boolean})">
            <summary>设置 CheckNeedEndTheChance(ChanceClass`1&lt;!!0&gt; cc, Boolean LastExpectMatched) 的存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubTraceChance`1.GetChipAmountOf1DoubleChanceClassOfM0AmoutSerials``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Double,WolfInv.com.BaseObjectsLib.ChanceClass{``0},WolfInv.com.BaseObjectsLib.AmoutSerials,System.Int64})">
            <summary>设置 getChipAmount(Double RestCash, ChanceClass`1&lt;!!0&gt; cc, AmoutSerials amts) 的存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubTraceChance`1.InitializeStub">
            <summary>初始化 type StubTraceChance 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubTraceChance`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubTraceChance`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubTraceChance`1.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubTraceChance`1.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubTraceChance`1.getChipAmount``1(System.Double,WolfInv.com.BaseObjectsLib.ChanceClass{``0},WolfInv.com.BaseObjectsLib.AmoutSerials)">
            <summary>设置 TraceChance`1.getChipAmount(Double RestCash, ChanceClass`1&lt;!!0&gt; cc, AmoutSerials amts) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubXDXRData">
            <summary>WolfInv.com.BaseObjectsLib.XDXRData 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubXDXRData.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubXDXRData.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubXDXRData.InitializeStub">
            <summary>初始化 type StubXDXRData 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubXDXRData.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubXDXRData.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubXDXRData.ToString">
            <summary>设置 DetailStringClass.ToString() 的 存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubXDXRData.ToString01">
            <summary>设置 DetailStringClass.ToString() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile">
            <summary>WolfInv.com.BaseObjectsLib.iDbFile 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.#ctor">
            <summary>初始化 type StubiDbFile 的新实例</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.WolfInv#com#BaseObjectsLib#iDbFile#AllowMutliSelect">
            <summary>设置 iDbFile.get_AllowMutliSelect() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.AllowMutliSelectGet">
            <summary>设置 iDbFile.get_AllowMutliSelect() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.GetAllListFromDbOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>设置 getAllListFromDb() 的存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.SaveDBFileOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Boolean})">
            <summary>设置 SaveDBFile(List`1&lt;!!0&gt; list) 的存根</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.StrDbXmlGet">
            <summary>设置 iDbFile.get_strDbXml() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.StrKeyGet">
            <summary>设置 iDbFile.get_strKey() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.StrKeyValue">
            <summary>设置 iDbFile.strKeyValue() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.StrObjectNameGet">
            <summary>设置 iDbFile.get_strObjectName() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.WolfInv#com#BaseObjectsLib#iDbFile#SaveDBFile``1(System.Collections.Generic.List{``0})">
            <summary>设置 iDbFile.SaveDBFile(List`1&lt;!!0&gt; list) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.WolfInv#com#BaseObjectsLib#iDbFile#getAllListFromDb``1">
            <summary>设置 iDbFile.getAllListFromDb() 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.WolfInv#com#BaseObjectsLib#iDbFile#strKeyValue">
            <summary>设置 iDbFile.strKeyValue() 的 存根</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.WolfInv#com#BaseObjectsLib#iDbFile#strDbXml">
            <summary>设置 iDbFile.get_strDbXml() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.WolfInv#com#BaseObjectsLib#iDbFile#strKey">
            <summary>设置 iDbFile.get_strKey() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubiDbFile.WolfInv#com#BaseObjectsLib#iDbFile#strObjectName">
            <summary>设置 iDbFile.get_strObjectName() 的 stub</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubiDetailListParamsable">
            <summary>WolfInv.com.BaseObjectsLib.iDetailListParamsable 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiDetailListParamsable.#ctor">
            <summary>初始化 type StubiDetailListParamsable 的新实例</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiDetailListParamsable.ToDetailString">
            <summary>设置 iDetailListParamsable.ToDetailString() 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiDetailListParamsable.WolfInv#com#BaseObjectsLib#iDetailListParamsable#ToDetailString">
            <summary>设置 iDetailListParamsable.ToDetailString() 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubiFillable">
            <summary>WolfInv.com.BaseObjectsLib.iFillable 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiFillable.#ctor">
            <summary>初始化 type StubiFillable 的新实例</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiFillable.FillByDataRowDataRow">
            <summary>设置 iFillable.FillByDataRow(DataRow dr) 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiFillable.FillRowDataRow">
            <summary>设置 iFillable.FillRow(DataRow dr) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiFillable.WolfInv#com#BaseObjectsLib#iFillable#FillByDataRow(System.Data.DataRow)">
            <summary>设置 iFillable.FillByDataRow(DataRow dr) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiFillable.WolfInv#com#BaseObjectsLib#iFillable#FillRow(System.Data.DataRow)">
            <summary>设置 iFillable.FillRow(DataRow dr) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubiListFillable">
            <summary>WolfInv.com.BaseObjectsLib.iListFillable 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiListFillable.#ctor">
            <summary>初始化 type StubiListFillable 的新实例</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiListFillable.FillByItemsOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[]})">
            <summary>设置 FillByItems(!!0[] item) 的存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiListFillable.GetObjectByIdOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,``0})">
            <summary>设置 getObjectById(Int32 id) 的存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiListFillable.WolfInv#com#BaseObjectsLib#iListFillable#FillByItems``1(``0[])">
            <summary>设置 iListFillable.FillByItems(!!0[] item) 的 存根</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiListFillable.WolfInv#com#BaseObjectsLib#iListFillable#getObjectById``1(System.Int32)">
            <summary>设置 iListFillable.getObjectById(Int32 id) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubiSerialJsonClass`1">
            <summary>WolfInv.com.BaseObjectsLib.iSerialJsonClass`1 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiSerialJsonClass`1.#ctor">
            <summary>初始化 type StubiSerialJsonClass 的新实例</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiSerialJsonClass`1.GetObjectByJsonStringString">
            <summary>设置 iSerialJsonClass`1.getObjectByJsonString(String str) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiSerialJsonClass`1.WolfInv#com#BaseObjectsLib#iSerialJsonClass{T}#getObjectByJsonString(System.String)">
            <summary>设置 iSerialJsonClass`1.getObjectByJsonString(String str) 的 存根</summary>
        </member>
        <member name="T:WolfInv.com.BaseObjectsLib.Fakes.StubiVolAmount">
            <summary>WolfInv.com.BaseObjectsLib.iVolAmount 的存根类型</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiVolAmount.#ctor">
            <summary>初始化 type StubiVolAmount 的新实例</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiVolAmount.AmountGet">
            <summary>设置 iVolAmount.get_amount() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiVolAmount.AmountSetDouble">
            <summary>设置 iVolAmount.set_amount(Double value) 的 stub</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiVolAmount.AttachBackingFieldToamount">
            <summary>附加委托以将 StubiVolAmount.amount 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:WolfInv.com.BaseObjectsLib.Fakes.StubiVolAmount.AttachBackingFieldTovol">
            <summary>附加委托以将 StubiVolAmount.vol 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiVolAmount.VolGet">
            <summary>设置 iVolAmount.get_vol() 的 stub</summary>
        </member>
        <member name="F:WolfInv.com.BaseObjectsLib.Fakes.StubiVolAmount.VolSetDouble">
            <summary>设置 iVolAmount.set_vol(Double value) 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubiVolAmount.WolfInv#com#BaseObjectsLib#iVolAmount#amount">
            <summary>设置 iVolAmount.get_amount() 的 stub</summary>
        </member>
        <member name="P:WolfInv.com.BaseObjectsLib.Fakes.StubiVolAmount.WolfInv#com#BaseObjectsLib#iVolAmount#vol">
            <summary>设置 iVolAmount.get_vol() 的 stub</summary>
        </member>
    </members>
</doc>
